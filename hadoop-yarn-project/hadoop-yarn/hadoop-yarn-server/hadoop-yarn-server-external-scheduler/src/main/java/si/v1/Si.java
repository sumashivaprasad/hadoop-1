// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: si.proto

package si.v1;

public final class Si {
  private Si() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(si.v1.Si.siSecret);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RegisterResourceManagerRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.RegisterResourceManagerRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * An ID which can uniquely identify a RM **cluster**. (For example, if a RM cluster has multiple manager instances for HA purpose, they should use the same information when do registration).
     * If RM register with the same id, all previous scheduling state in memory will be cleaned up, and expect RM report full scheduling state after registration.
     * </pre>
     *
     * <code>string rmId = 1;</code>
     */
    java.lang.String getRmId();
    /**
     * <pre>
     * An ID which can uniquely identify a RM **cluster**. (For example, if a RM cluster has multiple manager instances for HA purpose, they should use the same information when do registration).
     * If RM register with the same id, all previous scheduling state in memory will be cleaned up, and expect RM report full scheduling state after registration.
     * </pre>
     *
     * <code>string rmId = 1;</code>
     */
    com.google.protobuf.ByteString
        getRmIdBytes();

    /**
     * <pre>
     * Version of RM scheduler interface client.
     * </pre>
     *
     * <code>string version = 2;</code>
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * Version of RM scheduler interface client.
     * </pre>
     *
     * <code>string version = 2;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * Policy group name:
     * This defines which policy to use. Policy should be statically configured. (Think about network security group concept of ec2).
     * Different RMs can refer to the same policyGroup if their static configuration is identical.
     * </pre>
     *
     * <code>string policyGroup = 3;</code>
     */
    java.lang.String getPolicyGroup();
    /**
     * <pre>
     * Policy group name:
     * This defines which policy to use. Policy should be statically configured. (Think about network security group concept of ec2).
     * Different RMs can refer to the same policyGroup if their static configuration is identical.
     * </pre>
     *
     * <code>string policyGroup = 3;</code>
     */
    com.google.protobuf.ByteString
        getPolicyGroupBytes();
  }
  /**
   * <pre>
   *service AdminService {
   * // Include
   * //   addQueueInfo.
   * //   removeQueueInfo.
   * //   updateQueueInfo.
   * // Ref: org.apache.hadoop.yarn.webapp.dao.SchedConfUpdateInfo
   *rpc UpdateConfig (UpdateConfigRequest)
   *returns (UpdateConfigResponse) {}
   *}
   * </pre>
   *
   * Protobuf type {@code si.v1.RegisterResourceManagerRequest}
   */
  public  static final class RegisterResourceManagerRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.RegisterResourceManagerRequest)
      RegisterResourceManagerRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RegisterResourceManagerRequest.newBuilder() to construct.
    private RegisterResourceManagerRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RegisterResourceManagerRequest() {
      rmId_ = "";
      version_ = "";
      policyGroup_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterResourceManagerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              rmId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              policyGroup_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_RegisterResourceManagerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_RegisterResourceManagerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.RegisterResourceManagerRequest.class, si.v1.Si.RegisterResourceManagerRequest.Builder.class);
    }

    public static final int RMID_FIELD_NUMBER = 1;
    private volatile java.lang.Object rmId_;
    /**
     * <pre>
     * An ID which can uniquely identify a RM **cluster**. (For example, if a RM cluster has multiple manager instances for HA purpose, they should use the same information when do registration).
     * If RM register with the same id, all previous scheduling state in memory will be cleaned up, and expect RM report full scheduling state after registration.
     * </pre>
     *
     * <code>string rmId = 1;</code>
     */
    public java.lang.String getRmId() {
      java.lang.Object ref = rmId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rmId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * An ID which can uniquely identify a RM **cluster**. (For example, if a RM cluster has multiple manager instances for HA purpose, they should use the same information when do registration).
     * If RM register with the same id, all previous scheduling state in memory will be cleaned up, and expect RM report full scheduling state after registration.
     * </pre>
     *
     * <code>string rmId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRmIdBytes() {
      java.lang.Object ref = rmId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rmId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * Version of RM scheduler interface client.
     * </pre>
     *
     * <code>string version = 2;</code>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Version of RM scheduler interface client.
     * </pre>
     *
     * <code>string version = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POLICYGROUP_FIELD_NUMBER = 3;
    private volatile java.lang.Object policyGroup_;
    /**
     * <pre>
     * Policy group name:
     * This defines which policy to use. Policy should be statically configured. (Think about network security group concept of ec2).
     * Different RMs can refer to the same policyGroup if their static configuration is identical.
     * </pre>
     *
     * <code>string policyGroup = 3;</code>
     */
    public java.lang.String getPolicyGroup() {
      java.lang.Object ref = policyGroup_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        policyGroup_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Policy group name:
     * This defines which policy to use. Policy should be statically configured. (Think about network security group concept of ec2).
     * Different RMs can refer to the same policyGroup if their static configuration is identical.
     * </pre>
     *
     * <code>string policyGroup = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPolicyGroupBytes() {
      java.lang.Object ref = policyGroup_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        policyGroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRmIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rmId_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, version_);
      }
      if (!getPolicyGroupBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, policyGroup_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRmIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rmId_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, version_);
      }
      if (!getPolicyGroupBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, policyGroup_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.RegisterResourceManagerRequest)) {
        return super.equals(obj);
      }
      si.v1.Si.RegisterResourceManagerRequest other = (si.v1.Si.RegisterResourceManagerRequest) obj;

      boolean result = true;
      result = result && getRmId()
          .equals(other.getRmId());
      result = result && getVersion()
          .equals(other.getVersion());
      result = result && getPolicyGroup()
          .equals(other.getPolicyGroup());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RMID_FIELD_NUMBER;
      hash = (53 * hash) + getRmId().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + POLICYGROUP_FIELD_NUMBER;
      hash = (53 * hash) + getPolicyGroup().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.RegisterResourceManagerRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RegisterResourceManagerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.RegisterResourceManagerRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *service AdminService {
     * // Include
     * //   addQueueInfo.
     * //   removeQueueInfo.
     * //   updateQueueInfo.
     * // Ref: org.apache.hadoop.yarn.webapp.dao.SchedConfUpdateInfo
     *rpc UpdateConfig (UpdateConfigRequest)
     *returns (UpdateConfigResponse) {}
     *}
     * </pre>
     *
     * Protobuf type {@code si.v1.RegisterResourceManagerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.RegisterResourceManagerRequest)
        si.v1.Si.RegisterResourceManagerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_RegisterResourceManagerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_RegisterResourceManagerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.RegisterResourceManagerRequest.class, si.v1.Si.RegisterResourceManagerRequest.Builder.class);
      }

      // Construct using si.v1.Si.RegisterResourceManagerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        rmId_ = "";

        version_ = "";

        policyGroup_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_RegisterResourceManagerRequest_descriptor;
      }

      public si.v1.Si.RegisterResourceManagerRequest getDefaultInstanceForType() {
        return si.v1.Si.RegisterResourceManagerRequest.getDefaultInstance();
      }

      public si.v1.Si.RegisterResourceManagerRequest build() {
        si.v1.Si.RegisterResourceManagerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.RegisterResourceManagerRequest buildPartial() {
        si.v1.Si.RegisterResourceManagerRequest result = new si.v1.Si.RegisterResourceManagerRequest(this);
        result.rmId_ = rmId_;
        result.version_ = version_;
        result.policyGroup_ = policyGroup_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.RegisterResourceManagerRequest) {
          return mergeFrom((si.v1.Si.RegisterResourceManagerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.RegisterResourceManagerRequest other) {
        if (other == si.v1.Si.RegisterResourceManagerRequest.getDefaultInstance()) return this;
        if (!other.getRmId().isEmpty()) {
          rmId_ = other.rmId_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getPolicyGroup().isEmpty()) {
          policyGroup_ = other.policyGroup_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.RegisterResourceManagerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.RegisterResourceManagerRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object rmId_ = "";
      /**
       * <pre>
       * An ID which can uniquely identify a RM **cluster**. (For example, if a RM cluster has multiple manager instances for HA purpose, they should use the same information when do registration).
       * If RM register with the same id, all previous scheduling state in memory will be cleaned up, and expect RM report full scheduling state after registration.
       * </pre>
       *
       * <code>string rmId = 1;</code>
       */
      public java.lang.String getRmId() {
        java.lang.Object ref = rmId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          rmId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An ID which can uniquely identify a RM **cluster**. (For example, if a RM cluster has multiple manager instances for HA purpose, they should use the same information when do registration).
       * If RM register with the same id, all previous scheduling state in memory will be cleaned up, and expect RM report full scheduling state after registration.
       * </pre>
       *
       * <code>string rmId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRmIdBytes() {
        java.lang.Object ref = rmId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rmId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An ID which can uniquely identify a RM **cluster**. (For example, if a RM cluster has multiple manager instances for HA purpose, they should use the same information when do registration).
       * If RM register with the same id, all previous scheduling state in memory will be cleaned up, and expect RM report full scheduling state after registration.
       * </pre>
       *
       * <code>string rmId = 1;</code>
       */
      public Builder setRmId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rmId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An ID which can uniquely identify a RM **cluster**. (For example, if a RM cluster has multiple manager instances for HA purpose, they should use the same information when do registration).
       * If RM register with the same id, all previous scheduling state in memory will be cleaned up, and expect RM report full scheduling state after registration.
       * </pre>
       *
       * <code>string rmId = 1;</code>
       */
      public Builder clearRmId() {
        
        rmId_ = getDefaultInstance().getRmId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An ID which can uniquely identify a RM **cluster**. (For example, if a RM cluster has multiple manager instances for HA purpose, they should use the same information when do registration).
       * If RM register with the same id, all previous scheduling state in memory will be cleaned up, and expect RM report full scheduling state after registration.
       * </pre>
       *
       * <code>string rmId = 1;</code>
       */
      public Builder setRmIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rmId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * Version of RM scheduler interface client.
       * </pre>
       *
       * <code>string version = 2;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Version of RM scheduler interface client.
       * </pre>
       *
       * <code>string version = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Version of RM scheduler interface client.
       * </pre>
       *
       * <code>string version = 2;</code>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Version of RM scheduler interface client.
       * </pre>
       *
       * <code>string version = 2;</code>
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Version of RM scheduler interface client.
       * </pre>
       *
       * <code>string version = 2;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object policyGroup_ = "";
      /**
       * <pre>
       * Policy group name:
       * This defines which policy to use. Policy should be statically configured. (Think about network security group concept of ec2).
       * Different RMs can refer to the same policyGroup if their static configuration is identical.
       * </pre>
       *
       * <code>string policyGroup = 3;</code>
       */
      public java.lang.String getPolicyGroup() {
        java.lang.Object ref = policyGroup_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          policyGroup_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Policy group name:
       * This defines which policy to use. Policy should be statically configured. (Think about network security group concept of ec2).
       * Different RMs can refer to the same policyGroup if their static configuration is identical.
       * </pre>
       *
       * <code>string policyGroup = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPolicyGroupBytes() {
        java.lang.Object ref = policyGroup_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          policyGroup_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Policy group name:
       * This defines which policy to use. Policy should be statically configured. (Think about network security group concept of ec2).
       * Different RMs can refer to the same policyGroup if their static configuration is identical.
       * </pre>
       *
       * <code>string policyGroup = 3;</code>
       */
      public Builder setPolicyGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        policyGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Policy group name:
       * This defines which policy to use. Policy should be statically configured. (Think about network security group concept of ec2).
       * Different RMs can refer to the same policyGroup if their static configuration is identical.
       * </pre>
       *
       * <code>string policyGroup = 3;</code>
       */
      public Builder clearPolicyGroup() {
        
        policyGroup_ = getDefaultInstance().getPolicyGroup();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Policy group name:
       * This defines which policy to use. Policy should be statically configured. (Think about network security group concept of ec2).
       * Different RMs can refer to the same policyGroup if their static configuration is identical.
       * </pre>
       *
       * <code>string policyGroup = 3;</code>
       */
      public Builder setPolicyGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        policyGroup_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.RegisterResourceManagerRequest)
    }

    // @@protoc_insertion_point(class_scope:si.v1.RegisterResourceManagerRequest)
    private static final si.v1.Si.RegisterResourceManagerRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.RegisterResourceManagerRequest();
    }

    public static si.v1.Si.RegisterResourceManagerRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RegisterResourceManagerRequest>
        PARSER = new com.google.protobuf.AbstractParser<RegisterResourceManagerRequest>() {
      public RegisterResourceManagerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterResourceManagerRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RegisterResourceManagerRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterResourceManagerRequest> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.RegisterResourceManagerRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegisterResourceManagerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.RegisterResourceManagerResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Upon success, scheduler returns RegisterResourceManagerResponse to RM, otherwise RM receives exception.
   * </pre>
   *
   * Protobuf type {@code si.v1.RegisterResourceManagerResponse}
   */
  public  static final class RegisterResourceManagerResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.RegisterResourceManagerResponse)
      RegisterResourceManagerResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RegisterResourceManagerResponse.newBuilder() to construct.
    private RegisterResourceManagerResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RegisterResourceManagerResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterResourceManagerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_RegisterResourceManagerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_RegisterResourceManagerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.RegisterResourceManagerResponse.class, si.v1.Si.RegisterResourceManagerResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.RegisterResourceManagerResponse)) {
        return super.equals(obj);
      }
      si.v1.Si.RegisterResourceManagerResponse other = (si.v1.Si.RegisterResourceManagerResponse) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.RegisterResourceManagerResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RegisterResourceManagerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.RegisterResourceManagerResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Upon success, scheduler returns RegisterResourceManagerResponse to RM, otherwise RM receives exception.
     * </pre>
     *
     * Protobuf type {@code si.v1.RegisterResourceManagerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.RegisterResourceManagerResponse)
        si.v1.Si.RegisterResourceManagerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_RegisterResourceManagerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_RegisterResourceManagerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.RegisterResourceManagerResponse.class, si.v1.Si.RegisterResourceManagerResponse.Builder.class);
      }

      // Construct using si.v1.Si.RegisterResourceManagerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_RegisterResourceManagerResponse_descriptor;
      }

      public si.v1.Si.RegisterResourceManagerResponse getDefaultInstanceForType() {
        return si.v1.Si.RegisterResourceManagerResponse.getDefaultInstance();
      }

      public si.v1.Si.RegisterResourceManagerResponse build() {
        si.v1.Si.RegisterResourceManagerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.RegisterResourceManagerResponse buildPartial() {
        si.v1.Si.RegisterResourceManagerResponse result = new si.v1.Si.RegisterResourceManagerResponse(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.RegisterResourceManagerResponse) {
          return mergeFrom((si.v1.Si.RegisterResourceManagerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.RegisterResourceManagerResponse other) {
        if (other == si.v1.Si.RegisterResourceManagerResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.RegisterResourceManagerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.RegisterResourceManagerResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.RegisterResourceManagerResponse)
    }

    // @@protoc_insertion_point(class_scope:si.v1.RegisterResourceManagerResponse)
    private static final si.v1.Si.RegisterResourceManagerResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.RegisterResourceManagerResponse();
    }

    public static si.v1.Si.RegisterResourceManagerResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RegisterResourceManagerResponse>
        PARSER = new com.google.protobuf.AbstractParser<RegisterResourceManagerResponse>() {
      public RegisterResourceManagerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterResourceManagerResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RegisterResourceManagerResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterResourceManagerResponse> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.RegisterResourceManagerResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.UpdateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * New allocation requests or replace existing allocation request (if allocation-id is same)
     * </pre>
     *
     * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
     */
    java.util.List<si.v1.Si.AllocationAsk> 
        getAsksList();
    /**
     * <pre>
     * New allocation requests or replace existing allocation request (if allocation-id is same)
     * </pre>
     *
     * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
     */
    si.v1.Si.AllocationAsk getAsks(int index);
    /**
     * <pre>
     * New allocation requests or replace existing allocation request (if allocation-id is same)
     * </pre>
     *
     * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
     */
    int getAsksCount();
    /**
     * <pre>
     * New allocation requests or replace existing allocation request (if allocation-id is same)
     * </pre>
     *
     * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
     */
    java.util.List<? extends si.v1.Si.AllocationAskOrBuilder> 
        getAsksOrBuilderList();
    /**
     * <pre>
     * New allocation requests or replace existing allocation request (if allocation-id is same)
     * </pre>
     *
     * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
     */
    si.v1.Si.AllocationAskOrBuilder getAsksOrBuilder(
        int index);

    /**
     * <pre>
     * Allocations can be released.
     * </pre>
     *
     * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
     */
    boolean hasReleases();
    /**
     * <pre>
     * Allocations can be released.
     * </pre>
     *
     * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
     */
    si.v1.Si.AllocationReleasesRequest getReleases();
    /**
     * <pre>
     * Allocations can be released.
     * </pre>
     *
     * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
     */
    si.v1.Si.AllocationReleasesRequestOrBuilder getReleasesOrBuilder();

    /**
     * <pre>
     * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
     * </pre>
     *
     * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
     */
    java.util.List<si.v1.Si.NewNodeInfo> 
        getNewSchedulableNodesList();
    /**
     * <pre>
     * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
     * </pre>
     *
     * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
     */
    si.v1.Si.NewNodeInfo getNewSchedulableNodes(int index);
    /**
     * <pre>
     * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
     * </pre>
     *
     * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
     */
    int getNewSchedulableNodesCount();
    /**
     * <pre>
     * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
     * </pre>
     *
     * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
     */
    java.util.List<? extends si.v1.Si.NewNodeInfoOrBuilder> 
        getNewSchedulableNodesOrBuilderList();
    /**
     * <pre>
     * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
     * </pre>
     *
     * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
     */
    si.v1.Si.NewNodeInfoOrBuilder getNewSchedulableNodesOrBuilder(
        int index);

    /**
     * <pre>
     * Update nodes for existing schedulable nodes.
     * May include:
     * - Node resource changes. (Like grows/shrinks node resource)
     * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
     * Should not include:
     * - Allocation-related changes with the node.
     * - Realtime Utilizations.
     * </pre>
     *
     * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
     */
    java.util.List<si.v1.Si.UpdateNodeInfo> 
        getUpdatedNodesList();
    /**
     * <pre>
     * Update nodes for existing schedulable nodes.
     * May include:
     * - Node resource changes. (Like grows/shrinks node resource)
     * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
     * Should not include:
     * - Allocation-related changes with the node.
     * - Realtime Utilizations.
     * </pre>
     *
     * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
     */
    si.v1.Si.UpdateNodeInfo getUpdatedNodes(int index);
    /**
     * <pre>
     * Update nodes for existing schedulable nodes.
     * May include:
     * - Node resource changes. (Like grows/shrinks node resource)
     * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
     * Should not include:
     * - Allocation-related changes with the node.
     * - Realtime Utilizations.
     * </pre>
     *
     * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
     */
    int getUpdatedNodesCount();
    /**
     * <pre>
     * Update nodes for existing schedulable nodes.
     * May include:
     * - Node resource changes. (Like grows/shrinks node resource)
     * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
     * Should not include:
     * - Allocation-related changes with the node.
     * - Realtime Utilizations.
     * </pre>
     *
     * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
     */
    java.util.List<? extends si.v1.Si.UpdateNodeInfoOrBuilder> 
        getUpdatedNodesOrBuilderList();
    /**
     * <pre>
     * Update nodes for existing schedulable nodes.
     * May include:
     * - Node resource changes. (Like grows/shrinks node resource)
     * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
     * Should not include:
     * - Allocation-related changes with the node.
     * - Realtime Utilizations.
     * </pre>
     *
     * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
     */
    si.v1.Si.UpdateNodeInfoOrBuilder getUpdatedNodesOrBuilder(
        int index);

    /**
     * <pre>
     * UtilizationReports for allocation and nodes.
     * </pre>
     *
     * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
     */
    java.util.List<si.v1.Si.UtilizationReport> 
        getUtilizationReportsList();
    /**
     * <pre>
     * UtilizationReports for allocation and nodes.
     * </pre>
     *
     * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
     */
    si.v1.Si.UtilizationReport getUtilizationReports(int index);
    /**
     * <pre>
     * UtilizationReports for allocation and nodes.
     * </pre>
     *
     * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
     */
    int getUtilizationReportsCount();
    /**
     * <pre>
     * UtilizationReports for allocation and nodes.
     * </pre>
     *
     * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
     */
    java.util.List<? extends si.v1.Si.UtilizationReportOrBuilder> 
        getUtilizationReportsOrBuilderList();
    /**
     * <pre>
     * UtilizationReports for allocation and nodes.
     * </pre>
     *
     * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
     */
    si.v1.Si.UtilizationReportOrBuilder getUtilizationReportsOrBuilder(
        int index);

    /**
     * <pre>
     * Id of RM, this will be used to identify which RM of the request comes from.
     * </pre>
     *
     * <code>string rmId = 6;</code>
     */
    java.lang.String getRmId();
    /**
     * <pre>
     * Id of RM, this will be used to identify which RM of the request comes from.
     * </pre>
     *
     * <code>string rmId = 6;</code>
     */
    com.google.protobuf.ByteString
        getRmIdBytes();

    /**
     * <pre>
     * RM should explicitly add job when allocation request also explictly belongs to job.
     * This is optional if allocation request doesn't belong to a job. (Independent allocation)
     * </pre>
     *
     * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
     */
    java.util.List<si.v1.Si.AddJobRequest> 
        getNewJobsList();
    /**
     * <pre>
     * RM should explicitly add job when allocation request also explictly belongs to job.
     * This is optional if allocation request doesn't belong to a job. (Independent allocation)
     * </pre>
     *
     * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
     */
    si.v1.Si.AddJobRequest getNewJobs(int index);
    /**
     * <pre>
     * RM should explicitly add job when allocation request also explictly belongs to job.
     * This is optional if allocation request doesn't belong to a job. (Independent allocation)
     * </pre>
     *
     * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
     */
    int getNewJobsCount();
    /**
     * <pre>
     * RM should explicitly add job when allocation request also explictly belongs to job.
     * This is optional if allocation request doesn't belong to a job. (Independent allocation)
     * </pre>
     *
     * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
     */
    java.util.List<? extends si.v1.Si.AddJobRequestOrBuilder> 
        getNewJobsOrBuilderList();
    /**
     * <pre>
     * RM should explicitly add job when allocation request also explictly belongs to job.
     * This is optional if allocation request doesn't belong to a job. (Independent allocation)
     * </pre>
     *
     * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
     */
    si.v1.Si.AddJobRequestOrBuilder getNewJobsOrBuilder(
        int index);

    /**
     * <pre>
     * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
     * </pre>
     *
     * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
     */
    java.util.List<si.v1.Si.RemoveJobRequest> 
        getRemoveJobsList();
    /**
     * <pre>
     * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
     * </pre>
     *
     * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
     */
    si.v1.Si.RemoveJobRequest getRemoveJobs(int index);
    /**
     * <pre>
     * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
     * </pre>
     *
     * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
     */
    int getRemoveJobsCount();
    /**
     * <pre>
     * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
     * </pre>
     *
     * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
     */
    java.util.List<? extends si.v1.Si.RemoveJobRequestOrBuilder> 
        getRemoveJobsOrBuilderList();
    /**
     * <pre>
     * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
     * </pre>
     *
     * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
     */
    si.v1.Si.RemoveJobRequestOrBuilder getRemoveJobsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code si.v1.UpdateRequest}
   */
  public  static final class UpdateRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.UpdateRequest)
      UpdateRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdateRequest.newBuilder() to construct.
    private UpdateRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateRequest() {
      asks_ = java.util.Collections.emptyList();
      newSchedulableNodes_ = java.util.Collections.emptyList();
      updatedNodes_ = java.util.Collections.emptyList();
      utilizationReports_ = java.util.Collections.emptyList();
      rmId_ = "";
      newJobs_ = java.util.Collections.emptyList();
      removeJobs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                asks_ = new java.util.ArrayList<si.v1.Si.AllocationAsk>();
                mutable_bitField0_ |= 0x00000001;
              }
              asks_.add(
                  input.readMessage(si.v1.Si.AllocationAsk.parser(), extensionRegistry));
              break;
            }
            case 18: {
              si.v1.Si.AllocationReleasesRequest.Builder subBuilder = null;
              if (releases_ != null) {
                subBuilder = releases_.toBuilder();
              }
              releases_ = input.readMessage(si.v1.Si.AllocationReleasesRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(releases_);
                releases_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                newSchedulableNodes_ = new java.util.ArrayList<si.v1.Si.NewNodeInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              newSchedulableNodes_.add(
                  input.readMessage(si.v1.Si.NewNodeInfo.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                updatedNodes_ = new java.util.ArrayList<si.v1.Si.UpdateNodeInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              updatedNodes_.add(
                  input.readMessage(si.v1.Si.UpdateNodeInfo.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                utilizationReports_ = new java.util.ArrayList<si.v1.Si.UtilizationReport>();
                mutable_bitField0_ |= 0x00000010;
              }
              utilizationReports_.add(
                  input.readMessage(si.v1.Si.UtilizationReport.parser(), extensionRegistry));
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              rmId_ = s;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                newJobs_ = new java.util.ArrayList<si.v1.Si.AddJobRequest>();
                mutable_bitField0_ |= 0x00000040;
              }
              newJobs_.add(
                  input.readMessage(si.v1.Si.AddJobRequest.parser(), extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                removeJobs_ = new java.util.ArrayList<si.v1.Si.RemoveJobRequest>();
                mutable_bitField0_ |= 0x00000080;
              }
              removeJobs_.add(
                  input.readMessage(si.v1.Si.RemoveJobRequest.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          asks_ = java.util.Collections.unmodifiableList(asks_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          newSchedulableNodes_ = java.util.Collections.unmodifiableList(newSchedulableNodes_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          updatedNodes_ = java.util.Collections.unmodifiableList(updatedNodes_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          utilizationReports_ = java.util.Collections.unmodifiableList(utilizationReports_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          newJobs_ = java.util.Collections.unmodifiableList(newJobs_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          removeJobs_ = java.util.Collections.unmodifiableList(removeJobs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_UpdateRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_UpdateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.UpdateRequest.class, si.v1.Si.UpdateRequest.Builder.class);
    }

    private int bitField0_;
    public static final int ASKS_FIELD_NUMBER = 1;
    private java.util.List<si.v1.Si.AllocationAsk> asks_;
    /**
     * <pre>
     * New allocation requests or replace existing allocation request (if allocation-id is same)
     * </pre>
     *
     * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
     */
    public java.util.List<si.v1.Si.AllocationAsk> getAsksList() {
      return asks_;
    }
    /**
     * <pre>
     * New allocation requests or replace existing allocation request (if allocation-id is same)
     * </pre>
     *
     * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
     */
    public java.util.List<? extends si.v1.Si.AllocationAskOrBuilder> 
        getAsksOrBuilderList() {
      return asks_;
    }
    /**
     * <pre>
     * New allocation requests or replace existing allocation request (if allocation-id is same)
     * </pre>
     *
     * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
     */
    public int getAsksCount() {
      return asks_.size();
    }
    /**
     * <pre>
     * New allocation requests or replace existing allocation request (if allocation-id is same)
     * </pre>
     *
     * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
     */
    public si.v1.Si.AllocationAsk getAsks(int index) {
      return asks_.get(index);
    }
    /**
     * <pre>
     * New allocation requests or replace existing allocation request (if allocation-id is same)
     * </pre>
     *
     * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
     */
    public si.v1.Si.AllocationAskOrBuilder getAsksOrBuilder(
        int index) {
      return asks_.get(index);
    }

    public static final int RELEASES_FIELD_NUMBER = 2;
    private si.v1.Si.AllocationReleasesRequest releases_;
    /**
     * <pre>
     * Allocations can be released.
     * </pre>
     *
     * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
     */
    public boolean hasReleases() {
      return releases_ != null;
    }
    /**
     * <pre>
     * Allocations can be released.
     * </pre>
     *
     * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
     */
    public si.v1.Si.AllocationReleasesRequest getReleases() {
      return releases_ == null ? si.v1.Si.AllocationReleasesRequest.getDefaultInstance() : releases_;
    }
    /**
     * <pre>
     * Allocations can be released.
     * </pre>
     *
     * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
     */
    public si.v1.Si.AllocationReleasesRequestOrBuilder getReleasesOrBuilder() {
      return getReleases();
    }

    public static final int NEWSCHEDULABLENODES_FIELD_NUMBER = 3;
    private java.util.List<si.v1.Si.NewNodeInfo> newSchedulableNodes_;
    /**
     * <pre>
     * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
     * </pre>
     *
     * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
     */
    public java.util.List<si.v1.Si.NewNodeInfo> getNewSchedulableNodesList() {
      return newSchedulableNodes_;
    }
    /**
     * <pre>
     * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
     * </pre>
     *
     * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
     */
    public java.util.List<? extends si.v1.Si.NewNodeInfoOrBuilder> 
        getNewSchedulableNodesOrBuilderList() {
      return newSchedulableNodes_;
    }
    /**
     * <pre>
     * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
     * </pre>
     *
     * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
     */
    public int getNewSchedulableNodesCount() {
      return newSchedulableNodes_.size();
    }
    /**
     * <pre>
     * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
     * </pre>
     *
     * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
     */
    public si.v1.Si.NewNodeInfo getNewSchedulableNodes(int index) {
      return newSchedulableNodes_.get(index);
    }
    /**
     * <pre>
     * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
     * </pre>
     *
     * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
     */
    public si.v1.Si.NewNodeInfoOrBuilder getNewSchedulableNodesOrBuilder(
        int index) {
      return newSchedulableNodes_.get(index);
    }

    public static final int UPDATEDNODES_FIELD_NUMBER = 4;
    private java.util.List<si.v1.Si.UpdateNodeInfo> updatedNodes_;
    /**
     * <pre>
     * Update nodes for existing schedulable nodes.
     * May include:
     * - Node resource changes. (Like grows/shrinks node resource)
     * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
     * Should not include:
     * - Allocation-related changes with the node.
     * - Realtime Utilizations.
     * </pre>
     *
     * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
     */
    public java.util.List<si.v1.Si.UpdateNodeInfo> getUpdatedNodesList() {
      return updatedNodes_;
    }
    /**
     * <pre>
     * Update nodes for existing schedulable nodes.
     * May include:
     * - Node resource changes. (Like grows/shrinks node resource)
     * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
     * Should not include:
     * - Allocation-related changes with the node.
     * - Realtime Utilizations.
     * </pre>
     *
     * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
     */
    public java.util.List<? extends si.v1.Si.UpdateNodeInfoOrBuilder> 
        getUpdatedNodesOrBuilderList() {
      return updatedNodes_;
    }
    /**
     * <pre>
     * Update nodes for existing schedulable nodes.
     * May include:
     * - Node resource changes. (Like grows/shrinks node resource)
     * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
     * Should not include:
     * - Allocation-related changes with the node.
     * - Realtime Utilizations.
     * </pre>
     *
     * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
     */
    public int getUpdatedNodesCount() {
      return updatedNodes_.size();
    }
    /**
     * <pre>
     * Update nodes for existing schedulable nodes.
     * May include:
     * - Node resource changes. (Like grows/shrinks node resource)
     * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
     * Should not include:
     * - Allocation-related changes with the node.
     * - Realtime Utilizations.
     * </pre>
     *
     * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
     */
    public si.v1.Si.UpdateNodeInfo getUpdatedNodes(int index) {
      return updatedNodes_.get(index);
    }
    /**
     * <pre>
     * Update nodes for existing schedulable nodes.
     * May include:
     * - Node resource changes. (Like grows/shrinks node resource)
     * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
     * Should not include:
     * - Allocation-related changes with the node.
     * - Realtime Utilizations.
     * </pre>
     *
     * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
     */
    public si.v1.Si.UpdateNodeInfoOrBuilder getUpdatedNodesOrBuilder(
        int index) {
      return updatedNodes_.get(index);
    }

    public static final int UTILIZATIONREPORTS_FIELD_NUMBER = 5;
    private java.util.List<si.v1.Si.UtilizationReport> utilizationReports_;
    /**
     * <pre>
     * UtilizationReports for allocation and nodes.
     * </pre>
     *
     * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
     */
    public java.util.List<si.v1.Si.UtilizationReport> getUtilizationReportsList() {
      return utilizationReports_;
    }
    /**
     * <pre>
     * UtilizationReports for allocation and nodes.
     * </pre>
     *
     * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
     */
    public java.util.List<? extends si.v1.Si.UtilizationReportOrBuilder> 
        getUtilizationReportsOrBuilderList() {
      return utilizationReports_;
    }
    /**
     * <pre>
     * UtilizationReports for allocation and nodes.
     * </pre>
     *
     * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
     */
    public int getUtilizationReportsCount() {
      return utilizationReports_.size();
    }
    /**
     * <pre>
     * UtilizationReports for allocation and nodes.
     * </pre>
     *
     * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
     */
    public si.v1.Si.UtilizationReport getUtilizationReports(int index) {
      return utilizationReports_.get(index);
    }
    /**
     * <pre>
     * UtilizationReports for allocation and nodes.
     * </pre>
     *
     * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
     */
    public si.v1.Si.UtilizationReportOrBuilder getUtilizationReportsOrBuilder(
        int index) {
      return utilizationReports_.get(index);
    }

    public static final int RMID_FIELD_NUMBER = 6;
    private volatile java.lang.Object rmId_;
    /**
     * <pre>
     * Id of RM, this will be used to identify which RM of the request comes from.
     * </pre>
     *
     * <code>string rmId = 6;</code>
     */
    public java.lang.String getRmId() {
      java.lang.Object ref = rmId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rmId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Id of RM, this will be used to identify which RM of the request comes from.
     * </pre>
     *
     * <code>string rmId = 6;</code>
     */
    public com.google.protobuf.ByteString
        getRmIdBytes() {
      java.lang.Object ref = rmId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rmId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEWJOBS_FIELD_NUMBER = 8;
    private java.util.List<si.v1.Si.AddJobRequest> newJobs_;
    /**
     * <pre>
     * RM should explicitly add job when allocation request also explictly belongs to job.
     * This is optional if allocation request doesn't belong to a job. (Independent allocation)
     * </pre>
     *
     * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
     */
    public java.util.List<si.v1.Si.AddJobRequest> getNewJobsList() {
      return newJobs_;
    }
    /**
     * <pre>
     * RM should explicitly add job when allocation request also explictly belongs to job.
     * This is optional if allocation request doesn't belong to a job. (Independent allocation)
     * </pre>
     *
     * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
     */
    public java.util.List<? extends si.v1.Si.AddJobRequestOrBuilder> 
        getNewJobsOrBuilderList() {
      return newJobs_;
    }
    /**
     * <pre>
     * RM should explicitly add job when allocation request also explictly belongs to job.
     * This is optional if allocation request doesn't belong to a job. (Independent allocation)
     * </pre>
     *
     * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
     */
    public int getNewJobsCount() {
      return newJobs_.size();
    }
    /**
     * <pre>
     * RM should explicitly add job when allocation request also explictly belongs to job.
     * This is optional if allocation request doesn't belong to a job. (Independent allocation)
     * </pre>
     *
     * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
     */
    public si.v1.Si.AddJobRequest getNewJobs(int index) {
      return newJobs_.get(index);
    }
    /**
     * <pre>
     * RM should explicitly add job when allocation request also explictly belongs to job.
     * This is optional if allocation request doesn't belong to a job. (Independent allocation)
     * </pre>
     *
     * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
     */
    public si.v1.Si.AddJobRequestOrBuilder getNewJobsOrBuilder(
        int index) {
      return newJobs_.get(index);
    }

    public static final int REMOVEJOBS_FIELD_NUMBER = 9;
    private java.util.List<si.v1.Si.RemoveJobRequest> removeJobs_;
    /**
     * <pre>
     * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
     * </pre>
     *
     * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
     */
    public java.util.List<si.v1.Si.RemoveJobRequest> getRemoveJobsList() {
      return removeJobs_;
    }
    /**
     * <pre>
     * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
     * </pre>
     *
     * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
     */
    public java.util.List<? extends si.v1.Si.RemoveJobRequestOrBuilder> 
        getRemoveJobsOrBuilderList() {
      return removeJobs_;
    }
    /**
     * <pre>
     * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
     * </pre>
     *
     * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
     */
    public int getRemoveJobsCount() {
      return removeJobs_.size();
    }
    /**
     * <pre>
     * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
     * </pre>
     *
     * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
     */
    public si.v1.Si.RemoveJobRequest getRemoveJobs(int index) {
      return removeJobs_.get(index);
    }
    /**
     * <pre>
     * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
     * </pre>
     *
     * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
     */
    public si.v1.Si.RemoveJobRequestOrBuilder getRemoveJobsOrBuilder(
        int index) {
      return removeJobs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < asks_.size(); i++) {
        output.writeMessage(1, asks_.get(i));
      }
      if (releases_ != null) {
        output.writeMessage(2, getReleases());
      }
      for (int i = 0; i < newSchedulableNodes_.size(); i++) {
        output.writeMessage(3, newSchedulableNodes_.get(i));
      }
      for (int i = 0; i < updatedNodes_.size(); i++) {
        output.writeMessage(4, updatedNodes_.get(i));
      }
      for (int i = 0; i < utilizationReports_.size(); i++) {
        output.writeMessage(5, utilizationReports_.get(i));
      }
      if (!getRmIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, rmId_);
      }
      for (int i = 0; i < newJobs_.size(); i++) {
        output.writeMessage(8, newJobs_.get(i));
      }
      for (int i = 0; i < removeJobs_.size(); i++) {
        output.writeMessage(9, removeJobs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < asks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, asks_.get(i));
      }
      if (releases_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getReleases());
      }
      for (int i = 0; i < newSchedulableNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, newSchedulableNodes_.get(i));
      }
      for (int i = 0; i < updatedNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, updatedNodes_.get(i));
      }
      for (int i = 0; i < utilizationReports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, utilizationReports_.get(i));
      }
      if (!getRmIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, rmId_);
      }
      for (int i = 0; i < newJobs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, newJobs_.get(i));
      }
      for (int i = 0; i < removeJobs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, removeJobs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.UpdateRequest)) {
        return super.equals(obj);
      }
      si.v1.Si.UpdateRequest other = (si.v1.Si.UpdateRequest) obj;

      boolean result = true;
      result = result && getAsksList()
          .equals(other.getAsksList());
      result = result && (hasReleases() == other.hasReleases());
      if (hasReleases()) {
        result = result && getReleases()
            .equals(other.getReleases());
      }
      result = result && getNewSchedulableNodesList()
          .equals(other.getNewSchedulableNodesList());
      result = result && getUpdatedNodesList()
          .equals(other.getUpdatedNodesList());
      result = result && getUtilizationReportsList()
          .equals(other.getUtilizationReportsList());
      result = result && getRmId()
          .equals(other.getRmId());
      result = result && getNewJobsList()
          .equals(other.getNewJobsList());
      result = result && getRemoveJobsList()
          .equals(other.getRemoveJobsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAsksCount() > 0) {
        hash = (37 * hash) + ASKS_FIELD_NUMBER;
        hash = (53 * hash) + getAsksList().hashCode();
      }
      if (hasReleases()) {
        hash = (37 * hash) + RELEASES_FIELD_NUMBER;
        hash = (53 * hash) + getReleases().hashCode();
      }
      if (getNewSchedulableNodesCount() > 0) {
        hash = (37 * hash) + NEWSCHEDULABLENODES_FIELD_NUMBER;
        hash = (53 * hash) + getNewSchedulableNodesList().hashCode();
      }
      if (getUpdatedNodesCount() > 0) {
        hash = (37 * hash) + UPDATEDNODES_FIELD_NUMBER;
        hash = (53 * hash) + getUpdatedNodesList().hashCode();
      }
      if (getUtilizationReportsCount() > 0) {
        hash = (37 * hash) + UTILIZATIONREPORTS_FIELD_NUMBER;
        hash = (53 * hash) + getUtilizationReportsList().hashCode();
      }
      hash = (37 * hash) + RMID_FIELD_NUMBER;
      hash = (53 * hash) + getRmId().hashCode();
      if (getNewJobsCount() > 0) {
        hash = (37 * hash) + NEWJOBS_FIELD_NUMBER;
        hash = (53 * hash) + getNewJobsList().hashCode();
      }
      if (getRemoveJobsCount() > 0) {
        hash = (37 * hash) + REMOVEJOBS_FIELD_NUMBER;
        hash = (53 * hash) + getRemoveJobsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.UpdateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UpdateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UpdateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UpdateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UpdateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UpdateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UpdateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.UpdateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.UpdateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.UpdateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.UpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.UpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.UpdateRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.UpdateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.UpdateRequest)
        si.v1.Si.UpdateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_UpdateRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_UpdateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.UpdateRequest.class, si.v1.Si.UpdateRequest.Builder.class);
      }

      // Construct using si.v1.Si.UpdateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAsksFieldBuilder();
          getNewSchedulableNodesFieldBuilder();
          getUpdatedNodesFieldBuilder();
          getUtilizationReportsFieldBuilder();
          getNewJobsFieldBuilder();
          getRemoveJobsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (asksBuilder_ == null) {
          asks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          asksBuilder_.clear();
        }
        if (releasesBuilder_ == null) {
          releases_ = null;
        } else {
          releases_ = null;
          releasesBuilder_ = null;
        }
        if (newSchedulableNodesBuilder_ == null) {
          newSchedulableNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          newSchedulableNodesBuilder_.clear();
        }
        if (updatedNodesBuilder_ == null) {
          updatedNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          updatedNodesBuilder_.clear();
        }
        if (utilizationReportsBuilder_ == null) {
          utilizationReports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          utilizationReportsBuilder_.clear();
        }
        rmId_ = "";

        if (newJobsBuilder_ == null) {
          newJobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          newJobsBuilder_.clear();
        }
        if (removeJobsBuilder_ == null) {
          removeJobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          removeJobsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_UpdateRequest_descriptor;
      }

      public si.v1.Si.UpdateRequest getDefaultInstanceForType() {
        return si.v1.Si.UpdateRequest.getDefaultInstance();
      }

      public si.v1.Si.UpdateRequest build() {
        si.v1.Si.UpdateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.UpdateRequest buildPartial() {
        si.v1.Si.UpdateRequest result = new si.v1.Si.UpdateRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (asksBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            asks_ = java.util.Collections.unmodifiableList(asks_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.asks_ = asks_;
        } else {
          result.asks_ = asksBuilder_.build();
        }
        if (releasesBuilder_ == null) {
          result.releases_ = releases_;
        } else {
          result.releases_ = releasesBuilder_.build();
        }
        if (newSchedulableNodesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            newSchedulableNodes_ = java.util.Collections.unmodifiableList(newSchedulableNodes_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.newSchedulableNodes_ = newSchedulableNodes_;
        } else {
          result.newSchedulableNodes_ = newSchedulableNodesBuilder_.build();
        }
        if (updatedNodesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            updatedNodes_ = java.util.Collections.unmodifiableList(updatedNodes_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.updatedNodes_ = updatedNodes_;
        } else {
          result.updatedNodes_ = updatedNodesBuilder_.build();
        }
        if (utilizationReportsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            utilizationReports_ = java.util.Collections.unmodifiableList(utilizationReports_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.utilizationReports_ = utilizationReports_;
        } else {
          result.utilizationReports_ = utilizationReportsBuilder_.build();
        }
        result.rmId_ = rmId_;
        if (newJobsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            newJobs_ = java.util.Collections.unmodifiableList(newJobs_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.newJobs_ = newJobs_;
        } else {
          result.newJobs_ = newJobsBuilder_.build();
        }
        if (removeJobsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            removeJobs_ = java.util.Collections.unmodifiableList(removeJobs_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.removeJobs_ = removeJobs_;
        } else {
          result.removeJobs_ = removeJobsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.UpdateRequest) {
          return mergeFrom((si.v1.Si.UpdateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.UpdateRequest other) {
        if (other == si.v1.Si.UpdateRequest.getDefaultInstance()) return this;
        if (asksBuilder_ == null) {
          if (!other.asks_.isEmpty()) {
            if (asks_.isEmpty()) {
              asks_ = other.asks_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAsksIsMutable();
              asks_.addAll(other.asks_);
            }
            onChanged();
          }
        } else {
          if (!other.asks_.isEmpty()) {
            if (asksBuilder_.isEmpty()) {
              asksBuilder_.dispose();
              asksBuilder_ = null;
              asks_ = other.asks_;
              bitField0_ = (bitField0_ & ~0x00000001);
              asksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAsksFieldBuilder() : null;
            } else {
              asksBuilder_.addAllMessages(other.asks_);
            }
          }
        }
        if (other.hasReleases()) {
          mergeReleases(other.getReleases());
        }
        if (newSchedulableNodesBuilder_ == null) {
          if (!other.newSchedulableNodes_.isEmpty()) {
            if (newSchedulableNodes_.isEmpty()) {
              newSchedulableNodes_ = other.newSchedulableNodes_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureNewSchedulableNodesIsMutable();
              newSchedulableNodes_.addAll(other.newSchedulableNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.newSchedulableNodes_.isEmpty()) {
            if (newSchedulableNodesBuilder_.isEmpty()) {
              newSchedulableNodesBuilder_.dispose();
              newSchedulableNodesBuilder_ = null;
              newSchedulableNodes_ = other.newSchedulableNodes_;
              bitField0_ = (bitField0_ & ~0x00000004);
              newSchedulableNodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNewSchedulableNodesFieldBuilder() : null;
            } else {
              newSchedulableNodesBuilder_.addAllMessages(other.newSchedulableNodes_);
            }
          }
        }
        if (updatedNodesBuilder_ == null) {
          if (!other.updatedNodes_.isEmpty()) {
            if (updatedNodes_.isEmpty()) {
              updatedNodes_ = other.updatedNodes_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureUpdatedNodesIsMutable();
              updatedNodes_.addAll(other.updatedNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.updatedNodes_.isEmpty()) {
            if (updatedNodesBuilder_.isEmpty()) {
              updatedNodesBuilder_.dispose();
              updatedNodesBuilder_ = null;
              updatedNodes_ = other.updatedNodes_;
              bitField0_ = (bitField0_ & ~0x00000008);
              updatedNodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUpdatedNodesFieldBuilder() : null;
            } else {
              updatedNodesBuilder_.addAllMessages(other.updatedNodes_);
            }
          }
        }
        if (utilizationReportsBuilder_ == null) {
          if (!other.utilizationReports_.isEmpty()) {
            if (utilizationReports_.isEmpty()) {
              utilizationReports_ = other.utilizationReports_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureUtilizationReportsIsMutable();
              utilizationReports_.addAll(other.utilizationReports_);
            }
            onChanged();
          }
        } else {
          if (!other.utilizationReports_.isEmpty()) {
            if (utilizationReportsBuilder_.isEmpty()) {
              utilizationReportsBuilder_.dispose();
              utilizationReportsBuilder_ = null;
              utilizationReports_ = other.utilizationReports_;
              bitField0_ = (bitField0_ & ~0x00000010);
              utilizationReportsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUtilizationReportsFieldBuilder() : null;
            } else {
              utilizationReportsBuilder_.addAllMessages(other.utilizationReports_);
            }
          }
        }
        if (!other.getRmId().isEmpty()) {
          rmId_ = other.rmId_;
          onChanged();
        }
        if (newJobsBuilder_ == null) {
          if (!other.newJobs_.isEmpty()) {
            if (newJobs_.isEmpty()) {
              newJobs_ = other.newJobs_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureNewJobsIsMutable();
              newJobs_.addAll(other.newJobs_);
            }
            onChanged();
          }
        } else {
          if (!other.newJobs_.isEmpty()) {
            if (newJobsBuilder_.isEmpty()) {
              newJobsBuilder_.dispose();
              newJobsBuilder_ = null;
              newJobs_ = other.newJobs_;
              bitField0_ = (bitField0_ & ~0x00000040);
              newJobsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNewJobsFieldBuilder() : null;
            } else {
              newJobsBuilder_.addAllMessages(other.newJobs_);
            }
          }
        }
        if (removeJobsBuilder_ == null) {
          if (!other.removeJobs_.isEmpty()) {
            if (removeJobs_.isEmpty()) {
              removeJobs_ = other.removeJobs_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureRemoveJobsIsMutable();
              removeJobs_.addAll(other.removeJobs_);
            }
            onChanged();
          }
        } else {
          if (!other.removeJobs_.isEmpty()) {
            if (removeJobsBuilder_.isEmpty()) {
              removeJobsBuilder_.dispose();
              removeJobsBuilder_ = null;
              removeJobs_ = other.removeJobs_;
              bitField0_ = (bitField0_ & ~0x00000080);
              removeJobsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRemoveJobsFieldBuilder() : null;
            } else {
              removeJobsBuilder_.addAllMessages(other.removeJobs_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.UpdateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.UpdateRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<si.v1.Si.AllocationAsk> asks_ =
        java.util.Collections.emptyList();
      private void ensureAsksIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          asks_ = new java.util.ArrayList<si.v1.Si.AllocationAsk>(asks_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AllocationAsk, si.v1.Si.AllocationAsk.Builder, si.v1.Si.AllocationAskOrBuilder> asksBuilder_;

      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public java.util.List<si.v1.Si.AllocationAsk> getAsksList() {
        if (asksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(asks_);
        } else {
          return asksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public int getAsksCount() {
        if (asksBuilder_ == null) {
          return asks_.size();
        } else {
          return asksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public si.v1.Si.AllocationAsk getAsks(int index) {
        if (asksBuilder_ == null) {
          return asks_.get(index);
        } else {
          return asksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public Builder setAsks(
          int index, si.v1.Si.AllocationAsk value) {
        if (asksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAsksIsMutable();
          asks_.set(index, value);
          onChanged();
        } else {
          asksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public Builder setAsks(
          int index, si.v1.Si.AllocationAsk.Builder builderForValue) {
        if (asksBuilder_ == null) {
          ensureAsksIsMutable();
          asks_.set(index, builderForValue.build());
          onChanged();
        } else {
          asksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public Builder addAsks(si.v1.Si.AllocationAsk value) {
        if (asksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAsksIsMutable();
          asks_.add(value);
          onChanged();
        } else {
          asksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public Builder addAsks(
          int index, si.v1.Si.AllocationAsk value) {
        if (asksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAsksIsMutable();
          asks_.add(index, value);
          onChanged();
        } else {
          asksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public Builder addAsks(
          si.v1.Si.AllocationAsk.Builder builderForValue) {
        if (asksBuilder_ == null) {
          ensureAsksIsMutable();
          asks_.add(builderForValue.build());
          onChanged();
        } else {
          asksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public Builder addAsks(
          int index, si.v1.Si.AllocationAsk.Builder builderForValue) {
        if (asksBuilder_ == null) {
          ensureAsksIsMutable();
          asks_.add(index, builderForValue.build());
          onChanged();
        } else {
          asksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public Builder addAllAsks(
          java.lang.Iterable<? extends si.v1.Si.AllocationAsk> values) {
        if (asksBuilder_ == null) {
          ensureAsksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, asks_);
          onChanged();
        } else {
          asksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public Builder clearAsks() {
        if (asksBuilder_ == null) {
          asks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          asksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public Builder removeAsks(int index) {
        if (asksBuilder_ == null) {
          ensureAsksIsMutable();
          asks_.remove(index);
          onChanged();
        } else {
          asksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public si.v1.Si.AllocationAsk.Builder getAsksBuilder(
          int index) {
        return getAsksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public si.v1.Si.AllocationAskOrBuilder getAsksOrBuilder(
          int index) {
        if (asksBuilder_ == null) {
          return asks_.get(index);  } else {
          return asksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public java.util.List<? extends si.v1.Si.AllocationAskOrBuilder> 
           getAsksOrBuilderList() {
        if (asksBuilder_ != null) {
          return asksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(asks_);
        }
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public si.v1.Si.AllocationAsk.Builder addAsksBuilder() {
        return getAsksFieldBuilder().addBuilder(
            si.v1.Si.AllocationAsk.getDefaultInstance());
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public si.v1.Si.AllocationAsk.Builder addAsksBuilder(
          int index) {
        return getAsksFieldBuilder().addBuilder(
            index, si.v1.Si.AllocationAsk.getDefaultInstance());
      }
      /**
       * <pre>
       * New allocation requests or replace existing allocation request (if allocation-id is same)
       * </pre>
       *
       * <code>repeated .si.v1.AllocationAsk asks = 1;</code>
       */
      public java.util.List<si.v1.Si.AllocationAsk.Builder> 
           getAsksBuilderList() {
        return getAsksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AllocationAsk, si.v1.Si.AllocationAsk.Builder, si.v1.Si.AllocationAskOrBuilder> 
          getAsksFieldBuilder() {
        if (asksBuilder_ == null) {
          asksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.AllocationAsk, si.v1.Si.AllocationAsk.Builder, si.v1.Si.AllocationAskOrBuilder>(
                  asks_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          asks_ = null;
        }
        return asksBuilder_;
      }

      private si.v1.Si.AllocationReleasesRequest releases_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.AllocationReleasesRequest, si.v1.Si.AllocationReleasesRequest.Builder, si.v1.Si.AllocationReleasesRequestOrBuilder> releasesBuilder_;
      /**
       * <pre>
       * Allocations can be released.
       * </pre>
       *
       * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
       */
      public boolean hasReleases() {
        return releasesBuilder_ != null || releases_ != null;
      }
      /**
       * <pre>
       * Allocations can be released.
       * </pre>
       *
       * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
       */
      public si.v1.Si.AllocationReleasesRequest getReleases() {
        if (releasesBuilder_ == null) {
          return releases_ == null ? si.v1.Si.AllocationReleasesRequest.getDefaultInstance() : releases_;
        } else {
          return releasesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Allocations can be released.
       * </pre>
       *
       * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
       */
      public Builder setReleases(si.v1.Si.AllocationReleasesRequest value) {
        if (releasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          releases_ = value;
          onChanged();
        } else {
          releasesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Allocations can be released.
       * </pre>
       *
       * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
       */
      public Builder setReleases(
          si.v1.Si.AllocationReleasesRequest.Builder builderForValue) {
        if (releasesBuilder_ == null) {
          releases_ = builderForValue.build();
          onChanged();
        } else {
          releasesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Allocations can be released.
       * </pre>
       *
       * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
       */
      public Builder mergeReleases(si.v1.Si.AllocationReleasesRequest value) {
        if (releasesBuilder_ == null) {
          if (releases_ != null) {
            releases_ =
              si.v1.Si.AllocationReleasesRequest.newBuilder(releases_).mergeFrom(value).buildPartial();
          } else {
            releases_ = value;
          }
          onChanged();
        } else {
          releasesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Allocations can be released.
       * </pre>
       *
       * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
       */
      public Builder clearReleases() {
        if (releasesBuilder_ == null) {
          releases_ = null;
          onChanged();
        } else {
          releases_ = null;
          releasesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Allocations can be released.
       * </pre>
       *
       * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
       */
      public si.v1.Si.AllocationReleasesRequest.Builder getReleasesBuilder() {
        
        onChanged();
        return getReleasesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Allocations can be released.
       * </pre>
       *
       * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
       */
      public si.v1.Si.AllocationReleasesRequestOrBuilder getReleasesOrBuilder() {
        if (releasesBuilder_ != null) {
          return releasesBuilder_.getMessageOrBuilder();
        } else {
          return releases_ == null ?
              si.v1.Si.AllocationReleasesRequest.getDefaultInstance() : releases_;
        }
      }
      /**
       * <pre>
       * Allocations can be released.
       * </pre>
       *
       * <code>.si.v1.AllocationReleasesRequest releases = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.AllocationReleasesRequest, si.v1.Si.AllocationReleasesRequest.Builder, si.v1.Si.AllocationReleasesRequestOrBuilder> 
          getReleasesFieldBuilder() {
        if (releasesBuilder_ == null) {
          releasesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.AllocationReleasesRequest, si.v1.Si.AllocationReleasesRequest.Builder, si.v1.Si.AllocationReleasesRequestOrBuilder>(
                  getReleases(),
                  getParentForChildren(),
                  isClean());
          releases_ = null;
        }
        return releasesBuilder_;
      }

      private java.util.List<si.v1.Si.NewNodeInfo> newSchedulableNodes_ =
        java.util.Collections.emptyList();
      private void ensureNewSchedulableNodesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          newSchedulableNodes_ = new java.util.ArrayList<si.v1.Si.NewNodeInfo>(newSchedulableNodes_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.NewNodeInfo, si.v1.Si.NewNodeInfo.Builder, si.v1.Si.NewNodeInfoOrBuilder> newSchedulableNodesBuilder_;

      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public java.util.List<si.v1.Si.NewNodeInfo> getNewSchedulableNodesList() {
        if (newSchedulableNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(newSchedulableNodes_);
        } else {
          return newSchedulableNodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public int getNewSchedulableNodesCount() {
        if (newSchedulableNodesBuilder_ == null) {
          return newSchedulableNodes_.size();
        } else {
          return newSchedulableNodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public si.v1.Si.NewNodeInfo getNewSchedulableNodes(int index) {
        if (newSchedulableNodesBuilder_ == null) {
          return newSchedulableNodes_.get(index);
        } else {
          return newSchedulableNodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public Builder setNewSchedulableNodes(
          int index, si.v1.Si.NewNodeInfo value) {
        if (newSchedulableNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewSchedulableNodesIsMutable();
          newSchedulableNodes_.set(index, value);
          onChanged();
        } else {
          newSchedulableNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public Builder setNewSchedulableNodes(
          int index, si.v1.Si.NewNodeInfo.Builder builderForValue) {
        if (newSchedulableNodesBuilder_ == null) {
          ensureNewSchedulableNodesIsMutable();
          newSchedulableNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          newSchedulableNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public Builder addNewSchedulableNodes(si.v1.Si.NewNodeInfo value) {
        if (newSchedulableNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewSchedulableNodesIsMutable();
          newSchedulableNodes_.add(value);
          onChanged();
        } else {
          newSchedulableNodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public Builder addNewSchedulableNodes(
          int index, si.v1.Si.NewNodeInfo value) {
        if (newSchedulableNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewSchedulableNodesIsMutable();
          newSchedulableNodes_.add(index, value);
          onChanged();
        } else {
          newSchedulableNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public Builder addNewSchedulableNodes(
          si.v1.Si.NewNodeInfo.Builder builderForValue) {
        if (newSchedulableNodesBuilder_ == null) {
          ensureNewSchedulableNodesIsMutable();
          newSchedulableNodes_.add(builderForValue.build());
          onChanged();
        } else {
          newSchedulableNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public Builder addNewSchedulableNodes(
          int index, si.v1.Si.NewNodeInfo.Builder builderForValue) {
        if (newSchedulableNodesBuilder_ == null) {
          ensureNewSchedulableNodesIsMutable();
          newSchedulableNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          newSchedulableNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public Builder addAllNewSchedulableNodes(
          java.lang.Iterable<? extends si.v1.Si.NewNodeInfo> values) {
        if (newSchedulableNodesBuilder_ == null) {
          ensureNewSchedulableNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, newSchedulableNodes_);
          onChanged();
        } else {
          newSchedulableNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public Builder clearNewSchedulableNodes() {
        if (newSchedulableNodesBuilder_ == null) {
          newSchedulableNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          newSchedulableNodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public Builder removeNewSchedulableNodes(int index) {
        if (newSchedulableNodesBuilder_ == null) {
          ensureNewSchedulableNodesIsMutable();
          newSchedulableNodes_.remove(index);
          onChanged();
        } else {
          newSchedulableNodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public si.v1.Si.NewNodeInfo.Builder getNewSchedulableNodesBuilder(
          int index) {
        return getNewSchedulableNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public si.v1.Si.NewNodeInfoOrBuilder getNewSchedulableNodesOrBuilder(
          int index) {
        if (newSchedulableNodesBuilder_ == null) {
          return newSchedulableNodes_.get(index);  } else {
          return newSchedulableNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public java.util.List<? extends si.v1.Si.NewNodeInfoOrBuilder> 
           getNewSchedulableNodesOrBuilderList() {
        if (newSchedulableNodesBuilder_ != null) {
          return newSchedulableNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(newSchedulableNodes_);
        }
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public si.v1.Si.NewNodeInfo.Builder addNewSchedulableNodesBuilder() {
        return getNewSchedulableNodesFieldBuilder().addBuilder(
            si.v1.Si.NewNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public si.v1.Si.NewNodeInfo.Builder addNewSchedulableNodesBuilder(
          int index) {
        return getNewSchedulableNodesFieldBuilder().addBuilder(
            index, si.v1.Si.NewNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * New node can be scheduled. If a node is notified to be "unscheduable", it needs to be part of this field as well.
       * </pre>
       *
       * <code>repeated .si.v1.NewNodeInfo newSchedulableNodes = 3;</code>
       */
      public java.util.List<si.v1.Si.NewNodeInfo.Builder> 
           getNewSchedulableNodesBuilderList() {
        return getNewSchedulableNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.NewNodeInfo, si.v1.Si.NewNodeInfo.Builder, si.v1.Si.NewNodeInfoOrBuilder> 
          getNewSchedulableNodesFieldBuilder() {
        if (newSchedulableNodesBuilder_ == null) {
          newSchedulableNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.NewNodeInfo, si.v1.Si.NewNodeInfo.Builder, si.v1.Si.NewNodeInfoOrBuilder>(
                  newSchedulableNodes_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          newSchedulableNodes_ = null;
        }
        return newSchedulableNodesBuilder_;
      }

      private java.util.List<si.v1.Si.UpdateNodeInfo> updatedNodes_ =
        java.util.Collections.emptyList();
      private void ensureUpdatedNodesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          updatedNodes_ = new java.util.ArrayList<si.v1.Si.UpdateNodeInfo>(updatedNodes_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.UpdateNodeInfo, si.v1.Si.UpdateNodeInfo.Builder, si.v1.Si.UpdateNodeInfoOrBuilder> updatedNodesBuilder_;

      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public java.util.List<si.v1.Si.UpdateNodeInfo> getUpdatedNodesList() {
        if (updatedNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(updatedNodes_);
        } else {
          return updatedNodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public int getUpdatedNodesCount() {
        if (updatedNodesBuilder_ == null) {
          return updatedNodes_.size();
        } else {
          return updatedNodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public si.v1.Si.UpdateNodeInfo getUpdatedNodes(int index) {
        if (updatedNodesBuilder_ == null) {
          return updatedNodes_.get(index);
        } else {
          return updatedNodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public Builder setUpdatedNodes(
          int index, si.v1.Si.UpdateNodeInfo value) {
        if (updatedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatedNodesIsMutable();
          updatedNodes_.set(index, value);
          onChanged();
        } else {
          updatedNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public Builder setUpdatedNodes(
          int index, si.v1.Si.UpdateNodeInfo.Builder builderForValue) {
        if (updatedNodesBuilder_ == null) {
          ensureUpdatedNodesIsMutable();
          updatedNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          updatedNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public Builder addUpdatedNodes(si.v1.Si.UpdateNodeInfo value) {
        if (updatedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatedNodesIsMutable();
          updatedNodes_.add(value);
          onChanged();
        } else {
          updatedNodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public Builder addUpdatedNodes(
          int index, si.v1.Si.UpdateNodeInfo value) {
        if (updatedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatedNodesIsMutable();
          updatedNodes_.add(index, value);
          onChanged();
        } else {
          updatedNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public Builder addUpdatedNodes(
          si.v1.Si.UpdateNodeInfo.Builder builderForValue) {
        if (updatedNodesBuilder_ == null) {
          ensureUpdatedNodesIsMutable();
          updatedNodes_.add(builderForValue.build());
          onChanged();
        } else {
          updatedNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public Builder addUpdatedNodes(
          int index, si.v1.Si.UpdateNodeInfo.Builder builderForValue) {
        if (updatedNodesBuilder_ == null) {
          ensureUpdatedNodesIsMutable();
          updatedNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          updatedNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public Builder addAllUpdatedNodes(
          java.lang.Iterable<? extends si.v1.Si.UpdateNodeInfo> values) {
        if (updatedNodesBuilder_ == null) {
          ensureUpdatedNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, updatedNodes_);
          onChanged();
        } else {
          updatedNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public Builder clearUpdatedNodes() {
        if (updatedNodesBuilder_ == null) {
          updatedNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          updatedNodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public Builder removeUpdatedNodes(int index) {
        if (updatedNodesBuilder_ == null) {
          ensureUpdatedNodesIsMutable();
          updatedNodes_.remove(index);
          onChanged();
        } else {
          updatedNodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public si.v1.Si.UpdateNodeInfo.Builder getUpdatedNodesBuilder(
          int index) {
        return getUpdatedNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public si.v1.Si.UpdateNodeInfoOrBuilder getUpdatedNodesOrBuilder(
          int index) {
        if (updatedNodesBuilder_ == null) {
          return updatedNodes_.get(index);  } else {
          return updatedNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public java.util.List<? extends si.v1.Si.UpdateNodeInfoOrBuilder> 
           getUpdatedNodesOrBuilderList() {
        if (updatedNodesBuilder_ != null) {
          return updatedNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(updatedNodes_);
        }
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public si.v1.Si.UpdateNodeInfo.Builder addUpdatedNodesBuilder() {
        return getUpdatedNodesFieldBuilder().addBuilder(
            si.v1.Si.UpdateNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public si.v1.Si.UpdateNodeInfo.Builder addUpdatedNodesBuilder(
          int index) {
        return getUpdatedNodesFieldBuilder().addBuilder(
            index, si.v1.Si.UpdateNodeInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Update nodes for existing schedulable nodes.
       * May include:
       * - Node resource changes. (Like grows/shrinks node resource)
       * - Node attribute changes. (Including node-partition concept like YARN, and concept like "local images".
       * Should not include:
       * - Allocation-related changes with the node.
       * - Realtime Utilizations.
       * </pre>
       *
       * <code>repeated .si.v1.UpdateNodeInfo updatedNodes = 4;</code>
       */
      public java.util.List<si.v1.Si.UpdateNodeInfo.Builder> 
           getUpdatedNodesBuilderList() {
        return getUpdatedNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.UpdateNodeInfo, si.v1.Si.UpdateNodeInfo.Builder, si.v1.Si.UpdateNodeInfoOrBuilder> 
          getUpdatedNodesFieldBuilder() {
        if (updatedNodesBuilder_ == null) {
          updatedNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.UpdateNodeInfo, si.v1.Si.UpdateNodeInfo.Builder, si.v1.Si.UpdateNodeInfoOrBuilder>(
                  updatedNodes_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          updatedNodes_ = null;
        }
        return updatedNodesBuilder_;
      }

      private java.util.List<si.v1.Si.UtilizationReport> utilizationReports_ =
        java.util.Collections.emptyList();
      private void ensureUtilizationReportsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          utilizationReports_ = new java.util.ArrayList<si.v1.Si.UtilizationReport>(utilizationReports_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.UtilizationReport, si.v1.Si.UtilizationReport.Builder, si.v1.Si.UtilizationReportOrBuilder> utilizationReportsBuilder_;

      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public java.util.List<si.v1.Si.UtilizationReport> getUtilizationReportsList() {
        if (utilizationReportsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(utilizationReports_);
        } else {
          return utilizationReportsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public int getUtilizationReportsCount() {
        if (utilizationReportsBuilder_ == null) {
          return utilizationReports_.size();
        } else {
          return utilizationReportsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public si.v1.Si.UtilizationReport getUtilizationReports(int index) {
        if (utilizationReportsBuilder_ == null) {
          return utilizationReports_.get(index);
        } else {
          return utilizationReportsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public Builder setUtilizationReports(
          int index, si.v1.Si.UtilizationReport value) {
        if (utilizationReportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUtilizationReportsIsMutable();
          utilizationReports_.set(index, value);
          onChanged();
        } else {
          utilizationReportsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public Builder setUtilizationReports(
          int index, si.v1.Si.UtilizationReport.Builder builderForValue) {
        if (utilizationReportsBuilder_ == null) {
          ensureUtilizationReportsIsMutable();
          utilizationReports_.set(index, builderForValue.build());
          onChanged();
        } else {
          utilizationReportsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public Builder addUtilizationReports(si.v1.Si.UtilizationReport value) {
        if (utilizationReportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUtilizationReportsIsMutable();
          utilizationReports_.add(value);
          onChanged();
        } else {
          utilizationReportsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public Builder addUtilizationReports(
          int index, si.v1.Si.UtilizationReport value) {
        if (utilizationReportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUtilizationReportsIsMutable();
          utilizationReports_.add(index, value);
          onChanged();
        } else {
          utilizationReportsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public Builder addUtilizationReports(
          si.v1.Si.UtilizationReport.Builder builderForValue) {
        if (utilizationReportsBuilder_ == null) {
          ensureUtilizationReportsIsMutable();
          utilizationReports_.add(builderForValue.build());
          onChanged();
        } else {
          utilizationReportsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public Builder addUtilizationReports(
          int index, si.v1.Si.UtilizationReport.Builder builderForValue) {
        if (utilizationReportsBuilder_ == null) {
          ensureUtilizationReportsIsMutable();
          utilizationReports_.add(index, builderForValue.build());
          onChanged();
        } else {
          utilizationReportsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public Builder addAllUtilizationReports(
          java.lang.Iterable<? extends si.v1.Si.UtilizationReport> values) {
        if (utilizationReportsBuilder_ == null) {
          ensureUtilizationReportsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, utilizationReports_);
          onChanged();
        } else {
          utilizationReportsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public Builder clearUtilizationReports() {
        if (utilizationReportsBuilder_ == null) {
          utilizationReports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          utilizationReportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public Builder removeUtilizationReports(int index) {
        if (utilizationReportsBuilder_ == null) {
          ensureUtilizationReportsIsMutable();
          utilizationReports_.remove(index);
          onChanged();
        } else {
          utilizationReportsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public si.v1.Si.UtilizationReport.Builder getUtilizationReportsBuilder(
          int index) {
        return getUtilizationReportsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public si.v1.Si.UtilizationReportOrBuilder getUtilizationReportsOrBuilder(
          int index) {
        if (utilizationReportsBuilder_ == null) {
          return utilizationReports_.get(index);  } else {
          return utilizationReportsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public java.util.List<? extends si.v1.Si.UtilizationReportOrBuilder> 
           getUtilizationReportsOrBuilderList() {
        if (utilizationReportsBuilder_ != null) {
          return utilizationReportsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(utilizationReports_);
        }
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public si.v1.Si.UtilizationReport.Builder addUtilizationReportsBuilder() {
        return getUtilizationReportsFieldBuilder().addBuilder(
            si.v1.Si.UtilizationReport.getDefaultInstance());
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public si.v1.Si.UtilizationReport.Builder addUtilizationReportsBuilder(
          int index) {
        return getUtilizationReportsFieldBuilder().addBuilder(
            index, si.v1.Si.UtilizationReport.getDefaultInstance());
      }
      /**
       * <pre>
       * UtilizationReports for allocation and nodes.
       * </pre>
       *
       * <code>repeated .si.v1.UtilizationReport utilizationReports = 5;</code>
       */
      public java.util.List<si.v1.Si.UtilizationReport.Builder> 
           getUtilizationReportsBuilderList() {
        return getUtilizationReportsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.UtilizationReport, si.v1.Si.UtilizationReport.Builder, si.v1.Si.UtilizationReportOrBuilder> 
          getUtilizationReportsFieldBuilder() {
        if (utilizationReportsBuilder_ == null) {
          utilizationReportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.UtilizationReport, si.v1.Si.UtilizationReport.Builder, si.v1.Si.UtilizationReportOrBuilder>(
                  utilizationReports_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          utilizationReports_ = null;
        }
        return utilizationReportsBuilder_;
      }

      private java.lang.Object rmId_ = "";
      /**
       * <pre>
       * Id of RM, this will be used to identify which RM of the request comes from.
       * </pre>
       *
       * <code>string rmId = 6;</code>
       */
      public java.lang.String getRmId() {
        java.lang.Object ref = rmId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          rmId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Id of RM, this will be used to identify which RM of the request comes from.
       * </pre>
       *
       * <code>string rmId = 6;</code>
       */
      public com.google.protobuf.ByteString
          getRmIdBytes() {
        java.lang.Object ref = rmId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rmId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Id of RM, this will be used to identify which RM of the request comes from.
       * </pre>
       *
       * <code>string rmId = 6;</code>
       */
      public Builder setRmId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rmId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id of RM, this will be used to identify which RM of the request comes from.
       * </pre>
       *
       * <code>string rmId = 6;</code>
       */
      public Builder clearRmId() {
        
        rmId_ = getDefaultInstance().getRmId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id of RM, this will be used to identify which RM of the request comes from.
       * </pre>
       *
       * <code>string rmId = 6;</code>
       */
      public Builder setRmIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rmId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<si.v1.Si.AddJobRequest> newJobs_ =
        java.util.Collections.emptyList();
      private void ensureNewJobsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          newJobs_ = new java.util.ArrayList<si.v1.Si.AddJobRequest>(newJobs_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AddJobRequest, si.v1.Si.AddJobRequest.Builder, si.v1.Si.AddJobRequestOrBuilder> newJobsBuilder_;

      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public java.util.List<si.v1.Si.AddJobRequest> getNewJobsList() {
        if (newJobsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(newJobs_);
        } else {
          return newJobsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public int getNewJobsCount() {
        if (newJobsBuilder_ == null) {
          return newJobs_.size();
        } else {
          return newJobsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public si.v1.Si.AddJobRequest getNewJobs(int index) {
        if (newJobsBuilder_ == null) {
          return newJobs_.get(index);
        } else {
          return newJobsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public Builder setNewJobs(
          int index, si.v1.Si.AddJobRequest value) {
        if (newJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewJobsIsMutable();
          newJobs_.set(index, value);
          onChanged();
        } else {
          newJobsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public Builder setNewJobs(
          int index, si.v1.Si.AddJobRequest.Builder builderForValue) {
        if (newJobsBuilder_ == null) {
          ensureNewJobsIsMutable();
          newJobs_.set(index, builderForValue.build());
          onChanged();
        } else {
          newJobsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public Builder addNewJobs(si.v1.Si.AddJobRequest value) {
        if (newJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewJobsIsMutable();
          newJobs_.add(value);
          onChanged();
        } else {
          newJobsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public Builder addNewJobs(
          int index, si.v1.Si.AddJobRequest value) {
        if (newJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewJobsIsMutable();
          newJobs_.add(index, value);
          onChanged();
        } else {
          newJobsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public Builder addNewJobs(
          si.v1.Si.AddJobRequest.Builder builderForValue) {
        if (newJobsBuilder_ == null) {
          ensureNewJobsIsMutable();
          newJobs_.add(builderForValue.build());
          onChanged();
        } else {
          newJobsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public Builder addNewJobs(
          int index, si.v1.Si.AddJobRequest.Builder builderForValue) {
        if (newJobsBuilder_ == null) {
          ensureNewJobsIsMutable();
          newJobs_.add(index, builderForValue.build());
          onChanged();
        } else {
          newJobsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public Builder addAllNewJobs(
          java.lang.Iterable<? extends si.v1.Si.AddJobRequest> values) {
        if (newJobsBuilder_ == null) {
          ensureNewJobsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, newJobs_);
          onChanged();
        } else {
          newJobsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public Builder clearNewJobs() {
        if (newJobsBuilder_ == null) {
          newJobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          newJobsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public Builder removeNewJobs(int index) {
        if (newJobsBuilder_ == null) {
          ensureNewJobsIsMutable();
          newJobs_.remove(index);
          onChanged();
        } else {
          newJobsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public si.v1.Si.AddJobRequest.Builder getNewJobsBuilder(
          int index) {
        return getNewJobsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public si.v1.Si.AddJobRequestOrBuilder getNewJobsOrBuilder(
          int index) {
        if (newJobsBuilder_ == null) {
          return newJobs_.get(index);  } else {
          return newJobsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public java.util.List<? extends si.v1.Si.AddJobRequestOrBuilder> 
           getNewJobsOrBuilderList() {
        if (newJobsBuilder_ != null) {
          return newJobsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(newJobs_);
        }
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public si.v1.Si.AddJobRequest.Builder addNewJobsBuilder() {
        return getNewJobsFieldBuilder().addBuilder(
            si.v1.Si.AddJobRequest.getDefaultInstance());
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public si.v1.Si.AddJobRequest.Builder addNewJobsBuilder(
          int index) {
        return getNewJobsFieldBuilder().addBuilder(
            index, si.v1.Si.AddJobRequest.getDefaultInstance());
      }
      /**
       * <pre>
       * RM should explicitly add job when allocation request also explictly belongs to job.
       * This is optional if allocation request doesn't belong to a job. (Independent allocation)
       * </pre>
       *
       * <code>repeated .si.v1.AddJobRequest newJobs = 8;</code>
       */
      public java.util.List<si.v1.Si.AddJobRequest.Builder> 
           getNewJobsBuilderList() {
        return getNewJobsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AddJobRequest, si.v1.Si.AddJobRequest.Builder, si.v1.Si.AddJobRequestOrBuilder> 
          getNewJobsFieldBuilder() {
        if (newJobsBuilder_ == null) {
          newJobsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.AddJobRequest, si.v1.Si.AddJobRequest.Builder, si.v1.Si.AddJobRequestOrBuilder>(
                  newJobs_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          newJobs_ = null;
        }
        return newJobsBuilder_;
      }

      private java.util.List<si.v1.Si.RemoveJobRequest> removeJobs_ =
        java.util.Collections.emptyList();
      private void ensureRemoveJobsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          removeJobs_ = new java.util.ArrayList<si.v1.Si.RemoveJobRequest>(removeJobs_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.RemoveJobRequest, si.v1.Si.RemoveJobRequest.Builder, si.v1.Si.RemoveJobRequestOrBuilder> removeJobsBuilder_;

      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public java.util.List<si.v1.Si.RemoveJobRequest> getRemoveJobsList() {
        if (removeJobsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(removeJobs_);
        } else {
          return removeJobsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public int getRemoveJobsCount() {
        if (removeJobsBuilder_ == null) {
          return removeJobs_.size();
        } else {
          return removeJobsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public si.v1.Si.RemoveJobRequest getRemoveJobs(int index) {
        if (removeJobsBuilder_ == null) {
          return removeJobs_.get(index);
        } else {
          return removeJobsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public Builder setRemoveJobs(
          int index, si.v1.Si.RemoveJobRequest value) {
        if (removeJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoveJobsIsMutable();
          removeJobs_.set(index, value);
          onChanged();
        } else {
          removeJobsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public Builder setRemoveJobs(
          int index, si.v1.Si.RemoveJobRequest.Builder builderForValue) {
        if (removeJobsBuilder_ == null) {
          ensureRemoveJobsIsMutable();
          removeJobs_.set(index, builderForValue.build());
          onChanged();
        } else {
          removeJobsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public Builder addRemoveJobs(si.v1.Si.RemoveJobRequest value) {
        if (removeJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoveJobsIsMutable();
          removeJobs_.add(value);
          onChanged();
        } else {
          removeJobsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public Builder addRemoveJobs(
          int index, si.v1.Si.RemoveJobRequest value) {
        if (removeJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoveJobsIsMutable();
          removeJobs_.add(index, value);
          onChanged();
        } else {
          removeJobsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public Builder addRemoveJobs(
          si.v1.Si.RemoveJobRequest.Builder builderForValue) {
        if (removeJobsBuilder_ == null) {
          ensureRemoveJobsIsMutable();
          removeJobs_.add(builderForValue.build());
          onChanged();
        } else {
          removeJobsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public Builder addRemoveJobs(
          int index, si.v1.Si.RemoveJobRequest.Builder builderForValue) {
        if (removeJobsBuilder_ == null) {
          ensureRemoveJobsIsMutable();
          removeJobs_.add(index, builderForValue.build());
          onChanged();
        } else {
          removeJobsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public Builder addAllRemoveJobs(
          java.lang.Iterable<? extends si.v1.Si.RemoveJobRequest> values) {
        if (removeJobsBuilder_ == null) {
          ensureRemoveJobsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, removeJobs_);
          onChanged();
        } else {
          removeJobsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public Builder clearRemoveJobs() {
        if (removeJobsBuilder_ == null) {
          removeJobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          removeJobsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public Builder removeRemoveJobs(int index) {
        if (removeJobsBuilder_ == null) {
          ensureRemoveJobsIsMutable();
          removeJobs_.remove(index);
          onChanged();
        } else {
          removeJobsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public si.v1.Si.RemoveJobRequest.Builder getRemoveJobsBuilder(
          int index) {
        return getRemoveJobsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public si.v1.Si.RemoveJobRequestOrBuilder getRemoveJobsOrBuilder(
          int index) {
        if (removeJobsBuilder_ == null) {
          return removeJobs_.get(index);  } else {
          return removeJobsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public java.util.List<? extends si.v1.Si.RemoveJobRequestOrBuilder> 
           getRemoveJobsOrBuilderList() {
        if (removeJobsBuilder_ != null) {
          return removeJobsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(removeJobs_);
        }
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public si.v1.Si.RemoveJobRequest.Builder addRemoveJobsBuilder() {
        return getRemoveJobsFieldBuilder().addBuilder(
            si.v1.Si.RemoveJobRequest.getDefaultInstance());
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public si.v1.Si.RemoveJobRequest.Builder addRemoveJobsBuilder(
          int index) {
        return getRemoveJobsFieldBuilder().addBuilder(
            index, si.v1.Si.RemoveJobRequest.getDefaultInstance());
      }
      /**
       * <pre>
       * RM can also remove jobs, all allocation/allocation requests associated with the job will be removed
       * </pre>
       *
       * <code>repeated .si.v1.RemoveJobRequest removeJobs = 9;</code>
       */
      public java.util.List<si.v1.Si.RemoveJobRequest.Builder> 
           getRemoveJobsBuilderList() {
        return getRemoveJobsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.RemoveJobRequest, si.v1.Si.RemoveJobRequest.Builder, si.v1.Si.RemoveJobRequestOrBuilder> 
          getRemoveJobsFieldBuilder() {
        if (removeJobsBuilder_ == null) {
          removeJobsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.RemoveJobRequest, si.v1.Si.RemoveJobRequest.Builder, si.v1.Si.RemoveJobRequestOrBuilder>(
                  removeJobs_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          removeJobs_ = null;
        }
        return removeJobsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.UpdateRequest)
    }

    // @@protoc_insertion_point(class_scope:si.v1.UpdateRequest)
    private static final si.v1.Si.UpdateRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.UpdateRequest();
    }

    public static si.v1.Si.UpdateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateRequest>
        PARSER = new com.google.protobuf.AbstractParser<UpdateRequest>() {
      public UpdateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateRequest> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.UpdateRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.UpdateResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * What RM needs to do, scheduler can send control code to RM when something goes wrong.
     * Don't use/expand this field for other general purposed actions. (Like kill a remote container process).
     * </pre>
     *
     * <code>.si.v1.UpdateResponse.ActionFromScheduler action = 1;</code>
     */
    int getActionValue();
    /**
     * <pre>
     * What RM needs to do, scheduler can send control code to RM when something goes wrong.
     * Don't use/expand this field for other general purposed actions. (Like kill a remote container process).
     * </pre>
     *
     * <code>.si.v1.UpdateResponse.ActionFromScheduler action = 1;</code>
     */
    si.v1.Si.UpdateResponse.ActionFromScheduler getAction();

    /**
     * <pre>
     * New allocations
     * </pre>
     *
     * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
     */
    java.util.List<si.v1.Si.Allocation> 
        getNewAllocationsList();
    /**
     * <pre>
     * New allocations
     * </pre>
     *
     * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
     */
    si.v1.Si.Allocation getNewAllocations(int index);
    /**
     * <pre>
     * New allocations
     * </pre>
     *
     * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
     */
    int getNewAllocationsCount();
    /**
     * <pre>
     * New allocations
     * </pre>
     *
     * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
     */
    java.util.List<? extends si.v1.Si.AllocationOrBuilder> 
        getNewAllocationsOrBuilderList();
    /**
     * <pre>
     * New allocations
     * </pre>
     *
     * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
     */
    si.v1.Si.AllocationOrBuilder getNewAllocationsOrBuilder(
        int index);

    /**
     * <pre>
     * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
     * it could be decision made by scheduler (such as preemption).
     * </pre>
     *
     * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
     */
    java.util.List<si.v1.Si.AllocationReleaseResponse> 
        getReleasedAllocationsList();
    /**
     * <pre>
     * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
     * it could be decision made by scheduler (such as preemption).
     * </pre>
     *
     * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
     */
    si.v1.Si.AllocationReleaseResponse getReleasedAllocations(int index);
    /**
     * <pre>
     * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
     * it could be decision made by scheduler (such as preemption).
     * </pre>
     *
     * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
     */
    int getReleasedAllocationsCount();
    /**
     * <pre>
     * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
     * it could be decision made by scheduler (such as preemption).
     * </pre>
     *
     * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
     */
    java.util.List<? extends si.v1.Si.AllocationReleaseResponseOrBuilder> 
        getReleasedAllocationsOrBuilderList();
    /**
     * <pre>
     * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
     * it could be decision made by scheduler (such as preemption).
     * </pre>
     *
     * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
     */
    si.v1.Si.AllocationReleaseResponseOrBuilder getReleasedAllocationsOrBuilder(
        int index);

    /**
     * <pre>
     * Rejected allocation requests
     * </pre>
     *
     * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
     */
    java.util.List<si.v1.Si.RejectedAllocationAsk> 
        getRejectedAllocationsList();
    /**
     * <pre>
     * Rejected allocation requests
     * </pre>
     *
     * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
     */
    si.v1.Si.RejectedAllocationAsk getRejectedAllocations(int index);
    /**
     * <pre>
     * Rejected allocation requests
     * </pre>
     *
     * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
     */
    int getRejectedAllocationsCount();
    /**
     * <pre>
     * Rejected allocation requests
     * </pre>
     *
     * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
     */
    java.util.List<? extends si.v1.Si.RejectedAllocationAskOrBuilder> 
        getRejectedAllocationsOrBuilderList();
    /**
     * <pre>
     * Rejected allocation requests
     * </pre>
     *
     * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
     */
    si.v1.Si.RejectedAllocationAskOrBuilder getRejectedAllocationsOrBuilder(
        int index);

    /**
     * <pre>
     * Suggested node update.
     * This could include:
     * 1) Schedulable resources on each node. This can be used when we want to run
     *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
     *    and update YARN NodeManager / Kubelet resource dynamically.
     * 2) Other recommendations.
     * </pre>
     *
     * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
     */
    java.util.List<si.v1.Si.NodeRecommendation> 
        getNodeRecommendationsList();
    /**
     * <pre>
     * Suggested node update.
     * This could include:
     * 1) Schedulable resources on each node. This can be used when we want to run
     *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
     *    and update YARN NodeManager / Kubelet resource dynamically.
     * 2) Other recommendations.
     * </pre>
     *
     * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
     */
    si.v1.Si.NodeRecommendation getNodeRecommendations(int index);
    /**
     * <pre>
     * Suggested node update.
     * This could include:
     * 1) Schedulable resources on each node. This can be used when we want to run
     *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
     *    and update YARN NodeManager / Kubelet resource dynamically.
     * 2) Other recommendations.
     * </pre>
     *
     * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
     */
    int getNodeRecommendationsCount();
    /**
     * <pre>
     * Suggested node update.
     * This could include:
     * 1) Schedulable resources on each node. This can be used when we want to run
     *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
     *    and update YARN NodeManager / Kubelet resource dynamically.
     * 2) Other recommendations.
     * </pre>
     *
     * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
     */
    java.util.List<? extends si.v1.Si.NodeRecommendationOrBuilder> 
        getNodeRecommendationsOrBuilderList();
    /**
     * <pre>
     * Suggested node update.
     * This could include:
     * 1) Schedulable resources on each node. This can be used when we want to run
     *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
     *    and update YARN NodeManager / Kubelet resource dynamically.
     * 2) Other recommendations.
     * </pre>
     *
     * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
     */
    si.v1.Si.NodeRecommendationOrBuilder getNodeRecommendationsOrBuilder(
        int index);

    /**
     * <pre>
     * Rejected Jobs
     * </pre>
     *
     * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
     */
    java.util.List<si.v1.Si.RejectedJob> 
        getRejectedJobsList();
    /**
     * <pre>
     * Rejected Jobs
     * </pre>
     *
     * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
     */
    si.v1.Si.RejectedJob getRejectedJobs(int index);
    /**
     * <pre>
     * Rejected Jobs
     * </pre>
     *
     * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
     */
    int getRejectedJobsCount();
    /**
     * <pre>
     * Rejected Jobs
     * </pre>
     *
     * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
     */
    java.util.List<? extends si.v1.Si.RejectedJobOrBuilder> 
        getRejectedJobsOrBuilderList();
    /**
     * <pre>
     * Rejected Jobs
     * </pre>
     *
     * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
     */
    si.v1.Si.RejectedJobOrBuilder getRejectedJobsOrBuilder(
        int index);

    /**
     * <pre>
     * Accepted Jobs
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
     */
    java.util.List<si.v1.Si.AcceptedJob> 
        getAcceptedJobsList();
    /**
     * <pre>
     * Accepted Jobs
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
     */
    si.v1.Si.AcceptedJob getAcceptedJobs(int index);
    /**
     * <pre>
     * Accepted Jobs
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
     */
    int getAcceptedJobsCount();
    /**
     * <pre>
     * Accepted Jobs
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
     */
    java.util.List<? extends si.v1.Si.AcceptedJobOrBuilder> 
        getAcceptedJobsOrBuilderList();
    /**
     * <pre>
     * Accepted Jobs
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
     */
    si.v1.Si.AcceptedJobOrBuilder getAcceptedJobsOrBuilder(
        int index);

    /**
     * <pre>
     * Rejected Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
     */
    java.util.List<si.v1.Si.RejectedNode> 
        getRejectedNodesList();
    /**
     * <pre>
     * Rejected Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
     */
    si.v1.Si.RejectedNode getRejectedNodes(int index);
    /**
     * <pre>
     * Rejected Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
     */
    int getRejectedNodesCount();
    /**
     * <pre>
     * Rejected Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
     */
    java.util.List<? extends si.v1.Si.RejectedNodeOrBuilder> 
        getRejectedNodesOrBuilderList();
    /**
     * <pre>
     * Rejected Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
     */
    si.v1.Si.RejectedNodeOrBuilder getRejectedNodesOrBuilder(
        int index);

    /**
     * <pre>
     * Accepted Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
     */
    java.util.List<si.v1.Si.AcceptedNode> 
        getAcceptedNodesList();
    /**
     * <pre>
     * Accepted Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
     */
    si.v1.Si.AcceptedNode getAcceptedNodes(int index);
    /**
     * <pre>
     * Accepted Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
     */
    int getAcceptedNodesCount();
    /**
     * <pre>
     * Accepted Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
     */
    java.util.List<? extends si.v1.Si.AcceptedNodeOrBuilder> 
        getAcceptedNodesOrBuilderList();
    /**
     * <pre>
     * Accepted Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
     */
    si.v1.Si.AcceptedNodeOrBuilder getAcceptedNodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code si.v1.UpdateResponse}
   */
  public  static final class UpdateResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.UpdateResponse)
      UpdateResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdateResponse.newBuilder() to construct.
    private UpdateResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateResponse() {
      action_ = 0;
      newAllocations_ = java.util.Collections.emptyList();
      releasedAllocations_ = java.util.Collections.emptyList();
      rejectedAllocations_ = java.util.Collections.emptyList();
      nodeRecommendations_ = java.util.Collections.emptyList();
      rejectedJobs_ = java.util.Collections.emptyList();
      acceptedJobs_ = java.util.Collections.emptyList();
      rejectedNodes_ = java.util.Collections.emptyList();
      acceptedNodes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              action_ = rawValue;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                newAllocations_ = new java.util.ArrayList<si.v1.Si.Allocation>();
                mutable_bitField0_ |= 0x00000002;
              }
              newAllocations_.add(
                  input.readMessage(si.v1.Si.Allocation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                releasedAllocations_ = new java.util.ArrayList<si.v1.Si.AllocationReleaseResponse>();
                mutable_bitField0_ |= 0x00000004;
              }
              releasedAllocations_.add(
                  input.readMessage(si.v1.Si.AllocationReleaseResponse.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                rejectedAllocations_ = new java.util.ArrayList<si.v1.Si.RejectedAllocationAsk>();
                mutable_bitField0_ |= 0x00000008;
              }
              rejectedAllocations_.add(
                  input.readMessage(si.v1.Si.RejectedAllocationAsk.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                nodeRecommendations_ = new java.util.ArrayList<si.v1.Si.NodeRecommendation>();
                mutable_bitField0_ |= 0x00000010;
              }
              nodeRecommendations_.add(
                  input.readMessage(si.v1.Si.NodeRecommendation.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                rejectedJobs_ = new java.util.ArrayList<si.v1.Si.RejectedJob>();
                mutable_bitField0_ |= 0x00000020;
              }
              rejectedJobs_.add(
                  input.readMessage(si.v1.Si.RejectedJob.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                acceptedJobs_ = new java.util.ArrayList<si.v1.Si.AcceptedJob>();
                mutable_bitField0_ |= 0x00000040;
              }
              acceptedJobs_.add(
                  input.readMessage(si.v1.Si.AcceptedJob.parser(), extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                rejectedNodes_ = new java.util.ArrayList<si.v1.Si.RejectedNode>();
                mutable_bitField0_ |= 0x00000080;
              }
              rejectedNodes_.add(
                  input.readMessage(si.v1.Si.RejectedNode.parser(), extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                acceptedNodes_ = new java.util.ArrayList<si.v1.Si.AcceptedNode>();
                mutable_bitField0_ |= 0x00000100;
              }
              acceptedNodes_.add(
                  input.readMessage(si.v1.Si.AcceptedNode.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          newAllocations_ = java.util.Collections.unmodifiableList(newAllocations_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          releasedAllocations_ = java.util.Collections.unmodifiableList(releasedAllocations_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          rejectedAllocations_ = java.util.Collections.unmodifiableList(rejectedAllocations_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          nodeRecommendations_ = java.util.Collections.unmodifiableList(nodeRecommendations_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          rejectedJobs_ = java.util.Collections.unmodifiableList(rejectedJobs_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          acceptedJobs_ = java.util.Collections.unmodifiableList(acceptedJobs_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          rejectedNodes_ = java.util.Collections.unmodifiableList(rejectedNodes_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          acceptedNodes_ = java.util.Collections.unmodifiableList(acceptedNodes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_UpdateResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_UpdateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.UpdateResponse.class, si.v1.Si.UpdateResponse.Builder.class);
    }

    /**
     * <pre>
     * Scheduler can send action to RM.
     * </pre>
     *
     * Protobuf enum {@code si.v1.UpdateResponse.ActionFromScheduler}
     */
    public enum ActionFromScheduler
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Nothing needs to do
       * </pre>
       *
       * <code>NOACTION = 0;</code>
       */
      NOACTION(0),
      /**
       * <pre>
       * Something is wrong, RM needs to stop the RM, and re-register with scheduler.
       * </pre>
       *
       * <code>RESYNC = 1;</code>
       */
      RESYNC(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Nothing needs to do
       * </pre>
       *
       * <code>NOACTION = 0;</code>
       */
      public static final int NOACTION_VALUE = 0;
      /**
       * <pre>
       * Something is wrong, RM needs to stop the RM, and re-register with scheduler.
       * </pre>
       *
       * <code>RESYNC = 1;</code>
       */
      public static final int RESYNC_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ActionFromScheduler valueOf(int value) {
        return forNumber(value);
      }

      public static ActionFromScheduler forNumber(int value) {
        switch (value) {
          case 0: return NOACTION;
          case 1: return RESYNC;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ActionFromScheduler>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ActionFromScheduler> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ActionFromScheduler>() {
              public ActionFromScheduler findValueByNumber(int number) {
                return ActionFromScheduler.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return si.v1.Si.UpdateResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final ActionFromScheduler[] VALUES = values();

      public static ActionFromScheduler valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ActionFromScheduler(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:si.v1.UpdateResponse.ActionFromScheduler)
    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <pre>
     * What RM needs to do, scheduler can send control code to RM when something goes wrong.
     * Don't use/expand this field for other general purposed actions. (Like kill a remote container process).
     * </pre>
     *
     * <code>.si.v1.UpdateResponse.ActionFromScheduler action = 1;</code>
     */
    public int getActionValue() {
      return action_;
    }
    /**
     * <pre>
     * What RM needs to do, scheduler can send control code to RM when something goes wrong.
     * Don't use/expand this field for other general purposed actions. (Like kill a remote container process).
     * </pre>
     *
     * <code>.si.v1.UpdateResponse.ActionFromScheduler action = 1;</code>
     */
    public si.v1.Si.UpdateResponse.ActionFromScheduler getAction() {
      si.v1.Si.UpdateResponse.ActionFromScheduler result = si.v1.Si.UpdateResponse.ActionFromScheduler.valueOf(action_);
      return result == null ? si.v1.Si.UpdateResponse.ActionFromScheduler.UNRECOGNIZED : result;
    }

    public static final int NEWALLOCATIONS_FIELD_NUMBER = 2;
    private java.util.List<si.v1.Si.Allocation> newAllocations_;
    /**
     * <pre>
     * New allocations
     * </pre>
     *
     * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
     */
    public java.util.List<si.v1.Si.Allocation> getNewAllocationsList() {
      return newAllocations_;
    }
    /**
     * <pre>
     * New allocations
     * </pre>
     *
     * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
     */
    public java.util.List<? extends si.v1.Si.AllocationOrBuilder> 
        getNewAllocationsOrBuilderList() {
      return newAllocations_;
    }
    /**
     * <pre>
     * New allocations
     * </pre>
     *
     * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
     */
    public int getNewAllocationsCount() {
      return newAllocations_.size();
    }
    /**
     * <pre>
     * New allocations
     * </pre>
     *
     * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
     */
    public si.v1.Si.Allocation getNewAllocations(int index) {
      return newAllocations_.get(index);
    }
    /**
     * <pre>
     * New allocations
     * </pre>
     *
     * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
     */
    public si.v1.Si.AllocationOrBuilder getNewAllocationsOrBuilder(
        int index) {
      return newAllocations_.get(index);
    }

    public static final int RELEASEDALLOCATIONS_FIELD_NUMBER = 3;
    private java.util.List<si.v1.Si.AllocationReleaseResponse> releasedAllocations_;
    /**
     * <pre>
     * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
     * it could be decision made by scheduler (such as preemption).
     * </pre>
     *
     * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
     */
    public java.util.List<si.v1.Si.AllocationReleaseResponse> getReleasedAllocationsList() {
      return releasedAllocations_;
    }
    /**
     * <pre>
     * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
     * it could be decision made by scheduler (such as preemption).
     * </pre>
     *
     * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
     */
    public java.util.List<? extends si.v1.Si.AllocationReleaseResponseOrBuilder> 
        getReleasedAllocationsOrBuilderList() {
      return releasedAllocations_;
    }
    /**
     * <pre>
     * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
     * it could be decision made by scheduler (such as preemption).
     * </pre>
     *
     * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
     */
    public int getReleasedAllocationsCount() {
      return releasedAllocations_.size();
    }
    /**
     * <pre>
     * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
     * it could be decision made by scheduler (such as preemption).
     * </pre>
     *
     * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
     */
    public si.v1.Si.AllocationReleaseResponse getReleasedAllocations(int index) {
      return releasedAllocations_.get(index);
    }
    /**
     * <pre>
     * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
     * it could be decision made by scheduler (such as preemption).
     * </pre>
     *
     * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
     */
    public si.v1.Si.AllocationReleaseResponseOrBuilder getReleasedAllocationsOrBuilder(
        int index) {
      return releasedAllocations_.get(index);
    }

    public static final int REJECTEDALLOCATIONS_FIELD_NUMBER = 4;
    private java.util.List<si.v1.Si.RejectedAllocationAsk> rejectedAllocations_;
    /**
     * <pre>
     * Rejected allocation requests
     * </pre>
     *
     * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
     */
    public java.util.List<si.v1.Si.RejectedAllocationAsk> getRejectedAllocationsList() {
      return rejectedAllocations_;
    }
    /**
     * <pre>
     * Rejected allocation requests
     * </pre>
     *
     * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
     */
    public java.util.List<? extends si.v1.Si.RejectedAllocationAskOrBuilder> 
        getRejectedAllocationsOrBuilderList() {
      return rejectedAllocations_;
    }
    /**
     * <pre>
     * Rejected allocation requests
     * </pre>
     *
     * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
     */
    public int getRejectedAllocationsCount() {
      return rejectedAllocations_.size();
    }
    /**
     * <pre>
     * Rejected allocation requests
     * </pre>
     *
     * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
     */
    public si.v1.Si.RejectedAllocationAsk getRejectedAllocations(int index) {
      return rejectedAllocations_.get(index);
    }
    /**
     * <pre>
     * Rejected allocation requests
     * </pre>
     *
     * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
     */
    public si.v1.Si.RejectedAllocationAskOrBuilder getRejectedAllocationsOrBuilder(
        int index) {
      return rejectedAllocations_.get(index);
    }

    public static final int NODERECOMMENDATIONS_FIELD_NUMBER = 5;
    private java.util.List<si.v1.Si.NodeRecommendation> nodeRecommendations_;
    /**
     * <pre>
     * Suggested node update.
     * This could include:
     * 1) Schedulable resources on each node. This can be used when we want to run
     *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
     *    and update YARN NodeManager / Kubelet resource dynamically.
     * 2) Other recommendations.
     * </pre>
     *
     * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
     */
    public java.util.List<si.v1.Si.NodeRecommendation> getNodeRecommendationsList() {
      return nodeRecommendations_;
    }
    /**
     * <pre>
     * Suggested node update.
     * This could include:
     * 1) Schedulable resources on each node. This can be used when we want to run
     *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
     *    and update YARN NodeManager / Kubelet resource dynamically.
     * 2) Other recommendations.
     * </pre>
     *
     * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
     */
    public java.util.List<? extends si.v1.Si.NodeRecommendationOrBuilder> 
        getNodeRecommendationsOrBuilderList() {
      return nodeRecommendations_;
    }
    /**
     * <pre>
     * Suggested node update.
     * This could include:
     * 1) Schedulable resources on each node. This can be used when we want to run
     *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
     *    and update YARN NodeManager / Kubelet resource dynamically.
     * 2) Other recommendations.
     * </pre>
     *
     * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
     */
    public int getNodeRecommendationsCount() {
      return nodeRecommendations_.size();
    }
    /**
     * <pre>
     * Suggested node update.
     * This could include:
     * 1) Schedulable resources on each node. This can be used when we want to run
     *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
     *    and update YARN NodeManager / Kubelet resource dynamically.
     * 2) Other recommendations.
     * </pre>
     *
     * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
     */
    public si.v1.Si.NodeRecommendation getNodeRecommendations(int index) {
      return nodeRecommendations_.get(index);
    }
    /**
     * <pre>
     * Suggested node update.
     * This could include:
     * 1) Schedulable resources on each node. This can be used when we want to run
     *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
     *    and update YARN NodeManager / Kubelet resource dynamically.
     * 2) Other recommendations.
     * </pre>
     *
     * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
     */
    public si.v1.Si.NodeRecommendationOrBuilder getNodeRecommendationsOrBuilder(
        int index) {
      return nodeRecommendations_.get(index);
    }

    public static final int REJECTEDJOBS_FIELD_NUMBER = 6;
    private java.util.List<si.v1.Si.RejectedJob> rejectedJobs_;
    /**
     * <pre>
     * Rejected Jobs
     * </pre>
     *
     * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
     */
    public java.util.List<si.v1.Si.RejectedJob> getRejectedJobsList() {
      return rejectedJobs_;
    }
    /**
     * <pre>
     * Rejected Jobs
     * </pre>
     *
     * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
     */
    public java.util.List<? extends si.v1.Si.RejectedJobOrBuilder> 
        getRejectedJobsOrBuilderList() {
      return rejectedJobs_;
    }
    /**
     * <pre>
     * Rejected Jobs
     * </pre>
     *
     * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
     */
    public int getRejectedJobsCount() {
      return rejectedJobs_.size();
    }
    /**
     * <pre>
     * Rejected Jobs
     * </pre>
     *
     * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
     */
    public si.v1.Si.RejectedJob getRejectedJobs(int index) {
      return rejectedJobs_.get(index);
    }
    /**
     * <pre>
     * Rejected Jobs
     * </pre>
     *
     * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
     */
    public si.v1.Si.RejectedJobOrBuilder getRejectedJobsOrBuilder(
        int index) {
      return rejectedJobs_.get(index);
    }

    public static final int ACCEPTEDJOBS_FIELD_NUMBER = 7;
    private java.util.List<si.v1.Si.AcceptedJob> acceptedJobs_;
    /**
     * <pre>
     * Accepted Jobs
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
     */
    public java.util.List<si.v1.Si.AcceptedJob> getAcceptedJobsList() {
      return acceptedJobs_;
    }
    /**
     * <pre>
     * Accepted Jobs
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
     */
    public java.util.List<? extends si.v1.Si.AcceptedJobOrBuilder> 
        getAcceptedJobsOrBuilderList() {
      return acceptedJobs_;
    }
    /**
     * <pre>
     * Accepted Jobs
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
     */
    public int getAcceptedJobsCount() {
      return acceptedJobs_.size();
    }
    /**
     * <pre>
     * Accepted Jobs
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
     */
    public si.v1.Si.AcceptedJob getAcceptedJobs(int index) {
      return acceptedJobs_.get(index);
    }
    /**
     * <pre>
     * Accepted Jobs
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
     */
    public si.v1.Si.AcceptedJobOrBuilder getAcceptedJobsOrBuilder(
        int index) {
      return acceptedJobs_.get(index);
    }

    public static final int REJECTEDNODES_FIELD_NUMBER = 8;
    private java.util.List<si.v1.Si.RejectedNode> rejectedNodes_;
    /**
     * <pre>
     * Rejected Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
     */
    public java.util.List<si.v1.Si.RejectedNode> getRejectedNodesList() {
      return rejectedNodes_;
    }
    /**
     * <pre>
     * Rejected Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
     */
    public java.util.List<? extends si.v1.Si.RejectedNodeOrBuilder> 
        getRejectedNodesOrBuilderList() {
      return rejectedNodes_;
    }
    /**
     * <pre>
     * Rejected Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
     */
    public int getRejectedNodesCount() {
      return rejectedNodes_.size();
    }
    /**
     * <pre>
     * Rejected Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
     */
    public si.v1.Si.RejectedNode getRejectedNodes(int index) {
      return rejectedNodes_.get(index);
    }
    /**
     * <pre>
     * Rejected Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
     */
    public si.v1.Si.RejectedNodeOrBuilder getRejectedNodesOrBuilder(
        int index) {
      return rejectedNodes_.get(index);
    }

    public static final int ACCEPTEDNODES_FIELD_NUMBER = 9;
    private java.util.List<si.v1.Si.AcceptedNode> acceptedNodes_;
    /**
     * <pre>
     * Accepted Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
     */
    public java.util.List<si.v1.Si.AcceptedNode> getAcceptedNodesList() {
      return acceptedNodes_;
    }
    /**
     * <pre>
     * Accepted Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
     */
    public java.util.List<? extends si.v1.Si.AcceptedNodeOrBuilder> 
        getAcceptedNodesOrBuilderList() {
      return acceptedNodes_;
    }
    /**
     * <pre>
     * Accepted Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
     */
    public int getAcceptedNodesCount() {
      return acceptedNodes_.size();
    }
    /**
     * <pre>
     * Accepted Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
     */
    public si.v1.Si.AcceptedNode getAcceptedNodes(int index) {
      return acceptedNodes_.get(index);
    }
    /**
     * <pre>
     * Accepted Node Registrations
     * </pre>
     *
     * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
     */
    public si.v1.Si.AcceptedNodeOrBuilder getAcceptedNodesOrBuilder(
        int index) {
      return acceptedNodes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (action_ != si.v1.Si.UpdateResponse.ActionFromScheduler.NOACTION.getNumber()) {
        output.writeEnum(1, action_);
      }
      for (int i = 0; i < newAllocations_.size(); i++) {
        output.writeMessage(2, newAllocations_.get(i));
      }
      for (int i = 0; i < releasedAllocations_.size(); i++) {
        output.writeMessage(3, releasedAllocations_.get(i));
      }
      for (int i = 0; i < rejectedAllocations_.size(); i++) {
        output.writeMessage(4, rejectedAllocations_.get(i));
      }
      for (int i = 0; i < nodeRecommendations_.size(); i++) {
        output.writeMessage(5, nodeRecommendations_.get(i));
      }
      for (int i = 0; i < rejectedJobs_.size(); i++) {
        output.writeMessage(6, rejectedJobs_.get(i));
      }
      for (int i = 0; i < acceptedJobs_.size(); i++) {
        output.writeMessage(7, acceptedJobs_.get(i));
      }
      for (int i = 0; i < rejectedNodes_.size(); i++) {
        output.writeMessage(8, rejectedNodes_.get(i));
      }
      for (int i = 0; i < acceptedNodes_.size(); i++) {
        output.writeMessage(9, acceptedNodes_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (action_ != si.v1.Si.UpdateResponse.ActionFromScheduler.NOACTION.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_);
      }
      for (int i = 0; i < newAllocations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, newAllocations_.get(i));
      }
      for (int i = 0; i < releasedAllocations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, releasedAllocations_.get(i));
      }
      for (int i = 0; i < rejectedAllocations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, rejectedAllocations_.get(i));
      }
      for (int i = 0; i < nodeRecommendations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, nodeRecommendations_.get(i));
      }
      for (int i = 0; i < rejectedJobs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, rejectedJobs_.get(i));
      }
      for (int i = 0; i < acceptedJobs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, acceptedJobs_.get(i));
      }
      for (int i = 0; i < rejectedNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, rejectedNodes_.get(i));
      }
      for (int i = 0; i < acceptedNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, acceptedNodes_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.UpdateResponse)) {
        return super.equals(obj);
      }
      si.v1.Si.UpdateResponse other = (si.v1.Si.UpdateResponse) obj;

      boolean result = true;
      result = result && action_ == other.action_;
      result = result && getNewAllocationsList()
          .equals(other.getNewAllocationsList());
      result = result && getReleasedAllocationsList()
          .equals(other.getReleasedAllocationsList());
      result = result && getRejectedAllocationsList()
          .equals(other.getRejectedAllocationsList());
      result = result && getNodeRecommendationsList()
          .equals(other.getNodeRecommendationsList());
      result = result && getRejectedJobsList()
          .equals(other.getRejectedJobsList());
      result = result && getAcceptedJobsList()
          .equals(other.getAcceptedJobsList());
      result = result && getRejectedNodesList()
          .equals(other.getRejectedNodesList());
      result = result && getAcceptedNodesList()
          .equals(other.getAcceptedNodesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACTION_FIELD_NUMBER;
      hash = (53 * hash) + action_;
      if (getNewAllocationsCount() > 0) {
        hash = (37 * hash) + NEWALLOCATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getNewAllocationsList().hashCode();
      }
      if (getReleasedAllocationsCount() > 0) {
        hash = (37 * hash) + RELEASEDALLOCATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getReleasedAllocationsList().hashCode();
      }
      if (getRejectedAllocationsCount() > 0) {
        hash = (37 * hash) + REJECTEDALLOCATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getRejectedAllocationsList().hashCode();
      }
      if (getNodeRecommendationsCount() > 0) {
        hash = (37 * hash) + NODERECOMMENDATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getNodeRecommendationsList().hashCode();
      }
      if (getRejectedJobsCount() > 0) {
        hash = (37 * hash) + REJECTEDJOBS_FIELD_NUMBER;
        hash = (53 * hash) + getRejectedJobsList().hashCode();
      }
      if (getAcceptedJobsCount() > 0) {
        hash = (37 * hash) + ACCEPTEDJOBS_FIELD_NUMBER;
        hash = (53 * hash) + getAcceptedJobsList().hashCode();
      }
      if (getRejectedNodesCount() > 0) {
        hash = (37 * hash) + REJECTEDNODES_FIELD_NUMBER;
        hash = (53 * hash) + getRejectedNodesList().hashCode();
      }
      if (getAcceptedNodesCount() > 0) {
        hash = (37 * hash) + ACCEPTEDNODES_FIELD_NUMBER;
        hash = (53 * hash) + getAcceptedNodesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.UpdateResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UpdateResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UpdateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UpdateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UpdateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UpdateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UpdateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.UpdateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.UpdateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.UpdateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.UpdateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.UpdateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.UpdateResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.UpdateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.UpdateResponse)
        si.v1.Si.UpdateResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_UpdateResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_UpdateResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.UpdateResponse.class, si.v1.Si.UpdateResponse.Builder.class);
      }

      // Construct using si.v1.Si.UpdateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNewAllocationsFieldBuilder();
          getReleasedAllocationsFieldBuilder();
          getRejectedAllocationsFieldBuilder();
          getNodeRecommendationsFieldBuilder();
          getRejectedJobsFieldBuilder();
          getAcceptedJobsFieldBuilder();
          getRejectedNodesFieldBuilder();
          getAcceptedNodesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        action_ = 0;

        if (newAllocationsBuilder_ == null) {
          newAllocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          newAllocationsBuilder_.clear();
        }
        if (releasedAllocationsBuilder_ == null) {
          releasedAllocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          releasedAllocationsBuilder_.clear();
        }
        if (rejectedAllocationsBuilder_ == null) {
          rejectedAllocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rejectedAllocationsBuilder_.clear();
        }
        if (nodeRecommendationsBuilder_ == null) {
          nodeRecommendations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          nodeRecommendationsBuilder_.clear();
        }
        if (rejectedJobsBuilder_ == null) {
          rejectedJobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          rejectedJobsBuilder_.clear();
        }
        if (acceptedJobsBuilder_ == null) {
          acceptedJobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          acceptedJobsBuilder_.clear();
        }
        if (rejectedNodesBuilder_ == null) {
          rejectedNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          rejectedNodesBuilder_.clear();
        }
        if (acceptedNodesBuilder_ == null) {
          acceptedNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          acceptedNodesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_UpdateResponse_descriptor;
      }

      public si.v1.Si.UpdateResponse getDefaultInstanceForType() {
        return si.v1.Si.UpdateResponse.getDefaultInstance();
      }

      public si.v1.Si.UpdateResponse build() {
        si.v1.Si.UpdateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.UpdateResponse buildPartial() {
        si.v1.Si.UpdateResponse result = new si.v1.Si.UpdateResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.action_ = action_;
        if (newAllocationsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            newAllocations_ = java.util.Collections.unmodifiableList(newAllocations_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.newAllocations_ = newAllocations_;
        } else {
          result.newAllocations_ = newAllocationsBuilder_.build();
        }
        if (releasedAllocationsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            releasedAllocations_ = java.util.Collections.unmodifiableList(releasedAllocations_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.releasedAllocations_ = releasedAllocations_;
        } else {
          result.releasedAllocations_ = releasedAllocationsBuilder_.build();
        }
        if (rejectedAllocationsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            rejectedAllocations_ = java.util.Collections.unmodifiableList(rejectedAllocations_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.rejectedAllocations_ = rejectedAllocations_;
        } else {
          result.rejectedAllocations_ = rejectedAllocationsBuilder_.build();
        }
        if (nodeRecommendationsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            nodeRecommendations_ = java.util.Collections.unmodifiableList(nodeRecommendations_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.nodeRecommendations_ = nodeRecommendations_;
        } else {
          result.nodeRecommendations_ = nodeRecommendationsBuilder_.build();
        }
        if (rejectedJobsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            rejectedJobs_ = java.util.Collections.unmodifiableList(rejectedJobs_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.rejectedJobs_ = rejectedJobs_;
        } else {
          result.rejectedJobs_ = rejectedJobsBuilder_.build();
        }
        if (acceptedJobsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            acceptedJobs_ = java.util.Collections.unmodifiableList(acceptedJobs_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.acceptedJobs_ = acceptedJobs_;
        } else {
          result.acceptedJobs_ = acceptedJobsBuilder_.build();
        }
        if (rejectedNodesBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            rejectedNodes_ = java.util.Collections.unmodifiableList(rejectedNodes_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.rejectedNodes_ = rejectedNodes_;
        } else {
          result.rejectedNodes_ = rejectedNodesBuilder_.build();
        }
        if (acceptedNodesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            acceptedNodes_ = java.util.Collections.unmodifiableList(acceptedNodes_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.acceptedNodes_ = acceptedNodes_;
        } else {
          result.acceptedNodes_ = acceptedNodesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.UpdateResponse) {
          return mergeFrom((si.v1.Si.UpdateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.UpdateResponse other) {
        if (other == si.v1.Si.UpdateResponse.getDefaultInstance()) return this;
        if (other.action_ != 0) {
          setActionValue(other.getActionValue());
        }
        if (newAllocationsBuilder_ == null) {
          if (!other.newAllocations_.isEmpty()) {
            if (newAllocations_.isEmpty()) {
              newAllocations_ = other.newAllocations_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureNewAllocationsIsMutable();
              newAllocations_.addAll(other.newAllocations_);
            }
            onChanged();
          }
        } else {
          if (!other.newAllocations_.isEmpty()) {
            if (newAllocationsBuilder_.isEmpty()) {
              newAllocationsBuilder_.dispose();
              newAllocationsBuilder_ = null;
              newAllocations_ = other.newAllocations_;
              bitField0_ = (bitField0_ & ~0x00000002);
              newAllocationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNewAllocationsFieldBuilder() : null;
            } else {
              newAllocationsBuilder_.addAllMessages(other.newAllocations_);
            }
          }
        }
        if (releasedAllocationsBuilder_ == null) {
          if (!other.releasedAllocations_.isEmpty()) {
            if (releasedAllocations_.isEmpty()) {
              releasedAllocations_ = other.releasedAllocations_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureReleasedAllocationsIsMutable();
              releasedAllocations_.addAll(other.releasedAllocations_);
            }
            onChanged();
          }
        } else {
          if (!other.releasedAllocations_.isEmpty()) {
            if (releasedAllocationsBuilder_.isEmpty()) {
              releasedAllocationsBuilder_.dispose();
              releasedAllocationsBuilder_ = null;
              releasedAllocations_ = other.releasedAllocations_;
              bitField0_ = (bitField0_ & ~0x00000004);
              releasedAllocationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getReleasedAllocationsFieldBuilder() : null;
            } else {
              releasedAllocationsBuilder_.addAllMessages(other.releasedAllocations_);
            }
          }
        }
        if (rejectedAllocationsBuilder_ == null) {
          if (!other.rejectedAllocations_.isEmpty()) {
            if (rejectedAllocations_.isEmpty()) {
              rejectedAllocations_ = other.rejectedAllocations_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRejectedAllocationsIsMutable();
              rejectedAllocations_.addAll(other.rejectedAllocations_);
            }
            onChanged();
          }
        } else {
          if (!other.rejectedAllocations_.isEmpty()) {
            if (rejectedAllocationsBuilder_.isEmpty()) {
              rejectedAllocationsBuilder_.dispose();
              rejectedAllocationsBuilder_ = null;
              rejectedAllocations_ = other.rejectedAllocations_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rejectedAllocationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRejectedAllocationsFieldBuilder() : null;
            } else {
              rejectedAllocationsBuilder_.addAllMessages(other.rejectedAllocations_);
            }
          }
        }
        if (nodeRecommendationsBuilder_ == null) {
          if (!other.nodeRecommendations_.isEmpty()) {
            if (nodeRecommendations_.isEmpty()) {
              nodeRecommendations_ = other.nodeRecommendations_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureNodeRecommendationsIsMutable();
              nodeRecommendations_.addAll(other.nodeRecommendations_);
            }
            onChanged();
          }
        } else {
          if (!other.nodeRecommendations_.isEmpty()) {
            if (nodeRecommendationsBuilder_.isEmpty()) {
              nodeRecommendationsBuilder_.dispose();
              nodeRecommendationsBuilder_ = null;
              nodeRecommendations_ = other.nodeRecommendations_;
              bitField0_ = (bitField0_ & ~0x00000010);
              nodeRecommendationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodeRecommendationsFieldBuilder() : null;
            } else {
              nodeRecommendationsBuilder_.addAllMessages(other.nodeRecommendations_);
            }
          }
        }
        if (rejectedJobsBuilder_ == null) {
          if (!other.rejectedJobs_.isEmpty()) {
            if (rejectedJobs_.isEmpty()) {
              rejectedJobs_ = other.rejectedJobs_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureRejectedJobsIsMutable();
              rejectedJobs_.addAll(other.rejectedJobs_);
            }
            onChanged();
          }
        } else {
          if (!other.rejectedJobs_.isEmpty()) {
            if (rejectedJobsBuilder_.isEmpty()) {
              rejectedJobsBuilder_.dispose();
              rejectedJobsBuilder_ = null;
              rejectedJobs_ = other.rejectedJobs_;
              bitField0_ = (bitField0_ & ~0x00000020);
              rejectedJobsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRejectedJobsFieldBuilder() : null;
            } else {
              rejectedJobsBuilder_.addAllMessages(other.rejectedJobs_);
            }
          }
        }
        if (acceptedJobsBuilder_ == null) {
          if (!other.acceptedJobs_.isEmpty()) {
            if (acceptedJobs_.isEmpty()) {
              acceptedJobs_ = other.acceptedJobs_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureAcceptedJobsIsMutable();
              acceptedJobs_.addAll(other.acceptedJobs_);
            }
            onChanged();
          }
        } else {
          if (!other.acceptedJobs_.isEmpty()) {
            if (acceptedJobsBuilder_.isEmpty()) {
              acceptedJobsBuilder_.dispose();
              acceptedJobsBuilder_ = null;
              acceptedJobs_ = other.acceptedJobs_;
              bitField0_ = (bitField0_ & ~0x00000040);
              acceptedJobsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAcceptedJobsFieldBuilder() : null;
            } else {
              acceptedJobsBuilder_.addAllMessages(other.acceptedJobs_);
            }
          }
        }
        if (rejectedNodesBuilder_ == null) {
          if (!other.rejectedNodes_.isEmpty()) {
            if (rejectedNodes_.isEmpty()) {
              rejectedNodes_ = other.rejectedNodes_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureRejectedNodesIsMutable();
              rejectedNodes_.addAll(other.rejectedNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.rejectedNodes_.isEmpty()) {
            if (rejectedNodesBuilder_.isEmpty()) {
              rejectedNodesBuilder_.dispose();
              rejectedNodesBuilder_ = null;
              rejectedNodes_ = other.rejectedNodes_;
              bitField0_ = (bitField0_ & ~0x00000080);
              rejectedNodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRejectedNodesFieldBuilder() : null;
            } else {
              rejectedNodesBuilder_.addAllMessages(other.rejectedNodes_);
            }
          }
        }
        if (acceptedNodesBuilder_ == null) {
          if (!other.acceptedNodes_.isEmpty()) {
            if (acceptedNodes_.isEmpty()) {
              acceptedNodes_ = other.acceptedNodes_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureAcceptedNodesIsMutable();
              acceptedNodes_.addAll(other.acceptedNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.acceptedNodes_.isEmpty()) {
            if (acceptedNodesBuilder_.isEmpty()) {
              acceptedNodesBuilder_.dispose();
              acceptedNodesBuilder_ = null;
              acceptedNodes_ = other.acceptedNodes_;
              bitField0_ = (bitField0_ & ~0x00000100);
              acceptedNodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAcceptedNodesFieldBuilder() : null;
            } else {
              acceptedNodesBuilder_.addAllMessages(other.acceptedNodes_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.UpdateResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.UpdateResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int action_ = 0;
      /**
       * <pre>
       * What RM needs to do, scheduler can send control code to RM when something goes wrong.
       * Don't use/expand this field for other general purposed actions. (Like kill a remote container process).
       * </pre>
       *
       * <code>.si.v1.UpdateResponse.ActionFromScheduler action = 1;</code>
       */
      public int getActionValue() {
        return action_;
      }
      /**
       * <pre>
       * What RM needs to do, scheduler can send control code to RM when something goes wrong.
       * Don't use/expand this field for other general purposed actions. (Like kill a remote container process).
       * </pre>
       *
       * <code>.si.v1.UpdateResponse.ActionFromScheduler action = 1;</code>
       */
      public Builder setActionValue(int value) {
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * What RM needs to do, scheduler can send control code to RM when something goes wrong.
       * Don't use/expand this field for other general purposed actions. (Like kill a remote container process).
       * </pre>
       *
       * <code>.si.v1.UpdateResponse.ActionFromScheduler action = 1;</code>
       */
      public si.v1.Si.UpdateResponse.ActionFromScheduler getAction() {
        si.v1.Si.UpdateResponse.ActionFromScheduler result = si.v1.Si.UpdateResponse.ActionFromScheduler.valueOf(action_);
        return result == null ? si.v1.Si.UpdateResponse.ActionFromScheduler.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * What RM needs to do, scheduler can send control code to RM when something goes wrong.
       * Don't use/expand this field for other general purposed actions. (Like kill a remote container process).
       * </pre>
       *
       * <code>.si.v1.UpdateResponse.ActionFromScheduler action = 1;</code>
       */
      public Builder setAction(si.v1.Si.UpdateResponse.ActionFromScheduler value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        action_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * What RM needs to do, scheduler can send control code to RM when something goes wrong.
       * Don't use/expand this field for other general purposed actions. (Like kill a remote container process).
       * </pre>
       *
       * <code>.si.v1.UpdateResponse.ActionFromScheduler action = 1;</code>
       */
      public Builder clearAction() {
        
        action_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<si.v1.Si.Allocation> newAllocations_ =
        java.util.Collections.emptyList();
      private void ensureNewAllocationsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          newAllocations_ = new java.util.ArrayList<si.v1.Si.Allocation>(newAllocations_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.Allocation, si.v1.Si.Allocation.Builder, si.v1.Si.AllocationOrBuilder> newAllocationsBuilder_;

      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public java.util.List<si.v1.Si.Allocation> getNewAllocationsList() {
        if (newAllocationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(newAllocations_);
        } else {
          return newAllocationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public int getNewAllocationsCount() {
        if (newAllocationsBuilder_ == null) {
          return newAllocations_.size();
        } else {
          return newAllocationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public si.v1.Si.Allocation getNewAllocations(int index) {
        if (newAllocationsBuilder_ == null) {
          return newAllocations_.get(index);
        } else {
          return newAllocationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public Builder setNewAllocations(
          int index, si.v1.Si.Allocation value) {
        if (newAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewAllocationsIsMutable();
          newAllocations_.set(index, value);
          onChanged();
        } else {
          newAllocationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public Builder setNewAllocations(
          int index, si.v1.Si.Allocation.Builder builderForValue) {
        if (newAllocationsBuilder_ == null) {
          ensureNewAllocationsIsMutable();
          newAllocations_.set(index, builderForValue.build());
          onChanged();
        } else {
          newAllocationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public Builder addNewAllocations(si.v1.Si.Allocation value) {
        if (newAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewAllocationsIsMutable();
          newAllocations_.add(value);
          onChanged();
        } else {
          newAllocationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public Builder addNewAllocations(
          int index, si.v1.Si.Allocation value) {
        if (newAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewAllocationsIsMutable();
          newAllocations_.add(index, value);
          onChanged();
        } else {
          newAllocationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public Builder addNewAllocations(
          si.v1.Si.Allocation.Builder builderForValue) {
        if (newAllocationsBuilder_ == null) {
          ensureNewAllocationsIsMutable();
          newAllocations_.add(builderForValue.build());
          onChanged();
        } else {
          newAllocationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public Builder addNewAllocations(
          int index, si.v1.Si.Allocation.Builder builderForValue) {
        if (newAllocationsBuilder_ == null) {
          ensureNewAllocationsIsMutable();
          newAllocations_.add(index, builderForValue.build());
          onChanged();
        } else {
          newAllocationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public Builder addAllNewAllocations(
          java.lang.Iterable<? extends si.v1.Si.Allocation> values) {
        if (newAllocationsBuilder_ == null) {
          ensureNewAllocationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, newAllocations_);
          onChanged();
        } else {
          newAllocationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public Builder clearNewAllocations() {
        if (newAllocationsBuilder_ == null) {
          newAllocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          newAllocationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public Builder removeNewAllocations(int index) {
        if (newAllocationsBuilder_ == null) {
          ensureNewAllocationsIsMutable();
          newAllocations_.remove(index);
          onChanged();
        } else {
          newAllocationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public si.v1.Si.Allocation.Builder getNewAllocationsBuilder(
          int index) {
        return getNewAllocationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public si.v1.Si.AllocationOrBuilder getNewAllocationsOrBuilder(
          int index) {
        if (newAllocationsBuilder_ == null) {
          return newAllocations_.get(index);  } else {
          return newAllocationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public java.util.List<? extends si.v1.Si.AllocationOrBuilder> 
           getNewAllocationsOrBuilderList() {
        if (newAllocationsBuilder_ != null) {
          return newAllocationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(newAllocations_);
        }
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public si.v1.Si.Allocation.Builder addNewAllocationsBuilder() {
        return getNewAllocationsFieldBuilder().addBuilder(
            si.v1.Si.Allocation.getDefaultInstance());
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public si.v1.Si.Allocation.Builder addNewAllocationsBuilder(
          int index) {
        return getNewAllocationsFieldBuilder().addBuilder(
            index, si.v1.Si.Allocation.getDefaultInstance());
      }
      /**
       * <pre>
       * New allocations
       * </pre>
       *
       * <code>repeated .si.v1.Allocation newAllocations = 2;</code>
       */
      public java.util.List<si.v1.Si.Allocation.Builder> 
           getNewAllocationsBuilderList() {
        return getNewAllocationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.Allocation, si.v1.Si.Allocation.Builder, si.v1.Si.AllocationOrBuilder> 
          getNewAllocationsFieldBuilder() {
        if (newAllocationsBuilder_ == null) {
          newAllocationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.Allocation, si.v1.Si.Allocation.Builder, si.v1.Si.AllocationOrBuilder>(
                  newAllocations_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          newAllocations_ = null;
        }
        return newAllocationsBuilder_;
      }

      private java.util.List<si.v1.Si.AllocationReleaseResponse> releasedAllocations_ =
        java.util.Collections.emptyList();
      private void ensureReleasedAllocationsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          releasedAllocations_ = new java.util.ArrayList<si.v1.Si.AllocationReleaseResponse>(releasedAllocations_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AllocationReleaseResponse, si.v1.Si.AllocationReleaseResponse.Builder, si.v1.Si.AllocationReleaseResponseOrBuilder> releasedAllocationsBuilder_;

      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public java.util.List<si.v1.Si.AllocationReleaseResponse> getReleasedAllocationsList() {
        if (releasedAllocationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(releasedAllocations_);
        } else {
          return releasedAllocationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public int getReleasedAllocationsCount() {
        if (releasedAllocationsBuilder_ == null) {
          return releasedAllocations_.size();
        } else {
          return releasedAllocationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public si.v1.Si.AllocationReleaseResponse getReleasedAllocations(int index) {
        if (releasedAllocationsBuilder_ == null) {
          return releasedAllocations_.get(index);
        } else {
          return releasedAllocationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public Builder setReleasedAllocations(
          int index, si.v1.Si.AllocationReleaseResponse value) {
        if (releasedAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReleasedAllocationsIsMutable();
          releasedAllocations_.set(index, value);
          onChanged();
        } else {
          releasedAllocationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public Builder setReleasedAllocations(
          int index, si.v1.Si.AllocationReleaseResponse.Builder builderForValue) {
        if (releasedAllocationsBuilder_ == null) {
          ensureReleasedAllocationsIsMutable();
          releasedAllocations_.set(index, builderForValue.build());
          onChanged();
        } else {
          releasedAllocationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public Builder addReleasedAllocations(si.v1.Si.AllocationReleaseResponse value) {
        if (releasedAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReleasedAllocationsIsMutable();
          releasedAllocations_.add(value);
          onChanged();
        } else {
          releasedAllocationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public Builder addReleasedAllocations(
          int index, si.v1.Si.AllocationReleaseResponse value) {
        if (releasedAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReleasedAllocationsIsMutable();
          releasedAllocations_.add(index, value);
          onChanged();
        } else {
          releasedAllocationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public Builder addReleasedAllocations(
          si.v1.Si.AllocationReleaseResponse.Builder builderForValue) {
        if (releasedAllocationsBuilder_ == null) {
          ensureReleasedAllocationsIsMutable();
          releasedAllocations_.add(builderForValue.build());
          onChanged();
        } else {
          releasedAllocationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public Builder addReleasedAllocations(
          int index, si.v1.Si.AllocationReleaseResponse.Builder builderForValue) {
        if (releasedAllocationsBuilder_ == null) {
          ensureReleasedAllocationsIsMutable();
          releasedAllocations_.add(index, builderForValue.build());
          onChanged();
        } else {
          releasedAllocationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public Builder addAllReleasedAllocations(
          java.lang.Iterable<? extends si.v1.Si.AllocationReleaseResponse> values) {
        if (releasedAllocationsBuilder_ == null) {
          ensureReleasedAllocationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, releasedAllocations_);
          onChanged();
        } else {
          releasedAllocationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public Builder clearReleasedAllocations() {
        if (releasedAllocationsBuilder_ == null) {
          releasedAllocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          releasedAllocationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public Builder removeReleasedAllocations(int index) {
        if (releasedAllocationsBuilder_ == null) {
          ensureReleasedAllocationsIsMutable();
          releasedAllocations_.remove(index);
          onChanged();
        } else {
          releasedAllocationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public si.v1.Si.AllocationReleaseResponse.Builder getReleasedAllocationsBuilder(
          int index) {
        return getReleasedAllocationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public si.v1.Si.AllocationReleaseResponseOrBuilder getReleasedAllocationsOrBuilder(
          int index) {
        if (releasedAllocationsBuilder_ == null) {
          return releasedAllocations_.get(index);  } else {
          return releasedAllocationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public java.util.List<? extends si.v1.Si.AllocationReleaseResponseOrBuilder> 
           getReleasedAllocationsOrBuilderList() {
        if (releasedAllocationsBuilder_ != null) {
          return releasedAllocationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(releasedAllocations_);
        }
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public si.v1.Si.AllocationReleaseResponse.Builder addReleasedAllocationsBuilder() {
        return getReleasedAllocationsFieldBuilder().addBuilder(
            si.v1.Si.AllocationReleaseResponse.getDefaultInstance());
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public si.v1.Si.AllocationReleaseResponse.Builder addReleasedAllocationsBuilder(
          int index) {
        return getReleasedAllocationsFieldBuilder().addBuilder(
            index, si.v1.Si.AllocationReleaseResponse.getDefaultInstance());
      }
      /**
       * <pre>
       * Released allocations, this could be either ack from scheduler when RM asks to terminate some allocations. Or
       * it could be decision made by scheduler (such as preemption).
       * </pre>
       *
       * <code>repeated .si.v1.AllocationReleaseResponse releasedAllocations = 3;</code>
       */
      public java.util.List<si.v1.Si.AllocationReleaseResponse.Builder> 
           getReleasedAllocationsBuilderList() {
        return getReleasedAllocationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AllocationReleaseResponse, si.v1.Si.AllocationReleaseResponse.Builder, si.v1.Si.AllocationReleaseResponseOrBuilder> 
          getReleasedAllocationsFieldBuilder() {
        if (releasedAllocationsBuilder_ == null) {
          releasedAllocationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.AllocationReleaseResponse, si.v1.Si.AllocationReleaseResponse.Builder, si.v1.Si.AllocationReleaseResponseOrBuilder>(
                  releasedAllocations_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          releasedAllocations_ = null;
        }
        return releasedAllocationsBuilder_;
      }

      private java.util.List<si.v1.Si.RejectedAllocationAsk> rejectedAllocations_ =
        java.util.Collections.emptyList();
      private void ensureRejectedAllocationsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          rejectedAllocations_ = new java.util.ArrayList<si.v1.Si.RejectedAllocationAsk>(rejectedAllocations_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.RejectedAllocationAsk, si.v1.Si.RejectedAllocationAsk.Builder, si.v1.Si.RejectedAllocationAskOrBuilder> rejectedAllocationsBuilder_;

      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public java.util.List<si.v1.Si.RejectedAllocationAsk> getRejectedAllocationsList() {
        if (rejectedAllocationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rejectedAllocations_);
        } else {
          return rejectedAllocationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public int getRejectedAllocationsCount() {
        if (rejectedAllocationsBuilder_ == null) {
          return rejectedAllocations_.size();
        } else {
          return rejectedAllocationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public si.v1.Si.RejectedAllocationAsk getRejectedAllocations(int index) {
        if (rejectedAllocationsBuilder_ == null) {
          return rejectedAllocations_.get(index);
        } else {
          return rejectedAllocationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public Builder setRejectedAllocations(
          int index, si.v1.Si.RejectedAllocationAsk value) {
        if (rejectedAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRejectedAllocationsIsMutable();
          rejectedAllocations_.set(index, value);
          onChanged();
        } else {
          rejectedAllocationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public Builder setRejectedAllocations(
          int index, si.v1.Si.RejectedAllocationAsk.Builder builderForValue) {
        if (rejectedAllocationsBuilder_ == null) {
          ensureRejectedAllocationsIsMutable();
          rejectedAllocations_.set(index, builderForValue.build());
          onChanged();
        } else {
          rejectedAllocationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public Builder addRejectedAllocations(si.v1.Si.RejectedAllocationAsk value) {
        if (rejectedAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRejectedAllocationsIsMutable();
          rejectedAllocations_.add(value);
          onChanged();
        } else {
          rejectedAllocationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public Builder addRejectedAllocations(
          int index, si.v1.Si.RejectedAllocationAsk value) {
        if (rejectedAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRejectedAllocationsIsMutable();
          rejectedAllocations_.add(index, value);
          onChanged();
        } else {
          rejectedAllocationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public Builder addRejectedAllocations(
          si.v1.Si.RejectedAllocationAsk.Builder builderForValue) {
        if (rejectedAllocationsBuilder_ == null) {
          ensureRejectedAllocationsIsMutable();
          rejectedAllocations_.add(builderForValue.build());
          onChanged();
        } else {
          rejectedAllocationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public Builder addRejectedAllocations(
          int index, si.v1.Si.RejectedAllocationAsk.Builder builderForValue) {
        if (rejectedAllocationsBuilder_ == null) {
          ensureRejectedAllocationsIsMutable();
          rejectedAllocations_.add(index, builderForValue.build());
          onChanged();
        } else {
          rejectedAllocationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public Builder addAllRejectedAllocations(
          java.lang.Iterable<? extends si.v1.Si.RejectedAllocationAsk> values) {
        if (rejectedAllocationsBuilder_ == null) {
          ensureRejectedAllocationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rejectedAllocations_);
          onChanged();
        } else {
          rejectedAllocationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public Builder clearRejectedAllocations() {
        if (rejectedAllocationsBuilder_ == null) {
          rejectedAllocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rejectedAllocationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public Builder removeRejectedAllocations(int index) {
        if (rejectedAllocationsBuilder_ == null) {
          ensureRejectedAllocationsIsMutable();
          rejectedAllocations_.remove(index);
          onChanged();
        } else {
          rejectedAllocationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public si.v1.Si.RejectedAllocationAsk.Builder getRejectedAllocationsBuilder(
          int index) {
        return getRejectedAllocationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public si.v1.Si.RejectedAllocationAskOrBuilder getRejectedAllocationsOrBuilder(
          int index) {
        if (rejectedAllocationsBuilder_ == null) {
          return rejectedAllocations_.get(index);  } else {
          return rejectedAllocationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public java.util.List<? extends si.v1.Si.RejectedAllocationAskOrBuilder> 
           getRejectedAllocationsOrBuilderList() {
        if (rejectedAllocationsBuilder_ != null) {
          return rejectedAllocationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rejectedAllocations_);
        }
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public si.v1.Si.RejectedAllocationAsk.Builder addRejectedAllocationsBuilder() {
        return getRejectedAllocationsFieldBuilder().addBuilder(
            si.v1.Si.RejectedAllocationAsk.getDefaultInstance());
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public si.v1.Si.RejectedAllocationAsk.Builder addRejectedAllocationsBuilder(
          int index) {
        return getRejectedAllocationsFieldBuilder().addBuilder(
            index, si.v1.Si.RejectedAllocationAsk.getDefaultInstance());
      }
      /**
       * <pre>
       * Rejected allocation requests
       * </pre>
       *
       * <code>repeated .si.v1.RejectedAllocationAsk rejectedAllocations = 4;</code>
       */
      public java.util.List<si.v1.Si.RejectedAllocationAsk.Builder> 
           getRejectedAllocationsBuilderList() {
        return getRejectedAllocationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.RejectedAllocationAsk, si.v1.Si.RejectedAllocationAsk.Builder, si.v1.Si.RejectedAllocationAskOrBuilder> 
          getRejectedAllocationsFieldBuilder() {
        if (rejectedAllocationsBuilder_ == null) {
          rejectedAllocationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.RejectedAllocationAsk, si.v1.Si.RejectedAllocationAsk.Builder, si.v1.Si.RejectedAllocationAskOrBuilder>(
                  rejectedAllocations_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          rejectedAllocations_ = null;
        }
        return rejectedAllocationsBuilder_;
      }

      private java.util.List<si.v1.Si.NodeRecommendation> nodeRecommendations_ =
        java.util.Collections.emptyList();
      private void ensureNodeRecommendationsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          nodeRecommendations_ = new java.util.ArrayList<si.v1.Si.NodeRecommendation>(nodeRecommendations_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.NodeRecommendation, si.v1.Si.NodeRecommendation.Builder, si.v1.Si.NodeRecommendationOrBuilder> nodeRecommendationsBuilder_;

      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public java.util.List<si.v1.Si.NodeRecommendation> getNodeRecommendationsList() {
        if (nodeRecommendationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodeRecommendations_);
        } else {
          return nodeRecommendationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public int getNodeRecommendationsCount() {
        if (nodeRecommendationsBuilder_ == null) {
          return nodeRecommendations_.size();
        } else {
          return nodeRecommendationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public si.v1.Si.NodeRecommendation getNodeRecommendations(int index) {
        if (nodeRecommendationsBuilder_ == null) {
          return nodeRecommendations_.get(index);
        } else {
          return nodeRecommendationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public Builder setNodeRecommendations(
          int index, si.v1.Si.NodeRecommendation value) {
        if (nodeRecommendationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeRecommendationsIsMutable();
          nodeRecommendations_.set(index, value);
          onChanged();
        } else {
          nodeRecommendationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public Builder setNodeRecommendations(
          int index, si.v1.Si.NodeRecommendation.Builder builderForValue) {
        if (nodeRecommendationsBuilder_ == null) {
          ensureNodeRecommendationsIsMutable();
          nodeRecommendations_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodeRecommendationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public Builder addNodeRecommendations(si.v1.Si.NodeRecommendation value) {
        if (nodeRecommendationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeRecommendationsIsMutable();
          nodeRecommendations_.add(value);
          onChanged();
        } else {
          nodeRecommendationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public Builder addNodeRecommendations(
          int index, si.v1.Si.NodeRecommendation value) {
        if (nodeRecommendationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeRecommendationsIsMutable();
          nodeRecommendations_.add(index, value);
          onChanged();
        } else {
          nodeRecommendationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public Builder addNodeRecommendations(
          si.v1.Si.NodeRecommendation.Builder builderForValue) {
        if (nodeRecommendationsBuilder_ == null) {
          ensureNodeRecommendationsIsMutable();
          nodeRecommendations_.add(builderForValue.build());
          onChanged();
        } else {
          nodeRecommendationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public Builder addNodeRecommendations(
          int index, si.v1.Si.NodeRecommendation.Builder builderForValue) {
        if (nodeRecommendationsBuilder_ == null) {
          ensureNodeRecommendationsIsMutable();
          nodeRecommendations_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodeRecommendationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public Builder addAllNodeRecommendations(
          java.lang.Iterable<? extends si.v1.Si.NodeRecommendation> values) {
        if (nodeRecommendationsBuilder_ == null) {
          ensureNodeRecommendationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodeRecommendations_);
          onChanged();
        } else {
          nodeRecommendationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public Builder clearNodeRecommendations() {
        if (nodeRecommendationsBuilder_ == null) {
          nodeRecommendations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          nodeRecommendationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public Builder removeNodeRecommendations(int index) {
        if (nodeRecommendationsBuilder_ == null) {
          ensureNodeRecommendationsIsMutable();
          nodeRecommendations_.remove(index);
          onChanged();
        } else {
          nodeRecommendationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public si.v1.Si.NodeRecommendation.Builder getNodeRecommendationsBuilder(
          int index) {
        return getNodeRecommendationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public si.v1.Si.NodeRecommendationOrBuilder getNodeRecommendationsOrBuilder(
          int index) {
        if (nodeRecommendationsBuilder_ == null) {
          return nodeRecommendations_.get(index);  } else {
          return nodeRecommendationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public java.util.List<? extends si.v1.Si.NodeRecommendationOrBuilder> 
           getNodeRecommendationsOrBuilderList() {
        if (nodeRecommendationsBuilder_ != null) {
          return nodeRecommendationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodeRecommendations_);
        }
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public si.v1.Si.NodeRecommendation.Builder addNodeRecommendationsBuilder() {
        return getNodeRecommendationsFieldBuilder().addBuilder(
            si.v1.Si.NodeRecommendation.getDefaultInstance());
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public si.v1.Si.NodeRecommendation.Builder addNodeRecommendationsBuilder(
          int index) {
        return getNodeRecommendationsFieldBuilder().addBuilder(
            index, si.v1.Si.NodeRecommendation.getDefaultInstance());
      }
      /**
       * <pre>
       * Suggested node update.
       * This could include:
       * 1) Schedulable resources on each node. This can be used when we want to run
       *    two resource management systems side-by-side. For example, YARN/K8s running side by side.
       *    and update YARN NodeManager / Kubelet resource dynamically.
       * 2) Other recommendations.
       * </pre>
       *
       * <code>repeated .si.v1.NodeRecommendation nodeRecommendations = 5;</code>
       */
      public java.util.List<si.v1.Si.NodeRecommendation.Builder> 
           getNodeRecommendationsBuilderList() {
        return getNodeRecommendationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.NodeRecommendation, si.v1.Si.NodeRecommendation.Builder, si.v1.Si.NodeRecommendationOrBuilder> 
          getNodeRecommendationsFieldBuilder() {
        if (nodeRecommendationsBuilder_ == null) {
          nodeRecommendationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.NodeRecommendation, si.v1.Si.NodeRecommendation.Builder, si.v1.Si.NodeRecommendationOrBuilder>(
                  nodeRecommendations_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          nodeRecommendations_ = null;
        }
        return nodeRecommendationsBuilder_;
      }

      private java.util.List<si.v1.Si.RejectedJob> rejectedJobs_ =
        java.util.Collections.emptyList();
      private void ensureRejectedJobsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          rejectedJobs_ = new java.util.ArrayList<si.v1.Si.RejectedJob>(rejectedJobs_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.RejectedJob, si.v1.Si.RejectedJob.Builder, si.v1.Si.RejectedJobOrBuilder> rejectedJobsBuilder_;

      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public java.util.List<si.v1.Si.RejectedJob> getRejectedJobsList() {
        if (rejectedJobsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rejectedJobs_);
        } else {
          return rejectedJobsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public int getRejectedJobsCount() {
        if (rejectedJobsBuilder_ == null) {
          return rejectedJobs_.size();
        } else {
          return rejectedJobsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public si.v1.Si.RejectedJob getRejectedJobs(int index) {
        if (rejectedJobsBuilder_ == null) {
          return rejectedJobs_.get(index);
        } else {
          return rejectedJobsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public Builder setRejectedJobs(
          int index, si.v1.Si.RejectedJob value) {
        if (rejectedJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRejectedJobsIsMutable();
          rejectedJobs_.set(index, value);
          onChanged();
        } else {
          rejectedJobsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public Builder setRejectedJobs(
          int index, si.v1.Si.RejectedJob.Builder builderForValue) {
        if (rejectedJobsBuilder_ == null) {
          ensureRejectedJobsIsMutable();
          rejectedJobs_.set(index, builderForValue.build());
          onChanged();
        } else {
          rejectedJobsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public Builder addRejectedJobs(si.v1.Si.RejectedJob value) {
        if (rejectedJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRejectedJobsIsMutable();
          rejectedJobs_.add(value);
          onChanged();
        } else {
          rejectedJobsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public Builder addRejectedJobs(
          int index, si.v1.Si.RejectedJob value) {
        if (rejectedJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRejectedJobsIsMutable();
          rejectedJobs_.add(index, value);
          onChanged();
        } else {
          rejectedJobsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public Builder addRejectedJobs(
          si.v1.Si.RejectedJob.Builder builderForValue) {
        if (rejectedJobsBuilder_ == null) {
          ensureRejectedJobsIsMutable();
          rejectedJobs_.add(builderForValue.build());
          onChanged();
        } else {
          rejectedJobsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public Builder addRejectedJobs(
          int index, si.v1.Si.RejectedJob.Builder builderForValue) {
        if (rejectedJobsBuilder_ == null) {
          ensureRejectedJobsIsMutable();
          rejectedJobs_.add(index, builderForValue.build());
          onChanged();
        } else {
          rejectedJobsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public Builder addAllRejectedJobs(
          java.lang.Iterable<? extends si.v1.Si.RejectedJob> values) {
        if (rejectedJobsBuilder_ == null) {
          ensureRejectedJobsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rejectedJobs_);
          onChanged();
        } else {
          rejectedJobsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public Builder clearRejectedJobs() {
        if (rejectedJobsBuilder_ == null) {
          rejectedJobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          rejectedJobsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public Builder removeRejectedJobs(int index) {
        if (rejectedJobsBuilder_ == null) {
          ensureRejectedJobsIsMutable();
          rejectedJobs_.remove(index);
          onChanged();
        } else {
          rejectedJobsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public si.v1.Si.RejectedJob.Builder getRejectedJobsBuilder(
          int index) {
        return getRejectedJobsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public si.v1.Si.RejectedJobOrBuilder getRejectedJobsOrBuilder(
          int index) {
        if (rejectedJobsBuilder_ == null) {
          return rejectedJobs_.get(index);  } else {
          return rejectedJobsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public java.util.List<? extends si.v1.Si.RejectedJobOrBuilder> 
           getRejectedJobsOrBuilderList() {
        if (rejectedJobsBuilder_ != null) {
          return rejectedJobsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rejectedJobs_);
        }
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public si.v1.Si.RejectedJob.Builder addRejectedJobsBuilder() {
        return getRejectedJobsFieldBuilder().addBuilder(
            si.v1.Si.RejectedJob.getDefaultInstance());
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public si.v1.Si.RejectedJob.Builder addRejectedJobsBuilder(
          int index) {
        return getRejectedJobsFieldBuilder().addBuilder(
            index, si.v1.Si.RejectedJob.getDefaultInstance());
      }
      /**
       * <pre>
       * Rejected Jobs
       * </pre>
       *
       * <code>repeated .si.v1.RejectedJob rejectedJobs = 6;</code>
       */
      public java.util.List<si.v1.Si.RejectedJob.Builder> 
           getRejectedJobsBuilderList() {
        return getRejectedJobsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.RejectedJob, si.v1.Si.RejectedJob.Builder, si.v1.Si.RejectedJobOrBuilder> 
          getRejectedJobsFieldBuilder() {
        if (rejectedJobsBuilder_ == null) {
          rejectedJobsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.RejectedJob, si.v1.Si.RejectedJob.Builder, si.v1.Si.RejectedJobOrBuilder>(
                  rejectedJobs_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          rejectedJobs_ = null;
        }
        return rejectedJobsBuilder_;
      }

      private java.util.List<si.v1.Si.AcceptedJob> acceptedJobs_ =
        java.util.Collections.emptyList();
      private void ensureAcceptedJobsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          acceptedJobs_ = new java.util.ArrayList<si.v1.Si.AcceptedJob>(acceptedJobs_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AcceptedJob, si.v1.Si.AcceptedJob.Builder, si.v1.Si.AcceptedJobOrBuilder> acceptedJobsBuilder_;

      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public java.util.List<si.v1.Si.AcceptedJob> getAcceptedJobsList() {
        if (acceptedJobsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(acceptedJobs_);
        } else {
          return acceptedJobsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public int getAcceptedJobsCount() {
        if (acceptedJobsBuilder_ == null) {
          return acceptedJobs_.size();
        } else {
          return acceptedJobsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public si.v1.Si.AcceptedJob getAcceptedJobs(int index) {
        if (acceptedJobsBuilder_ == null) {
          return acceptedJobs_.get(index);
        } else {
          return acceptedJobsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public Builder setAcceptedJobs(
          int index, si.v1.Si.AcceptedJob value) {
        if (acceptedJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAcceptedJobsIsMutable();
          acceptedJobs_.set(index, value);
          onChanged();
        } else {
          acceptedJobsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public Builder setAcceptedJobs(
          int index, si.v1.Si.AcceptedJob.Builder builderForValue) {
        if (acceptedJobsBuilder_ == null) {
          ensureAcceptedJobsIsMutable();
          acceptedJobs_.set(index, builderForValue.build());
          onChanged();
        } else {
          acceptedJobsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public Builder addAcceptedJobs(si.v1.Si.AcceptedJob value) {
        if (acceptedJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAcceptedJobsIsMutable();
          acceptedJobs_.add(value);
          onChanged();
        } else {
          acceptedJobsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public Builder addAcceptedJobs(
          int index, si.v1.Si.AcceptedJob value) {
        if (acceptedJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAcceptedJobsIsMutable();
          acceptedJobs_.add(index, value);
          onChanged();
        } else {
          acceptedJobsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public Builder addAcceptedJobs(
          si.v1.Si.AcceptedJob.Builder builderForValue) {
        if (acceptedJobsBuilder_ == null) {
          ensureAcceptedJobsIsMutable();
          acceptedJobs_.add(builderForValue.build());
          onChanged();
        } else {
          acceptedJobsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public Builder addAcceptedJobs(
          int index, si.v1.Si.AcceptedJob.Builder builderForValue) {
        if (acceptedJobsBuilder_ == null) {
          ensureAcceptedJobsIsMutable();
          acceptedJobs_.add(index, builderForValue.build());
          onChanged();
        } else {
          acceptedJobsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public Builder addAllAcceptedJobs(
          java.lang.Iterable<? extends si.v1.Si.AcceptedJob> values) {
        if (acceptedJobsBuilder_ == null) {
          ensureAcceptedJobsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, acceptedJobs_);
          onChanged();
        } else {
          acceptedJobsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public Builder clearAcceptedJobs() {
        if (acceptedJobsBuilder_ == null) {
          acceptedJobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          acceptedJobsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public Builder removeAcceptedJobs(int index) {
        if (acceptedJobsBuilder_ == null) {
          ensureAcceptedJobsIsMutable();
          acceptedJobs_.remove(index);
          onChanged();
        } else {
          acceptedJobsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public si.v1.Si.AcceptedJob.Builder getAcceptedJobsBuilder(
          int index) {
        return getAcceptedJobsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public si.v1.Si.AcceptedJobOrBuilder getAcceptedJobsOrBuilder(
          int index) {
        if (acceptedJobsBuilder_ == null) {
          return acceptedJobs_.get(index);  } else {
          return acceptedJobsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public java.util.List<? extends si.v1.Si.AcceptedJobOrBuilder> 
           getAcceptedJobsOrBuilderList() {
        if (acceptedJobsBuilder_ != null) {
          return acceptedJobsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(acceptedJobs_);
        }
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public si.v1.Si.AcceptedJob.Builder addAcceptedJobsBuilder() {
        return getAcceptedJobsFieldBuilder().addBuilder(
            si.v1.Si.AcceptedJob.getDefaultInstance());
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public si.v1.Si.AcceptedJob.Builder addAcceptedJobsBuilder(
          int index) {
        return getAcceptedJobsFieldBuilder().addBuilder(
            index, si.v1.Si.AcceptedJob.getDefaultInstance());
      }
      /**
       * <pre>
       * Accepted Jobs
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedJob acceptedJobs = 7;</code>
       */
      public java.util.List<si.v1.Si.AcceptedJob.Builder> 
           getAcceptedJobsBuilderList() {
        return getAcceptedJobsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AcceptedJob, si.v1.Si.AcceptedJob.Builder, si.v1.Si.AcceptedJobOrBuilder> 
          getAcceptedJobsFieldBuilder() {
        if (acceptedJobsBuilder_ == null) {
          acceptedJobsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.AcceptedJob, si.v1.Si.AcceptedJob.Builder, si.v1.Si.AcceptedJobOrBuilder>(
                  acceptedJobs_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          acceptedJobs_ = null;
        }
        return acceptedJobsBuilder_;
      }

      private java.util.List<si.v1.Si.RejectedNode> rejectedNodes_ =
        java.util.Collections.emptyList();
      private void ensureRejectedNodesIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          rejectedNodes_ = new java.util.ArrayList<si.v1.Si.RejectedNode>(rejectedNodes_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.RejectedNode, si.v1.Si.RejectedNode.Builder, si.v1.Si.RejectedNodeOrBuilder> rejectedNodesBuilder_;

      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public java.util.List<si.v1.Si.RejectedNode> getRejectedNodesList() {
        if (rejectedNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rejectedNodes_);
        } else {
          return rejectedNodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public int getRejectedNodesCount() {
        if (rejectedNodesBuilder_ == null) {
          return rejectedNodes_.size();
        } else {
          return rejectedNodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public si.v1.Si.RejectedNode getRejectedNodes(int index) {
        if (rejectedNodesBuilder_ == null) {
          return rejectedNodes_.get(index);
        } else {
          return rejectedNodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public Builder setRejectedNodes(
          int index, si.v1.Si.RejectedNode value) {
        if (rejectedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRejectedNodesIsMutable();
          rejectedNodes_.set(index, value);
          onChanged();
        } else {
          rejectedNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public Builder setRejectedNodes(
          int index, si.v1.Si.RejectedNode.Builder builderForValue) {
        if (rejectedNodesBuilder_ == null) {
          ensureRejectedNodesIsMutable();
          rejectedNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          rejectedNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public Builder addRejectedNodes(si.v1.Si.RejectedNode value) {
        if (rejectedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRejectedNodesIsMutable();
          rejectedNodes_.add(value);
          onChanged();
        } else {
          rejectedNodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public Builder addRejectedNodes(
          int index, si.v1.Si.RejectedNode value) {
        if (rejectedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRejectedNodesIsMutable();
          rejectedNodes_.add(index, value);
          onChanged();
        } else {
          rejectedNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public Builder addRejectedNodes(
          si.v1.Si.RejectedNode.Builder builderForValue) {
        if (rejectedNodesBuilder_ == null) {
          ensureRejectedNodesIsMutable();
          rejectedNodes_.add(builderForValue.build());
          onChanged();
        } else {
          rejectedNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public Builder addRejectedNodes(
          int index, si.v1.Si.RejectedNode.Builder builderForValue) {
        if (rejectedNodesBuilder_ == null) {
          ensureRejectedNodesIsMutable();
          rejectedNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          rejectedNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public Builder addAllRejectedNodes(
          java.lang.Iterable<? extends si.v1.Si.RejectedNode> values) {
        if (rejectedNodesBuilder_ == null) {
          ensureRejectedNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rejectedNodes_);
          onChanged();
        } else {
          rejectedNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public Builder clearRejectedNodes() {
        if (rejectedNodesBuilder_ == null) {
          rejectedNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          rejectedNodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public Builder removeRejectedNodes(int index) {
        if (rejectedNodesBuilder_ == null) {
          ensureRejectedNodesIsMutable();
          rejectedNodes_.remove(index);
          onChanged();
        } else {
          rejectedNodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public si.v1.Si.RejectedNode.Builder getRejectedNodesBuilder(
          int index) {
        return getRejectedNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public si.v1.Si.RejectedNodeOrBuilder getRejectedNodesOrBuilder(
          int index) {
        if (rejectedNodesBuilder_ == null) {
          return rejectedNodes_.get(index);  } else {
          return rejectedNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public java.util.List<? extends si.v1.Si.RejectedNodeOrBuilder> 
           getRejectedNodesOrBuilderList() {
        if (rejectedNodesBuilder_ != null) {
          return rejectedNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rejectedNodes_);
        }
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public si.v1.Si.RejectedNode.Builder addRejectedNodesBuilder() {
        return getRejectedNodesFieldBuilder().addBuilder(
            si.v1.Si.RejectedNode.getDefaultInstance());
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public si.v1.Si.RejectedNode.Builder addRejectedNodesBuilder(
          int index) {
        return getRejectedNodesFieldBuilder().addBuilder(
            index, si.v1.Si.RejectedNode.getDefaultInstance());
      }
      /**
       * <pre>
       * Rejected Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.RejectedNode rejectedNodes = 8;</code>
       */
      public java.util.List<si.v1.Si.RejectedNode.Builder> 
           getRejectedNodesBuilderList() {
        return getRejectedNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.RejectedNode, si.v1.Si.RejectedNode.Builder, si.v1.Si.RejectedNodeOrBuilder> 
          getRejectedNodesFieldBuilder() {
        if (rejectedNodesBuilder_ == null) {
          rejectedNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.RejectedNode, si.v1.Si.RejectedNode.Builder, si.v1.Si.RejectedNodeOrBuilder>(
                  rejectedNodes_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          rejectedNodes_ = null;
        }
        return rejectedNodesBuilder_;
      }

      private java.util.List<si.v1.Si.AcceptedNode> acceptedNodes_ =
        java.util.Collections.emptyList();
      private void ensureAcceptedNodesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          acceptedNodes_ = new java.util.ArrayList<si.v1.Si.AcceptedNode>(acceptedNodes_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AcceptedNode, si.v1.Si.AcceptedNode.Builder, si.v1.Si.AcceptedNodeOrBuilder> acceptedNodesBuilder_;

      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public java.util.List<si.v1.Si.AcceptedNode> getAcceptedNodesList() {
        if (acceptedNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(acceptedNodes_);
        } else {
          return acceptedNodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public int getAcceptedNodesCount() {
        if (acceptedNodesBuilder_ == null) {
          return acceptedNodes_.size();
        } else {
          return acceptedNodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public si.v1.Si.AcceptedNode getAcceptedNodes(int index) {
        if (acceptedNodesBuilder_ == null) {
          return acceptedNodes_.get(index);
        } else {
          return acceptedNodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public Builder setAcceptedNodes(
          int index, si.v1.Si.AcceptedNode value) {
        if (acceptedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAcceptedNodesIsMutable();
          acceptedNodes_.set(index, value);
          onChanged();
        } else {
          acceptedNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public Builder setAcceptedNodes(
          int index, si.v1.Si.AcceptedNode.Builder builderForValue) {
        if (acceptedNodesBuilder_ == null) {
          ensureAcceptedNodesIsMutable();
          acceptedNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          acceptedNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public Builder addAcceptedNodes(si.v1.Si.AcceptedNode value) {
        if (acceptedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAcceptedNodesIsMutable();
          acceptedNodes_.add(value);
          onChanged();
        } else {
          acceptedNodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public Builder addAcceptedNodes(
          int index, si.v1.Si.AcceptedNode value) {
        if (acceptedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAcceptedNodesIsMutable();
          acceptedNodes_.add(index, value);
          onChanged();
        } else {
          acceptedNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public Builder addAcceptedNodes(
          si.v1.Si.AcceptedNode.Builder builderForValue) {
        if (acceptedNodesBuilder_ == null) {
          ensureAcceptedNodesIsMutable();
          acceptedNodes_.add(builderForValue.build());
          onChanged();
        } else {
          acceptedNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public Builder addAcceptedNodes(
          int index, si.v1.Si.AcceptedNode.Builder builderForValue) {
        if (acceptedNodesBuilder_ == null) {
          ensureAcceptedNodesIsMutable();
          acceptedNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          acceptedNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public Builder addAllAcceptedNodes(
          java.lang.Iterable<? extends si.v1.Si.AcceptedNode> values) {
        if (acceptedNodesBuilder_ == null) {
          ensureAcceptedNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, acceptedNodes_);
          onChanged();
        } else {
          acceptedNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public Builder clearAcceptedNodes() {
        if (acceptedNodesBuilder_ == null) {
          acceptedNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          acceptedNodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public Builder removeAcceptedNodes(int index) {
        if (acceptedNodesBuilder_ == null) {
          ensureAcceptedNodesIsMutable();
          acceptedNodes_.remove(index);
          onChanged();
        } else {
          acceptedNodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public si.v1.Si.AcceptedNode.Builder getAcceptedNodesBuilder(
          int index) {
        return getAcceptedNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public si.v1.Si.AcceptedNodeOrBuilder getAcceptedNodesOrBuilder(
          int index) {
        if (acceptedNodesBuilder_ == null) {
          return acceptedNodes_.get(index);  } else {
          return acceptedNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public java.util.List<? extends si.v1.Si.AcceptedNodeOrBuilder> 
           getAcceptedNodesOrBuilderList() {
        if (acceptedNodesBuilder_ != null) {
          return acceptedNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(acceptedNodes_);
        }
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public si.v1.Si.AcceptedNode.Builder addAcceptedNodesBuilder() {
        return getAcceptedNodesFieldBuilder().addBuilder(
            si.v1.Si.AcceptedNode.getDefaultInstance());
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public si.v1.Si.AcceptedNode.Builder addAcceptedNodesBuilder(
          int index) {
        return getAcceptedNodesFieldBuilder().addBuilder(
            index, si.v1.Si.AcceptedNode.getDefaultInstance());
      }
      /**
       * <pre>
       * Accepted Node Registrations
       * </pre>
       *
       * <code>repeated .si.v1.AcceptedNode acceptedNodes = 9;</code>
       */
      public java.util.List<si.v1.Si.AcceptedNode.Builder> 
           getAcceptedNodesBuilderList() {
        return getAcceptedNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AcceptedNode, si.v1.Si.AcceptedNode.Builder, si.v1.Si.AcceptedNodeOrBuilder> 
          getAcceptedNodesFieldBuilder() {
        if (acceptedNodesBuilder_ == null) {
          acceptedNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.AcceptedNode, si.v1.Si.AcceptedNode.Builder, si.v1.Si.AcceptedNodeOrBuilder>(
                  acceptedNodes_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          acceptedNodes_ = null;
        }
        return acceptedNodesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.UpdateResponse)
    }

    // @@protoc_insertion_point(class_scope:si.v1.UpdateResponse)
    private static final si.v1.Si.UpdateResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.UpdateResponse();
    }

    public static si.v1.Si.UpdateResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateResponse>
        PARSER = new com.google.protobuf.AbstractParser<UpdateResponse>() {
      public UpdateResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateResponse> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.UpdateResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RejectedJobOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.RejectedJob)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string jobId = 1;</code>
     */
    java.lang.String getJobId();
    /**
     * <code>string jobId = 1;</code>
     */
    com.google.protobuf.ByteString
        getJobIdBytes();

    /**
     * <code>string reason = 2;</code>
     */
    java.lang.String getReason();
    /**
     * <code>string reason = 2;</code>
     */
    com.google.protobuf.ByteString
        getReasonBytes();
  }
  /**
   * Protobuf type {@code si.v1.RejectedJob}
   */
  public  static final class RejectedJob extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.RejectedJob)
      RejectedJobOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RejectedJob.newBuilder() to construct.
    private RejectedJob(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RejectedJob() {
      jobId_ = "";
      reason_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RejectedJob(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              jobId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              reason_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_RejectedJob_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_RejectedJob_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.RejectedJob.class, si.v1.Si.RejectedJob.Builder.class);
    }

    public static final int JOBID_FIELD_NUMBER = 1;
    private volatile java.lang.Object jobId_;
    /**
     * <code>string jobId = 1;</code>
     */
    public java.lang.String getJobId() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jobId_ = s;
        return s;
      }
    }
    /**
     * <code>string jobId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getJobIdBytes() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jobId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REASON_FIELD_NUMBER = 2;
    private volatile java.lang.Object reason_;
    /**
     * <code>string reason = 2;</code>
     */
    public java.lang.String getReason() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reason_ = s;
        return s;
      }
    }
    /**
     * <code>string reason = 2;</code>
     */
    public com.google.protobuf.ByteString
        getReasonBytes() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getJobIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, jobId_);
      }
      if (!getReasonBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, reason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getJobIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, jobId_);
      }
      if (!getReasonBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, reason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.RejectedJob)) {
        return super.equals(obj);
      }
      si.v1.Si.RejectedJob other = (si.v1.Si.RejectedJob) obj;

      boolean result = true;
      result = result && getJobId()
          .equals(other.getJobId());
      result = result && getReason()
          .equals(other.getReason());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + JOBID_FIELD_NUMBER;
      hash = (53 * hash) + getJobId().hashCode();
      hash = (37 * hash) + REASON_FIELD_NUMBER;
      hash = (53 * hash) + getReason().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.RejectedJob parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RejectedJob parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RejectedJob parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RejectedJob parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RejectedJob parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RejectedJob parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RejectedJob parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RejectedJob parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RejectedJob parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.RejectedJob parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RejectedJob parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RejectedJob parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.RejectedJob prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.RejectedJob}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.RejectedJob)
        si.v1.Si.RejectedJobOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_RejectedJob_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_RejectedJob_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.RejectedJob.class, si.v1.Si.RejectedJob.Builder.class);
      }

      // Construct using si.v1.Si.RejectedJob.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        jobId_ = "";

        reason_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_RejectedJob_descriptor;
      }

      public si.v1.Si.RejectedJob getDefaultInstanceForType() {
        return si.v1.Si.RejectedJob.getDefaultInstance();
      }

      public si.v1.Si.RejectedJob build() {
        si.v1.Si.RejectedJob result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.RejectedJob buildPartial() {
        si.v1.Si.RejectedJob result = new si.v1.Si.RejectedJob(this);
        result.jobId_ = jobId_;
        result.reason_ = reason_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.RejectedJob) {
          return mergeFrom((si.v1.Si.RejectedJob)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.RejectedJob other) {
        if (other == si.v1.Si.RejectedJob.getDefaultInstance()) return this;
        if (!other.getJobId().isEmpty()) {
          jobId_ = other.jobId_;
          onChanged();
        }
        if (!other.getReason().isEmpty()) {
          reason_ = other.reason_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.RejectedJob parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.RejectedJob) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object jobId_ = "";
      /**
       * <code>string jobId = 1;</code>
       */
      public java.lang.String getJobId() {
        java.lang.Object ref = jobId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jobId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getJobIdBytes() {
        java.lang.Object ref = jobId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jobId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder setJobId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jobId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder clearJobId() {
        
        jobId_ = getDefaultInstance().getJobId();
        onChanged();
        return this;
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder setJobIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jobId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object reason_ = "";
      /**
       * <code>string reason = 2;</code>
       */
      public java.lang.String getReason() {
        java.lang.Object ref = reason_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          reason_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string reason = 2;</code>
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        java.lang.Object ref = reason_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reason_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder setReason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder clearReason() {
        
        reason_ = getDefaultInstance().getReason();
        onChanged();
        return this;
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reason_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.RejectedJob)
    }

    // @@protoc_insertion_point(class_scope:si.v1.RejectedJob)
    private static final si.v1.Si.RejectedJob DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.RejectedJob();
    }

    public static si.v1.Si.RejectedJob getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RejectedJob>
        PARSER = new com.google.protobuf.AbstractParser<RejectedJob>() {
      public RejectedJob parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RejectedJob(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RejectedJob> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RejectedJob> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.RejectedJob getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AcceptedJobOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.AcceptedJob)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string jobId = 1;</code>
     */
    java.lang.String getJobId();
    /**
     * <code>string jobId = 1;</code>
     */
    com.google.protobuf.ByteString
        getJobIdBytes();
  }
  /**
   * Protobuf type {@code si.v1.AcceptedJob}
   */
  public  static final class AcceptedJob extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.AcceptedJob)
      AcceptedJobOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AcceptedJob.newBuilder() to construct.
    private AcceptedJob(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AcceptedJob() {
      jobId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AcceptedJob(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              jobId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_AcceptedJob_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_AcceptedJob_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.AcceptedJob.class, si.v1.Si.AcceptedJob.Builder.class);
    }

    public static final int JOBID_FIELD_NUMBER = 1;
    private volatile java.lang.Object jobId_;
    /**
     * <code>string jobId = 1;</code>
     */
    public java.lang.String getJobId() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jobId_ = s;
        return s;
      }
    }
    /**
     * <code>string jobId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getJobIdBytes() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jobId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getJobIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, jobId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getJobIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, jobId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.AcceptedJob)) {
        return super.equals(obj);
      }
      si.v1.Si.AcceptedJob other = (si.v1.Si.AcceptedJob) obj;

      boolean result = true;
      result = result && getJobId()
          .equals(other.getJobId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + JOBID_FIELD_NUMBER;
      hash = (53 * hash) + getJobId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.AcceptedJob parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AcceptedJob parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AcceptedJob parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AcceptedJob parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AcceptedJob parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AcceptedJob parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AcceptedJob parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AcceptedJob parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AcceptedJob parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.AcceptedJob parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AcceptedJob parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AcceptedJob parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.AcceptedJob prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.AcceptedJob}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.AcceptedJob)
        si.v1.Si.AcceptedJobOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_AcceptedJob_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_AcceptedJob_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.AcceptedJob.class, si.v1.Si.AcceptedJob.Builder.class);
      }

      // Construct using si.v1.Si.AcceptedJob.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        jobId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_AcceptedJob_descriptor;
      }

      public si.v1.Si.AcceptedJob getDefaultInstanceForType() {
        return si.v1.Si.AcceptedJob.getDefaultInstance();
      }

      public si.v1.Si.AcceptedJob build() {
        si.v1.Si.AcceptedJob result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.AcceptedJob buildPartial() {
        si.v1.Si.AcceptedJob result = new si.v1.Si.AcceptedJob(this);
        result.jobId_ = jobId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.AcceptedJob) {
          return mergeFrom((si.v1.Si.AcceptedJob)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.AcceptedJob other) {
        if (other == si.v1.Si.AcceptedJob.getDefaultInstance()) return this;
        if (!other.getJobId().isEmpty()) {
          jobId_ = other.jobId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.AcceptedJob parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.AcceptedJob) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object jobId_ = "";
      /**
       * <code>string jobId = 1;</code>
       */
      public java.lang.String getJobId() {
        java.lang.Object ref = jobId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jobId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getJobIdBytes() {
        java.lang.Object ref = jobId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jobId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder setJobId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jobId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder clearJobId() {
        
        jobId_ = getDefaultInstance().getJobId();
        onChanged();
        return this;
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder setJobIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jobId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.AcceptedJob)
    }

    // @@protoc_insertion_point(class_scope:si.v1.AcceptedJob)
    private static final si.v1.Si.AcceptedJob DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.AcceptedJob();
    }

    public static si.v1.Si.AcceptedJob getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AcceptedJob>
        PARSER = new com.google.protobuf.AbstractParser<AcceptedJob>() {
      public AcceptedJob parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AcceptedJob(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AcceptedJob> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AcceptedJob> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.AcceptedJob getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RejectedNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.RejectedNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string nodeId = 1;</code>
     */
    java.lang.String getNodeId();
    /**
     * <code>string nodeId = 1;</code>
     */
    com.google.protobuf.ByteString
        getNodeIdBytes();

    /**
     * <code>string reason = 2;</code>
     */
    java.lang.String getReason();
    /**
     * <code>string reason = 2;</code>
     */
    com.google.protobuf.ByteString
        getReasonBytes();
  }
  /**
   * Protobuf type {@code si.v1.RejectedNode}
   */
  public  static final class RejectedNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.RejectedNode)
      RejectedNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RejectedNode.newBuilder() to construct.
    private RejectedNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RejectedNode() {
      nodeId_ = "";
      reason_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RejectedNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              reason_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_RejectedNode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_RejectedNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.RejectedNode.class, si.v1.Si.RejectedNode.Builder.class);
    }

    public static final int NODEID_FIELD_NUMBER = 1;
    private volatile java.lang.Object nodeId_;
    /**
     * <code>string nodeId = 1;</code>
     */
    public java.lang.String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeId_ = s;
        return s;
      }
    }
    /**
     * <code>string nodeId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REASON_FIELD_NUMBER = 2;
    private volatile java.lang.Object reason_;
    /**
     * <code>string reason = 2;</code>
     */
    public java.lang.String getReason() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reason_ = s;
        return s;
      }
    }
    /**
     * <code>string reason = 2;</code>
     */
    public com.google.protobuf.ByteString
        getReasonBytes() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeId_);
      }
      if (!getReasonBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, reason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeId_);
      }
      if (!getReasonBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, reason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.RejectedNode)) {
        return super.equals(obj);
      }
      si.v1.Si.RejectedNode other = (si.v1.Si.RejectedNode) obj;

      boolean result = true;
      result = result && getNodeId()
          .equals(other.getNodeId());
      result = result && getReason()
          .equals(other.getReason());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODEID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId().hashCode();
      hash = (37 * hash) + REASON_FIELD_NUMBER;
      hash = (53 * hash) + getReason().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.RejectedNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RejectedNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RejectedNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RejectedNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RejectedNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RejectedNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RejectedNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RejectedNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RejectedNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.RejectedNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RejectedNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RejectedNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.RejectedNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.RejectedNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.RejectedNode)
        si.v1.Si.RejectedNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_RejectedNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_RejectedNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.RejectedNode.class, si.v1.Si.RejectedNode.Builder.class);
      }

      // Construct using si.v1.Si.RejectedNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = "";

        reason_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_RejectedNode_descriptor;
      }

      public si.v1.Si.RejectedNode getDefaultInstanceForType() {
        return si.v1.Si.RejectedNode.getDefaultInstance();
      }

      public si.v1.Si.RejectedNode build() {
        si.v1.Si.RejectedNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.RejectedNode buildPartial() {
        si.v1.Si.RejectedNode result = new si.v1.Si.RejectedNode(this);
        result.nodeId_ = nodeId_;
        result.reason_ = reason_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.RejectedNode) {
          return mergeFrom((si.v1.Si.RejectedNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.RejectedNode other) {
        if (other == si.v1.Si.RejectedNode.getDefaultInstance()) return this;
        if (!other.getNodeId().isEmpty()) {
          nodeId_ = other.nodeId_;
          onChanged();
        }
        if (!other.getReason().isEmpty()) {
          reason_ = other.reason_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.RejectedNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.RejectedNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object nodeId_ = "";
      /**
       * <code>string nodeId = 1;</code>
       */
      public java.lang.String getNodeId() {
        java.lang.Object ref = nodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string nodeId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNodeIdBytes() {
        java.lang.Object ref = nodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string nodeId = 1;</code>
       */
      public Builder setNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string nodeId = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = getDefaultInstance().getNodeId();
        onChanged();
        return this;
      }
      /**
       * <code>string nodeId = 1;</code>
       */
      public Builder setNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object reason_ = "";
      /**
       * <code>string reason = 2;</code>
       */
      public java.lang.String getReason() {
        java.lang.Object ref = reason_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          reason_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string reason = 2;</code>
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        java.lang.Object ref = reason_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reason_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder setReason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder clearReason() {
        
        reason_ = getDefaultInstance().getReason();
        onChanged();
        return this;
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reason_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.RejectedNode)
    }

    // @@protoc_insertion_point(class_scope:si.v1.RejectedNode)
    private static final si.v1.Si.RejectedNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.RejectedNode();
    }

    public static si.v1.Si.RejectedNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RejectedNode>
        PARSER = new com.google.protobuf.AbstractParser<RejectedNode>() {
      public RejectedNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RejectedNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RejectedNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RejectedNode> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.RejectedNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AcceptedNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.AcceptedNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string nodeId = 1;</code>
     */
    java.lang.String getNodeId();
    /**
     * <code>string nodeId = 1;</code>
     */
    com.google.protobuf.ByteString
        getNodeIdBytes();
  }
  /**
   * Protobuf type {@code si.v1.AcceptedNode}
   */
  public  static final class AcceptedNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.AcceptedNode)
      AcceptedNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AcceptedNode.newBuilder() to construct.
    private AcceptedNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AcceptedNode() {
      nodeId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AcceptedNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_AcceptedNode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_AcceptedNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.AcceptedNode.class, si.v1.Si.AcceptedNode.Builder.class);
    }

    public static final int NODEID_FIELD_NUMBER = 1;
    private volatile java.lang.Object nodeId_;
    /**
     * <code>string nodeId = 1;</code>
     */
    public java.lang.String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeId_ = s;
        return s;
      }
    }
    /**
     * <code>string nodeId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.AcceptedNode)) {
        return super.equals(obj);
      }
      si.v1.Si.AcceptedNode other = (si.v1.Si.AcceptedNode) obj;

      boolean result = true;
      result = result && getNodeId()
          .equals(other.getNodeId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODEID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.AcceptedNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AcceptedNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AcceptedNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AcceptedNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AcceptedNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AcceptedNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AcceptedNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AcceptedNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AcceptedNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.AcceptedNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AcceptedNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AcceptedNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.AcceptedNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.AcceptedNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.AcceptedNode)
        si.v1.Si.AcceptedNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_AcceptedNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_AcceptedNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.AcceptedNode.class, si.v1.Si.AcceptedNode.Builder.class);
      }

      // Construct using si.v1.Si.AcceptedNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_AcceptedNode_descriptor;
      }

      public si.v1.Si.AcceptedNode getDefaultInstanceForType() {
        return si.v1.Si.AcceptedNode.getDefaultInstance();
      }

      public si.v1.Si.AcceptedNode build() {
        si.v1.Si.AcceptedNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.AcceptedNode buildPartial() {
        si.v1.Si.AcceptedNode result = new si.v1.Si.AcceptedNode(this);
        result.nodeId_ = nodeId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.AcceptedNode) {
          return mergeFrom((si.v1.Si.AcceptedNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.AcceptedNode other) {
        if (other == si.v1.Si.AcceptedNode.getDefaultInstance()) return this;
        if (!other.getNodeId().isEmpty()) {
          nodeId_ = other.nodeId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.AcceptedNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.AcceptedNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object nodeId_ = "";
      /**
       * <code>string nodeId = 1;</code>
       */
      public java.lang.String getNodeId() {
        java.lang.Object ref = nodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string nodeId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNodeIdBytes() {
        java.lang.Object ref = nodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string nodeId = 1;</code>
       */
      public Builder setNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string nodeId = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = getDefaultInstance().getNodeId();
        onChanged();
        return this;
      }
      /**
       * <code>string nodeId = 1;</code>
       */
      public Builder setNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.AcceptedNode)
    }

    // @@protoc_insertion_point(class_scope:si.v1.AcceptedNode)
    private static final si.v1.Si.AcceptedNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.AcceptedNode();
    }

    public static si.v1.Si.AcceptedNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AcceptedNode>
        PARSER = new com.google.protobuf.AbstractParser<AcceptedNode>() {
      public AcceptedNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AcceptedNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AcceptedNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AcceptedNode> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.AcceptedNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PriorityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.Priority)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Priority of each ask, higher is more important.
     * How to deal with Priority is handled by each scheduler implementation.
     * </pre>
     *
     * <code>int32 priorityValue = 1;</code>
     */
    int getPriorityValue();

    /**
     * <pre>
     * PriorityClass is used for app owners to set named priorities. This is a portable way for
     * app owners have a consistent way to setup priority across clusters
     * </pre>
     *
     * <code>string priorityClassName = 2;</code>
     */
    java.lang.String getPriorityClassName();
    /**
     * <pre>
     * PriorityClass is used for app owners to set named priorities. This is a portable way for
     * app owners have a consistent way to setup priority across clusters
     * </pre>
     *
     * <code>string priorityClassName = 2;</code>
     */
    com.google.protobuf.ByteString
        getPriorityClassNameBytes();

    public si.v1.Si.Priority.PriorityCase getPriorityCase();
  }
  /**
   * Protobuf type {@code si.v1.Priority}
   */
  public  static final class Priority extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.Priority)
      PriorityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Priority.newBuilder() to construct.
    private Priority(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Priority() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Priority(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              priorityCase_ = 1;
              priority_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              priorityCase_ = 2;
              priority_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_Priority_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_Priority_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.Priority.class, si.v1.Si.Priority.Builder.class);
    }

    private int priorityCase_ = 0;
    private java.lang.Object priority_;
    public enum PriorityCase
        implements com.google.protobuf.Internal.EnumLite {
      PRIORITYVALUE(1),
      PRIORITYCLASSNAME(2),
      PRIORITY_NOT_SET(0);
      private final int value;
      private PriorityCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PriorityCase valueOf(int value) {
        return forNumber(value);
      }

      public static PriorityCase forNumber(int value) {
        switch (value) {
          case 1: return PRIORITYVALUE;
          case 2: return PRIORITYCLASSNAME;
          case 0: return PRIORITY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PriorityCase
    getPriorityCase() {
      return PriorityCase.forNumber(
          priorityCase_);
    }

    public static final int PRIORITYVALUE_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Priority of each ask, higher is more important.
     * How to deal with Priority is handled by each scheduler implementation.
     * </pre>
     *
     * <code>int32 priorityValue = 1;</code>
     */
    public int getPriorityValue() {
      if (priorityCase_ == 1) {
        return (java.lang.Integer) priority_;
      }
      return 0;
    }

    public static final int PRIORITYCLASSNAME_FIELD_NUMBER = 2;
    /**
     * <pre>
     * PriorityClass is used for app owners to set named priorities. This is a portable way for
     * app owners have a consistent way to setup priority across clusters
     * </pre>
     *
     * <code>string priorityClassName = 2;</code>
     */
    public java.lang.String getPriorityClassName() {
      java.lang.Object ref = "";
      if (priorityCase_ == 2) {
        ref = priority_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (priorityCase_ == 2) {
          priority_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * PriorityClass is used for app owners to set named priorities. This is a portable way for
     * app owners have a consistent way to setup priority across clusters
     * </pre>
     *
     * <code>string priorityClassName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPriorityClassNameBytes() {
      java.lang.Object ref = "";
      if (priorityCase_ == 2) {
        ref = priority_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (priorityCase_ == 2) {
          priority_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (priorityCase_ == 1) {
        output.writeInt32(
            1, (int)((java.lang.Integer) priority_));
      }
      if (priorityCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, priority_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (priorityCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              1, (int)((java.lang.Integer) priority_));
      }
      if (priorityCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, priority_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.Priority)) {
        return super.equals(obj);
      }
      si.v1.Si.Priority other = (si.v1.Si.Priority) obj;

      boolean result = true;
      result = result && getPriorityCase().equals(
          other.getPriorityCase());
      if (!result) return false;
      switch (priorityCase_) {
        case 1:
          result = result && (getPriorityValue()
              == other.getPriorityValue());
          break;
        case 2:
          result = result && getPriorityClassName()
              .equals(other.getPriorityClassName());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (priorityCase_) {
        case 1:
          hash = (37 * hash) + PRIORITYVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getPriorityValue();
          break;
        case 2:
          hash = (37 * hash) + PRIORITYCLASSNAME_FIELD_NUMBER;
          hash = (53 * hash) + getPriorityClassName().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.Priority parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Priority parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Priority parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Priority parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Priority parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Priority parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Priority parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.Priority parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.Priority parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.Priority parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.Priority parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.Priority parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.Priority prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.Priority}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.Priority)
        si.v1.Si.PriorityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_Priority_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_Priority_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.Priority.class, si.v1.Si.Priority.Builder.class);
      }

      // Construct using si.v1.Si.Priority.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        priorityCase_ = 0;
        priority_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_Priority_descriptor;
      }

      public si.v1.Si.Priority getDefaultInstanceForType() {
        return si.v1.Si.Priority.getDefaultInstance();
      }

      public si.v1.Si.Priority build() {
        si.v1.Si.Priority result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.Priority buildPartial() {
        si.v1.Si.Priority result = new si.v1.Si.Priority(this);
        if (priorityCase_ == 1) {
          result.priority_ = priority_;
        }
        if (priorityCase_ == 2) {
          result.priority_ = priority_;
        }
        result.priorityCase_ = priorityCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.Priority) {
          return mergeFrom((si.v1.Si.Priority)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.Priority other) {
        if (other == si.v1.Si.Priority.getDefaultInstance()) return this;
        switch (other.getPriorityCase()) {
          case PRIORITYVALUE: {
            setPriorityValue(other.getPriorityValue());
            break;
          }
          case PRIORITYCLASSNAME: {
            priorityCase_ = 2;
            priority_ = other.priority_;
            onChanged();
            break;
          }
          case PRIORITY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.Priority parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.Priority) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int priorityCase_ = 0;
      private java.lang.Object priority_;
      public PriorityCase
          getPriorityCase() {
        return PriorityCase.forNumber(
            priorityCase_);
      }

      public Builder clearPriority() {
        priorityCase_ = 0;
        priority_ = null;
        onChanged();
        return this;
      }


      /**
       * <pre>
       * Priority of each ask, higher is more important.
       * How to deal with Priority is handled by each scheduler implementation.
       * </pre>
       *
       * <code>int32 priorityValue = 1;</code>
       */
      public int getPriorityValue() {
        if (priorityCase_ == 1) {
          return (java.lang.Integer) priority_;
        }
        return 0;
      }
      /**
       * <pre>
       * Priority of each ask, higher is more important.
       * How to deal with Priority is handled by each scheduler implementation.
       * </pre>
       *
       * <code>int32 priorityValue = 1;</code>
       */
      public Builder setPriorityValue(int value) {
        priorityCase_ = 1;
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Priority of each ask, higher is more important.
       * How to deal with Priority is handled by each scheduler implementation.
       * </pre>
       *
       * <code>int32 priorityValue = 1;</code>
       */
      public Builder clearPriorityValue() {
        if (priorityCase_ == 1) {
          priorityCase_ = 0;
          priority_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * PriorityClass is used for app owners to set named priorities. This is a portable way for
       * app owners have a consistent way to setup priority across clusters
       * </pre>
       *
       * <code>string priorityClassName = 2;</code>
       */
      public java.lang.String getPriorityClassName() {
        java.lang.Object ref = "";
        if (priorityCase_ == 2) {
          ref = priority_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (priorityCase_ == 2) {
            priority_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * PriorityClass is used for app owners to set named priorities. This is a portable way for
       * app owners have a consistent way to setup priority across clusters
       * </pre>
       *
       * <code>string priorityClassName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPriorityClassNameBytes() {
        java.lang.Object ref = "";
        if (priorityCase_ == 2) {
          ref = priority_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (priorityCase_ == 2) {
            priority_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * PriorityClass is used for app owners to set named priorities. This is a portable way for
       * app owners have a consistent way to setup priority across clusters
       * </pre>
       *
       * <code>string priorityClassName = 2;</code>
       */
      public Builder setPriorityClassName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  priorityCase_ = 2;
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PriorityClass is used for app owners to set named priorities. This is a portable way for
       * app owners have a consistent way to setup priority across clusters
       * </pre>
       *
       * <code>string priorityClassName = 2;</code>
       */
      public Builder clearPriorityClassName() {
        if (priorityCase_ == 2) {
          priorityCase_ = 0;
          priority_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * PriorityClass is used for app owners to set named priorities. This is a portable way for
       * app owners have a consistent way to setup priority across clusters
       * </pre>
       *
       * <code>string priorityClassName = 2;</code>
       */
      public Builder setPriorityClassNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        priorityCase_ = 2;
        priority_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.Priority)
    }

    // @@protoc_insertion_point(class_scope:si.v1.Priority)
    private static final si.v1.Si.Priority DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.Priority();
    }

    public static si.v1.Si.Priority getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Priority>
        PARSER = new com.google.protobuf.AbstractParser<Priority>() {
      public Priority parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Priority(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Priority> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Priority> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.Priority getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResourceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.Resource)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
     */
    int getResourcesCount();
    /**
     * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
     */
    boolean containsResources(
        java.lang.String key);
    /**
     * Use {@link #getResourcesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, si.v1.Si.Quantity>
    getResources();
    /**
     * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
     */
    java.util.Map<java.lang.String, si.v1.Si.Quantity>
    getResourcesMap();
    /**
     * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
     */

    si.v1.Si.Quantity getResourcesOrDefault(
        java.lang.String key,
        si.v1.Si.Quantity defaultValue);
    /**
     * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
     */

    si.v1.Si.Quantity getResourcesOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * A sparse map of resource to Quantity.
   * </pre>
   *
   * Protobuf type {@code si.v1.Resource}
   */
  public  static final class Resource extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.Resource)
      ResourceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Resource.newBuilder() to construct.
    private Resource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Resource() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Resource(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                resources_ = com.google.protobuf.MapField.newMapField(
                    ResourcesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, si.v1.Si.Quantity>
              resources__ = input.readMessage(
                  ResourcesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              resources_.getMutableMap().put(
                  resources__.getKey(), resources__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_Resource_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetResources();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_Resource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.Resource.class, si.v1.Si.Resource.Builder.class);
    }

    public static final int RESOURCES_FIELD_NUMBER = 1;
    private static final class ResourcesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, si.v1.Si.Quantity> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, si.v1.Si.Quantity>newDefaultInstance(
                  si.v1.Si.internal_static_si_v1_Resource_ResourcesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  si.v1.Si.Quantity.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, si.v1.Si.Quantity> resources_;
    private com.google.protobuf.MapField<java.lang.String, si.v1.Si.Quantity>
    internalGetResources() {
      if (resources_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ResourcesDefaultEntryHolder.defaultEntry);
      }
      return resources_;
    }

    public int getResourcesCount() {
      return internalGetResources().getMap().size();
    }
    /**
     * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
     */

    public boolean containsResources(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetResources().getMap().containsKey(key);
    }
    /**
     * Use {@link #getResourcesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, si.v1.Si.Quantity> getResources() {
      return getResourcesMap();
    }
    /**
     * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
     */

    public java.util.Map<java.lang.String, si.v1.Si.Quantity> getResourcesMap() {
      return internalGetResources().getMap();
    }
    /**
     * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
     */

    public si.v1.Si.Quantity getResourcesOrDefault(
        java.lang.String key,
        si.v1.Si.Quantity defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, si.v1.Si.Quantity> map =
          internalGetResources().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
     */

    public si.v1.Si.Quantity getResourcesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, si.v1.Si.Quantity> map =
          internalGetResources().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetResources(),
          ResourcesDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, si.v1.Si.Quantity> entry
           : internalGetResources().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, si.v1.Si.Quantity>
        resources__ = ResourcesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, resources__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.Resource)) {
        return super.equals(obj);
      }
      si.v1.Si.Resource other = (si.v1.Si.Resource) obj;

      boolean result = true;
      result = result && internalGetResources().equals(
          other.internalGetResources());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetResources().getMap().isEmpty()) {
        hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetResources().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.Resource parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Resource parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Resource parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Resource parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Resource parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Resource parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Resource parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.Resource parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.Resource parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.Resource parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.Resource parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.Resource parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.Resource prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A sparse map of resource to Quantity.
     * </pre>
     *
     * Protobuf type {@code si.v1.Resource}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.Resource)
        si.v1.Si.ResourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_Resource_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetResources();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableResources();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_Resource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.Resource.class, si.v1.Si.Resource.Builder.class);
      }

      // Construct using si.v1.Si.Resource.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableResources().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_Resource_descriptor;
      }

      public si.v1.Si.Resource getDefaultInstanceForType() {
        return si.v1.Si.Resource.getDefaultInstance();
      }

      public si.v1.Si.Resource build() {
        si.v1.Si.Resource result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.Resource buildPartial() {
        si.v1.Si.Resource result = new si.v1.Si.Resource(this);
        int from_bitField0_ = bitField0_;
        result.resources_ = internalGetResources();
        result.resources_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.Resource) {
          return mergeFrom((si.v1.Si.Resource)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.Resource other) {
        if (other == si.v1.Si.Resource.getDefaultInstance()) return this;
        internalGetMutableResources().mergeFrom(
            other.internalGetResources());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.Resource parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.Resource) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, si.v1.Si.Quantity> resources_;
      private com.google.protobuf.MapField<java.lang.String, si.v1.Si.Quantity>
      internalGetResources() {
        if (resources_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ResourcesDefaultEntryHolder.defaultEntry);
        }
        return resources_;
      }
      private com.google.protobuf.MapField<java.lang.String, si.v1.Si.Quantity>
      internalGetMutableResources() {
        onChanged();;
        if (resources_ == null) {
          resources_ = com.google.protobuf.MapField.newMapField(
              ResourcesDefaultEntryHolder.defaultEntry);
        }
        if (!resources_.isMutable()) {
          resources_ = resources_.copy();
        }
        return resources_;
      }

      public int getResourcesCount() {
        return internalGetResources().getMap().size();
      }
      /**
       * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
       */

      public boolean containsResources(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetResources().getMap().containsKey(key);
      }
      /**
       * Use {@link #getResourcesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, si.v1.Si.Quantity> getResources() {
        return getResourcesMap();
      }
      /**
       * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
       */

      public java.util.Map<java.lang.String, si.v1.Si.Quantity> getResourcesMap() {
        return internalGetResources().getMap();
      }
      /**
       * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
       */

      public si.v1.Si.Quantity getResourcesOrDefault(
          java.lang.String key,
          si.v1.Si.Quantity defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, si.v1.Si.Quantity> map =
            internalGetResources().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
       */

      public si.v1.Si.Quantity getResourcesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, si.v1.Si.Quantity> map =
            internalGetResources().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearResources() {
        internalGetMutableResources().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
       */

      public Builder removeResources(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableResources().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, si.v1.Si.Quantity>
      getMutableResources() {
        return internalGetMutableResources().getMutableMap();
      }
      /**
       * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
       */
      public Builder putResources(
          java.lang.String key,
          si.v1.Si.Quantity value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableResources().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .si.v1.Quantity&gt; resources = 1;</code>
       */

      public Builder putAllResources(
          java.util.Map<java.lang.String, si.v1.Si.Quantity> values) {
        internalGetMutableResources().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.Resource)
    }

    // @@protoc_insertion_point(class_scope:si.v1.Resource)
    private static final si.v1.Si.Resource DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.Resource();
    }

    public static si.v1.Si.Resource getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Resource>
        PARSER = new com.google.protobuf.AbstractParser<Resource>() {
      public Resource parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Resource(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Resource> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Resource> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.Resource getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QuantityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.Quantity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 value = 1;</code>
     */
    long getValue();
  }
  /**
   * <pre>
   * Quantity includes a single int64 value
   * </pre>
   *
   * Protobuf type {@code si.v1.Quantity}
   */
  public  static final class Quantity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.Quantity)
      QuantityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Quantity.newBuilder() to construct.
    private Quantity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Quantity() {
      value_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Quantity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              value_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_Quantity_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_Quantity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.Quantity.class, si.v1.Si.Quantity.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private long value_;
    /**
     * <code>int64 value = 1;</code>
     */
    public long getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != 0L) {
        output.writeInt64(1, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.Quantity)) {
        return super.equals(obj);
      }
      si.v1.Si.Quantity other = (si.v1.Si.Quantity) obj;

      boolean result = true;
      result = result && (getValue()
          == other.getValue());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getValue());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.Quantity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Quantity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Quantity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Quantity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Quantity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Quantity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Quantity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.Quantity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.Quantity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.Quantity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.Quantity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.Quantity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.Quantity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Quantity includes a single int64 value
     * </pre>
     *
     * Protobuf type {@code si.v1.Quantity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.Quantity)
        si.v1.Si.QuantityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_Quantity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_Quantity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.Quantity.class, si.v1.Si.Quantity.Builder.class);
      }

      // Construct using si.v1.Si.Quantity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        value_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_Quantity_descriptor;
      }

      public si.v1.Si.Quantity getDefaultInstanceForType() {
        return si.v1.Si.Quantity.getDefaultInstance();
      }

      public si.v1.Si.Quantity build() {
        si.v1.Si.Quantity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.Quantity buildPartial() {
        si.v1.Si.Quantity result = new si.v1.Si.Quantity(this);
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.Quantity) {
          return mergeFrom((si.v1.Si.Quantity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.Quantity other) {
        if (other == si.v1.Si.Quantity.getDefaultInstance()) return this;
        if (other.getValue() != 0L) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.Quantity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.Quantity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long value_ ;
      /**
       * <code>int64 value = 1;</code>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>int64 value = 1;</code>
       */
      public Builder setValue(long value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 value = 1;</code>
       */
      public Builder clearValue() {
        
        value_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.Quantity)
    }

    // @@protoc_insertion_point(class_scope:si.v1.Quantity)
    private static final si.v1.Si.Quantity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.Quantity();
    }

    public static si.v1.Si.Quantity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Quantity>
        PARSER = new com.google.protobuf.AbstractParser<Quantity>() {
      public Quantity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Quantity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Quantity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Quantity> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.Quantity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllocationAskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.AllocationAsk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Allocation key is used by both of scheduler and RM to track container allocation.
     * It doesn't have to be same as RM's internal allocation id (such as Pod name of K8s or ContainerId of YARN).
     * If multiple allocation from a same AllocationAsk returned to RM, they will share the same allocationKey.
     * If ALlocationAsk with the same allocationKey exists, old one will be replaced by the new one.
     * </pre>
     *
     * <code>string allocationKey = 1;</code>
     */
    java.lang.String getAllocationKey();
    /**
     * <pre>
     * Allocation key is used by both of scheduler and RM to track container allocation.
     * It doesn't have to be same as RM's internal allocation id (such as Pod name of K8s or ContainerId of YARN).
     * If multiple allocation from a same AllocationAsk returned to RM, they will share the same allocationKey.
     * If ALlocationAsk with the same allocationKey exists, old one will be replaced by the new one.
     * </pre>
     *
     * <code>string allocationKey = 1;</code>
     */
    com.google.protobuf.ByteString
        getAllocationKeyBytes();

    /**
     * <pre>
     * How much resource per allocation?
     * </pre>
     *
     * <code>.si.v1.Resource resourceAsk = 2;</code>
     */
    boolean hasResourceAsk();
    /**
     * <pre>
     * How much resource per allocation?
     * </pre>
     *
     * <code>.si.v1.Resource resourceAsk = 2;</code>
     */
    si.v1.Si.Resource getResourceAsk();
    /**
     * <pre>
     * How much resource per allocation?
     * </pre>
     *
     * <code>.si.v1.Resource resourceAsk = 2;</code>
     */
    si.v1.Si.ResourceOrBuilder getResourceAskOrBuilder();

    /**
     * <pre>
     * Tags of Allocation
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 3;</code>
     */
    int getTagsCount();
    /**
     * <pre>
     * Tags of Allocation
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 3;</code>
     */
    boolean containsTags(
        java.lang.String key);
    /**
     * Use {@link #getTagsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getTags();
    /**
     * <pre>
     * Tags of Allocation
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getTagsMap();
    /**
     * <pre>
     * Tags of Allocation
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 3;</code>
     */

    java.lang.String getTagsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Tags of Allocation
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 3;</code>
     */

    java.lang.String getTagsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 4;</code>
     */
    boolean hasPriority();
    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 4;</code>
     */
    si.v1.Si.Priority getPriority();
    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 4;</code>
     */
    si.v1.Si.PriorityOrBuilder getPriorityOrBuilder();

    /**
     * <pre>
     * Placement constraint defines how app wanna to be placed in the cluster.
     * if not set, no placement constraint will be applied.
     * </pre>
     *
     * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
     */
    boolean hasPlacementConstraint();
    /**
     * <pre>
     * Placement constraint defines how app wanna to be placed in the cluster.
     * if not set, no placement constraint will be applied.
     * </pre>
     *
     * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
     */
    si.v1.Si.PlacementConstraint getPlacementConstraint();
    /**
     * <pre>
     * Placement constraint defines how app wanna to be placed in the cluster.
     * if not set, no placement constraint will be applied.
     * </pre>
     *
     * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
     */
    si.v1.Si.PlacementConstraintOrBuilder getPlacementConstraintOrBuilder();

    /**
     * <pre>
     * Maximum number of allocations
     * </pre>
     *
     * <code>int32 maxAllocations = 7;</code>
     */
    int getMaxAllocations();

    /**
     * <pre>
     * Who owns the allocation
     * </pre>
     *
     * <code>.si.v1.UserGroupInformation ugi = 8;</code>
     */
    boolean hasUgi();
    /**
     * <pre>
     * Who owns the allocation
     * </pre>
     *
     * <code>.si.v1.UserGroupInformation ugi = 8;</code>
     */
    si.v1.Si.UserGroupInformation getUgi();
    /**
     * <pre>
     * Who owns the allocation
     * </pre>
     *
     * <code>.si.v1.UserGroupInformation ugi = 8;</code>
     */
    si.v1.Si.UserGroupInformationOrBuilder getUgiOrBuilder();

    /**
     * <pre>
     * Place this allocation to specified queue.
     * If queue not specified, scheduler will place the allocation to a queue
     * according to policy
     * When queue is specified and allocation cannot be allocated in asked queue
     * AllocationAsk will be rejected.
     * </pre>
     *
     * <code>string queueName = 9;</code>
     */
    java.lang.String getQueueName();
    /**
     * <pre>
     * Place this allocation to specified queue.
     * If queue not specified, scheduler will place the allocation to a queue
     * according to policy
     * When queue is specified and allocation cannot be allocated in asked queue
     * AllocationAsk will be rejected.
     * </pre>
     *
     * <code>string queueName = 9;</code>
     */
    com.google.protobuf.ByteString
        getQueueNameBytes();

    /**
     * <pre>
     * Execution timeout: How long this allocation will be terminated (by scheduler)
     * once allocated by scheduler, 0 or negative value means never expire.
     * </pre>
     *
     * <code>int64 executionTimeoutMilliSeconds = 10;</code>
     */
    long getExecutionTimeoutMilliSeconds();

    /**
     * <pre>
     * Which job this allocation ask belongs to, if it is not specified. The allocation
     * won't belong to any job.
     * </pre>
     *
     * <code>string jobId = 11;</code>
     */
    java.lang.String getJobId();
    /**
     * <pre>
     * Which job this allocation ask belongs to, if it is not specified. The allocation
     * won't belong to any job.
     * </pre>
     *
     * <code>string jobId = 11;</code>
     */
    com.google.protobuf.ByteString
        getJobIdBytes();

    /**
     * <pre>
     * Which partition requested by this ask
     * One ask can only request one node partition
     * </pre>
     *
     * <code>string PartitionName = 12;</code>
     */
    java.lang.String getPartitionName();
    /**
     * <pre>
     * Which partition requested by this ask
     * One ask can only request one node partition
     * </pre>
     *
     * <code>string PartitionName = 12;</code>
     */
    com.google.protobuf.ByteString
        getPartitionNameBytes();
  }
  /**
   * Protobuf type {@code si.v1.AllocationAsk}
   */
  public  static final class AllocationAsk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.AllocationAsk)
      AllocationAskOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllocationAsk.newBuilder() to construct.
    private AllocationAsk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllocationAsk() {
      allocationKey_ = "";
      maxAllocations_ = 0;
      queueName_ = "";
      executionTimeoutMilliSeconds_ = 0L;
      jobId_ = "";
      partitionName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AllocationAsk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              allocationKey_ = s;
              break;
            }
            case 18: {
              si.v1.Si.Resource.Builder subBuilder = null;
              if (resourceAsk_ != null) {
                subBuilder = resourceAsk_.toBuilder();
              }
              resourceAsk_ = input.readMessage(si.v1.Si.Resource.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resourceAsk_);
                resourceAsk_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                tags_ = com.google.protobuf.MapField.newMapField(
                    TagsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              tags__ = input.readMessage(
                  TagsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              tags_.getMutableMap().put(
                  tags__.getKey(), tags__.getValue());
              break;
            }
            case 34: {
              si.v1.Si.Priority.Builder subBuilder = null;
              if (priority_ != null) {
                subBuilder = priority_.toBuilder();
              }
              priority_ = input.readMessage(si.v1.Si.Priority.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(priority_);
                priority_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              si.v1.Si.PlacementConstraint.Builder subBuilder = null;
              if (placementConstraint_ != null) {
                subBuilder = placementConstraint_.toBuilder();
              }
              placementConstraint_ = input.readMessage(si.v1.Si.PlacementConstraint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(placementConstraint_);
                placementConstraint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {

              maxAllocations_ = input.readInt32();
              break;
            }
            case 66: {
              si.v1.Si.UserGroupInformation.Builder subBuilder = null;
              if (ugi_ != null) {
                subBuilder = ugi_.toBuilder();
              }
              ugi_ = input.readMessage(si.v1.Si.UserGroupInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ugi_);
                ugi_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              queueName_ = s;
              break;
            }
            case 80: {

              executionTimeoutMilliSeconds_ = input.readInt64();
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              jobId_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              partitionName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_AllocationAsk_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetTags();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_AllocationAsk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.AllocationAsk.class, si.v1.Si.AllocationAsk.Builder.class);
    }

    private int bitField0_;
    public static final int ALLOCATIONKEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object allocationKey_;
    /**
     * <pre>
     * Allocation key is used by both of scheduler and RM to track container allocation.
     * It doesn't have to be same as RM's internal allocation id (such as Pod name of K8s or ContainerId of YARN).
     * If multiple allocation from a same AllocationAsk returned to RM, they will share the same allocationKey.
     * If ALlocationAsk with the same allocationKey exists, old one will be replaced by the new one.
     * </pre>
     *
     * <code>string allocationKey = 1;</code>
     */
    public java.lang.String getAllocationKey() {
      java.lang.Object ref = allocationKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        allocationKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Allocation key is used by both of scheduler and RM to track container allocation.
     * It doesn't have to be same as RM's internal allocation id (such as Pod name of K8s or ContainerId of YARN).
     * If multiple allocation from a same AllocationAsk returned to RM, they will share the same allocationKey.
     * If ALlocationAsk with the same allocationKey exists, old one will be replaced by the new one.
     * </pre>
     *
     * <code>string allocationKey = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAllocationKeyBytes() {
      java.lang.Object ref = allocationKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        allocationKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESOURCEASK_FIELD_NUMBER = 2;
    private si.v1.Si.Resource resourceAsk_;
    /**
     * <pre>
     * How much resource per allocation?
     * </pre>
     *
     * <code>.si.v1.Resource resourceAsk = 2;</code>
     */
    public boolean hasResourceAsk() {
      return resourceAsk_ != null;
    }
    /**
     * <pre>
     * How much resource per allocation?
     * </pre>
     *
     * <code>.si.v1.Resource resourceAsk = 2;</code>
     */
    public si.v1.Si.Resource getResourceAsk() {
      return resourceAsk_ == null ? si.v1.Si.Resource.getDefaultInstance() : resourceAsk_;
    }
    /**
     * <pre>
     * How much resource per allocation?
     * </pre>
     *
     * <code>.si.v1.Resource resourceAsk = 2;</code>
     */
    public si.v1.Si.ResourceOrBuilder getResourceAskOrBuilder() {
      return getResourceAsk();
    }

    public static final int TAGS_FIELD_NUMBER = 3;
    private static final class TagsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  si.v1.Si.internal_static_si_v1_AllocationAsk_TagsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> tags_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetTags() {
      if (tags_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TagsDefaultEntryHolder.defaultEntry);
      }
      return tags_;
    }

    public int getTagsCount() {
      return internalGetTags().getMap().size();
    }
    /**
     * <pre>
     * Tags of Allocation
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 3;</code>
     */

    public boolean containsTags(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetTags().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTagsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getTags() {
      return getTagsMap();
    }
    /**
     * <pre>
     * Tags of Allocation
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getTagsMap() {
      return internalGetTags().getMap();
    }
    /**
     * <pre>
     * Tags of Allocation
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 3;</code>
     */

    public java.lang.String getTagsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTags().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Tags of Allocation
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 3;</code>
     */

    public java.lang.String getTagsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTags().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PRIORITY_FIELD_NUMBER = 4;
    private si.v1.Si.Priority priority_;
    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 4;</code>
     */
    public boolean hasPriority() {
      return priority_ != null;
    }
    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 4;</code>
     */
    public si.v1.Si.Priority getPriority() {
      return priority_ == null ? si.v1.Si.Priority.getDefaultInstance() : priority_;
    }
    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 4;</code>
     */
    public si.v1.Si.PriorityOrBuilder getPriorityOrBuilder() {
      return getPriority();
    }

    public static final int PLACEMENTCONSTRAINT_FIELD_NUMBER = 6;
    private si.v1.Si.PlacementConstraint placementConstraint_;
    /**
     * <pre>
     * Placement constraint defines how app wanna to be placed in the cluster.
     * if not set, no placement constraint will be applied.
     * </pre>
     *
     * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
     */
    public boolean hasPlacementConstraint() {
      return placementConstraint_ != null;
    }
    /**
     * <pre>
     * Placement constraint defines how app wanna to be placed in the cluster.
     * if not set, no placement constraint will be applied.
     * </pre>
     *
     * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
     */
    public si.v1.Si.PlacementConstraint getPlacementConstraint() {
      return placementConstraint_ == null ? si.v1.Si.PlacementConstraint.getDefaultInstance() : placementConstraint_;
    }
    /**
     * <pre>
     * Placement constraint defines how app wanna to be placed in the cluster.
     * if not set, no placement constraint will be applied.
     * </pre>
     *
     * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
     */
    public si.v1.Si.PlacementConstraintOrBuilder getPlacementConstraintOrBuilder() {
      return getPlacementConstraint();
    }

    public static final int MAXALLOCATIONS_FIELD_NUMBER = 7;
    private int maxAllocations_;
    /**
     * <pre>
     * Maximum number of allocations
     * </pre>
     *
     * <code>int32 maxAllocations = 7;</code>
     */
    public int getMaxAllocations() {
      return maxAllocations_;
    }

    public static final int UGI_FIELD_NUMBER = 8;
    private si.v1.Si.UserGroupInformation ugi_;
    /**
     * <pre>
     * Who owns the allocation
     * </pre>
     *
     * <code>.si.v1.UserGroupInformation ugi = 8;</code>
     */
    public boolean hasUgi() {
      return ugi_ != null;
    }
    /**
     * <pre>
     * Who owns the allocation
     * </pre>
     *
     * <code>.si.v1.UserGroupInformation ugi = 8;</code>
     */
    public si.v1.Si.UserGroupInformation getUgi() {
      return ugi_ == null ? si.v1.Si.UserGroupInformation.getDefaultInstance() : ugi_;
    }
    /**
     * <pre>
     * Who owns the allocation
     * </pre>
     *
     * <code>.si.v1.UserGroupInformation ugi = 8;</code>
     */
    public si.v1.Si.UserGroupInformationOrBuilder getUgiOrBuilder() {
      return getUgi();
    }

    public static final int QUEUENAME_FIELD_NUMBER = 9;
    private volatile java.lang.Object queueName_;
    /**
     * <pre>
     * Place this allocation to specified queue.
     * If queue not specified, scheduler will place the allocation to a queue
     * according to policy
     * When queue is specified and allocation cannot be allocated in asked queue
     * AllocationAsk will be rejected.
     * </pre>
     *
     * <code>string queueName = 9;</code>
     */
    public java.lang.String getQueueName() {
      java.lang.Object ref = queueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        queueName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Place this allocation to specified queue.
     * If queue not specified, scheduler will place the allocation to a queue
     * according to policy
     * When queue is specified and allocation cannot be allocated in asked queue
     * AllocationAsk will be rejected.
     * </pre>
     *
     * <code>string queueName = 9;</code>
     */
    public com.google.protobuf.ByteString
        getQueueNameBytes() {
      java.lang.Object ref = queueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        queueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXECUTIONTIMEOUTMILLISECONDS_FIELD_NUMBER = 10;
    private long executionTimeoutMilliSeconds_;
    /**
     * <pre>
     * Execution timeout: How long this allocation will be terminated (by scheduler)
     * once allocated by scheduler, 0 or negative value means never expire.
     * </pre>
     *
     * <code>int64 executionTimeoutMilliSeconds = 10;</code>
     */
    public long getExecutionTimeoutMilliSeconds() {
      return executionTimeoutMilliSeconds_;
    }

    public static final int JOBID_FIELD_NUMBER = 11;
    private volatile java.lang.Object jobId_;
    /**
     * <pre>
     * Which job this allocation ask belongs to, if it is not specified. The allocation
     * won't belong to any job.
     * </pre>
     *
     * <code>string jobId = 11;</code>
     */
    public java.lang.String getJobId() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jobId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Which job this allocation ask belongs to, if it is not specified. The allocation
     * won't belong to any job.
     * </pre>
     *
     * <code>string jobId = 11;</code>
     */
    public com.google.protobuf.ByteString
        getJobIdBytes() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jobId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITIONNAME_FIELD_NUMBER = 12;
    private volatile java.lang.Object partitionName_;
    /**
     * <pre>
     * Which partition requested by this ask
     * One ask can only request one node partition
     * </pre>
     *
     * <code>string PartitionName = 12;</code>
     */
    public java.lang.String getPartitionName() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        partitionName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Which partition requested by this ask
     * One ask can only request one node partition
     * </pre>
     *
     * <code>string PartitionName = 12;</code>
     */
    public com.google.protobuf.ByteString
        getPartitionNameBytes() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partitionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAllocationKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, allocationKey_);
      }
      if (resourceAsk_ != null) {
        output.writeMessage(2, getResourceAsk());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTags(),
          TagsDefaultEntryHolder.defaultEntry,
          3);
      if (priority_ != null) {
        output.writeMessage(4, getPriority());
      }
      if (placementConstraint_ != null) {
        output.writeMessage(6, getPlacementConstraint());
      }
      if (maxAllocations_ != 0) {
        output.writeInt32(7, maxAllocations_);
      }
      if (ugi_ != null) {
        output.writeMessage(8, getUgi());
      }
      if (!getQueueNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, queueName_);
      }
      if (executionTimeoutMilliSeconds_ != 0L) {
        output.writeInt64(10, executionTimeoutMilliSeconds_);
      }
      if (!getJobIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, jobId_);
      }
      if (!getPartitionNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, partitionName_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAllocationKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, allocationKey_);
      }
      if (resourceAsk_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getResourceAsk());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetTags().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        tags__ = TagsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, tags__);
      }
      if (priority_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPriority());
      }
      if (placementConstraint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getPlacementConstraint());
      }
      if (maxAllocations_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, maxAllocations_);
      }
      if (ugi_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getUgi());
      }
      if (!getQueueNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, queueName_);
      }
      if (executionTimeoutMilliSeconds_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, executionTimeoutMilliSeconds_);
      }
      if (!getJobIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, jobId_);
      }
      if (!getPartitionNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, partitionName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.AllocationAsk)) {
        return super.equals(obj);
      }
      si.v1.Si.AllocationAsk other = (si.v1.Si.AllocationAsk) obj;

      boolean result = true;
      result = result && getAllocationKey()
          .equals(other.getAllocationKey());
      result = result && (hasResourceAsk() == other.hasResourceAsk());
      if (hasResourceAsk()) {
        result = result && getResourceAsk()
            .equals(other.getResourceAsk());
      }
      result = result && internalGetTags().equals(
          other.internalGetTags());
      result = result && (hasPriority() == other.hasPriority());
      if (hasPriority()) {
        result = result && getPriority()
            .equals(other.getPriority());
      }
      result = result && (hasPlacementConstraint() == other.hasPlacementConstraint());
      if (hasPlacementConstraint()) {
        result = result && getPlacementConstraint()
            .equals(other.getPlacementConstraint());
      }
      result = result && (getMaxAllocations()
          == other.getMaxAllocations());
      result = result && (hasUgi() == other.hasUgi());
      if (hasUgi()) {
        result = result && getUgi()
            .equals(other.getUgi());
      }
      result = result && getQueueName()
          .equals(other.getQueueName());
      result = result && (getExecutionTimeoutMilliSeconds()
          == other.getExecutionTimeoutMilliSeconds());
      result = result && getJobId()
          .equals(other.getJobId());
      result = result && getPartitionName()
          .equals(other.getPartitionName());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALLOCATIONKEY_FIELD_NUMBER;
      hash = (53 * hash) + getAllocationKey().hashCode();
      if (hasResourceAsk()) {
        hash = (37 * hash) + RESOURCEASK_FIELD_NUMBER;
        hash = (53 * hash) + getResourceAsk().hashCode();
      }
      if (!internalGetTags().getMap().isEmpty()) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTags().hashCode();
      }
      if (hasPriority()) {
        hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
        hash = (53 * hash) + getPriority().hashCode();
      }
      if (hasPlacementConstraint()) {
        hash = (37 * hash) + PLACEMENTCONSTRAINT_FIELD_NUMBER;
        hash = (53 * hash) + getPlacementConstraint().hashCode();
      }
      hash = (37 * hash) + MAXALLOCATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxAllocations();
      if (hasUgi()) {
        hash = (37 * hash) + UGI_FIELD_NUMBER;
        hash = (53 * hash) + getUgi().hashCode();
      }
      hash = (37 * hash) + QUEUENAME_FIELD_NUMBER;
      hash = (53 * hash) + getQueueName().hashCode();
      hash = (37 * hash) + EXECUTIONTIMEOUTMILLISECONDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExecutionTimeoutMilliSeconds());
      hash = (37 * hash) + JOBID_FIELD_NUMBER;
      hash = (53 * hash) + getJobId().hashCode();
      hash = (37 * hash) + PARTITIONNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPartitionName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.AllocationAsk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationAsk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationAsk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationAsk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationAsk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationAsk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationAsk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationAsk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationAsk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationAsk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationAsk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationAsk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.AllocationAsk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.AllocationAsk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.AllocationAsk)
        si.v1.Si.AllocationAskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_AllocationAsk_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetTags();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableTags();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_AllocationAsk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.AllocationAsk.class, si.v1.Si.AllocationAsk.Builder.class);
      }

      // Construct using si.v1.Si.AllocationAsk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        allocationKey_ = "";

        if (resourceAskBuilder_ == null) {
          resourceAsk_ = null;
        } else {
          resourceAsk_ = null;
          resourceAskBuilder_ = null;
        }
        internalGetMutableTags().clear();
        if (priorityBuilder_ == null) {
          priority_ = null;
        } else {
          priority_ = null;
          priorityBuilder_ = null;
        }
        if (placementConstraintBuilder_ == null) {
          placementConstraint_ = null;
        } else {
          placementConstraint_ = null;
          placementConstraintBuilder_ = null;
        }
        maxAllocations_ = 0;

        if (ugiBuilder_ == null) {
          ugi_ = null;
        } else {
          ugi_ = null;
          ugiBuilder_ = null;
        }
        queueName_ = "";

        executionTimeoutMilliSeconds_ = 0L;

        jobId_ = "";

        partitionName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_AllocationAsk_descriptor;
      }

      public si.v1.Si.AllocationAsk getDefaultInstanceForType() {
        return si.v1.Si.AllocationAsk.getDefaultInstance();
      }

      public si.v1.Si.AllocationAsk build() {
        si.v1.Si.AllocationAsk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.AllocationAsk buildPartial() {
        si.v1.Si.AllocationAsk result = new si.v1.Si.AllocationAsk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.allocationKey_ = allocationKey_;
        if (resourceAskBuilder_ == null) {
          result.resourceAsk_ = resourceAsk_;
        } else {
          result.resourceAsk_ = resourceAskBuilder_.build();
        }
        result.tags_ = internalGetTags();
        result.tags_.makeImmutable();
        if (priorityBuilder_ == null) {
          result.priority_ = priority_;
        } else {
          result.priority_ = priorityBuilder_.build();
        }
        if (placementConstraintBuilder_ == null) {
          result.placementConstraint_ = placementConstraint_;
        } else {
          result.placementConstraint_ = placementConstraintBuilder_.build();
        }
        result.maxAllocations_ = maxAllocations_;
        if (ugiBuilder_ == null) {
          result.ugi_ = ugi_;
        } else {
          result.ugi_ = ugiBuilder_.build();
        }
        result.queueName_ = queueName_;
        result.executionTimeoutMilliSeconds_ = executionTimeoutMilliSeconds_;
        result.jobId_ = jobId_;
        result.partitionName_ = partitionName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.AllocationAsk) {
          return mergeFrom((si.v1.Si.AllocationAsk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.AllocationAsk other) {
        if (other == si.v1.Si.AllocationAsk.getDefaultInstance()) return this;
        if (!other.getAllocationKey().isEmpty()) {
          allocationKey_ = other.allocationKey_;
          onChanged();
        }
        if (other.hasResourceAsk()) {
          mergeResourceAsk(other.getResourceAsk());
        }
        internalGetMutableTags().mergeFrom(
            other.internalGetTags());
        if (other.hasPriority()) {
          mergePriority(other.getPriority());
        }
        if (other.hasPlacementConstraint()) {
          mergePlacementConstraint(other.getPlacementConstraint());
        }
        if (other.getMaxAllocations() != 0) {
          setMaxAllocations(other.getMaxAllocations());
        }
        if (other.hasUgi()) {
          mergeUgi(other.getUgi());
        }
        if (!other.getQueueName().isEmpty()) {
          queueName_ = other.queueName_;
          onChanged();
        }
        if (other.getExecutionTimeoutMilliSeconds() != 0L) {
          setExecutionTimeoutMilliSeconds(other.getExecutionTimeoutMilliSeconds());
        }
        if (!other.getJobId().isEmpty()) {
          jobId_ = other.jobId_;
          onChanged();
        }
        if (!other.getPartitionName().isEmpty()) {
          partitionName_ = other.partitionName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.AllocationAsk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.AllocationAsk) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object allocationKey_ = "";
      /**
       * <pre>
       * Allocation key is used by both of scheduler and RM to track container allocation.
       * It doesn't have to be same as RM's internal allocation id (such as Pod name of K8s or ContainerId of YARN).
       * If multiple allocation from a same AllocationAsk returned to RM, they will share the same allocationKey.
       * If ALlocationAsk with the same allocationKey exists, old one will be replaced by the new one.
       * </pre>
       *
       * <code>string allocationKey = 1;</code>
       */
      public java.lang.String getAllocationKey() {
        java.lang.Object ref = allocationKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          allocationKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Allocation key is used by both of scheduler and RM to track container allocation.
       * It doesn't have to be same as RM's internal allocation id (such as Pod name of K8s or ContainerId of YARN).
       * If multiple allocation from a same AllocationAsk returned to RM, they will share the same allocationKey.
       * If ALlocationAsk with the same allocationKey exists, old one will be replaced by the new one.
       * </pre>
       *
       * <code>string allocationKey = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAllocationKeyBytes() {
        java.lang.Object ref = allocationKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          allocationKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Allocation key is used by both of scheduler and RM to track container allocation.
       * It doesn't have to be same as RM's internal allocation id (such as Pod name of K8s or ContainerId of YARN).
       * If multiple allocation from a same AllocationAsk returned to RM, they will share the same allocationKey.
       * If ALlocationAsk with the same allocationKey exists, old one will be replaced by the new one.
       * </pre>
       *
       * <code>string allocationKey = 1;</code>
       */
      public Builder setAllocationKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        allocationKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Allocation key is used by both of scheduler and RM to track container allocation.
       * It doesn't have to be same as RM's internal allocation id (such as Pod name of K8s or ContainerId of YARN).
       * If multiple allocation from a same AllocationAsk returned to RM, they will share the same allocationKey.
       * If ALlocationAsk with the same allocationKey exists, old one will be replaced by the new one.
       * </pre>
       *
       * <code>string allocationKey = 1;</code>
       */
      public Builder clearAllocationKey() {
        
        allocationKey_ = getDefaultInstance().getAllocationKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Allocation key is used by both of scheduler and RM to track container allocation.
       * It doesn't have to be same as RM's internal allocation id (such as Pod name of K8s or ContainerId of YARN).
       * If multiple allocation from a same AllocationAsk returned to RM, they will share the same allocationKey.
       * If ALlocationAsk with the same allocationKey exists, old one will be replaced by the new one.
       * </pre>
       *
       * <code>string allocationKey = 1;</code>
       */
      public Builder setAllocationKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        allocationKey_ = value;
        onChanged();
        return this;
      }

      private si.v1.Si.Resource resourceAsk_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> resourceAskBuilder_;
      /**
       * <pre>
       * How much resource per allocation?
       * </pre>
       *
       * <code>.si.v1.Resource resourceAsk = 2;</code>
       */
      public boolean hasResourceAsk() {
        return resourceAskBuilder_ != null || resourceAsk_ != null;
      }
      /**
       * <pre>
       * How much resource per allocation?
       * </pre>
       *
       * <code>.si.v1.Resource resourceAsk = 2;</code>
       */
      public si.v1.Si.Resource getResourceAsk() {
        if (resourceAskBuilder_ == null) {
          return resourceAsk_ == null ? si.v1.Si.Resource.getDefaultInstance() : resourceAsk_;
        } else {
          return resourceAskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * How much resource per allocation?
       * </pre>
       *
       * <code>.si.v1.Resource resourceAsk = 2;</code>
       */
      public Builder setResourceAsk(si.v1.Si.Resource value) {
        if (resourceAskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resourceAsk_ = value;
          onChanged();
        } else {
          resourceAskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * How much resource per allocation?
       * </pre>
       *
       * <code>.si.v1.Resource resourceAsk = 2;</code>
       */
      public Builder setResourceAsk(
          si.v1.Si.Resource.Builder builderForValue) {
        if (resourceAskBuilder_ == null) {
          resourceAsk_ = builderForValue.build();
          onChanged();
        } else {
          resourceAskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * How much resource per allocation?
       * </pre>
       *
       * <code>.si.v1.Resource resourceAsk = 2;</code>
       */
      public Builder mergeResourceAsk(si.v1.Si.Resource value) {
        if (resourceAskBuilder_ == null) {
          if (resourceAsk_ != null) {
            resourceAsk_ =
              si.v1.Si.Resource.newBuilder(resourceAsk_).mergeFrom(value).buildPartial();
          } else {
            resourceAsk_ = value;
          }
          onChanged();
        } else {
          resourceAskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * How much resource per allocation?
       * </pre>
       *
       * <code>.si.v1.Resource resourceAsk = 2;</code>
       */
      public Builder clearResourceAsk() {
        if (resourceAskBuilder_ == null) {
          resourceAsk_ = null;
          onChanged();
        } else {
          resourceAsk_ = null;
          resourceAskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * How much resource per allocation?
       * </pre>
       *
       * <code>.si.v1.Resource resourceAsk = 2;</code>
       */
      public si.v1.Si.Resource.Builder getResourceAskBuilder() {
        
        onChanged();
        return getResourceAskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * How much resource per allocation?
       * </pre>
       *
       * <code>.si.v1.Resource resourceAsk = 2;</code>
       */
      public si.v1.Si.ResourceOrBuilder getResourceAskOrBuilder() {
        if (resourceAskBuilder_ != null) {
          return resourceAskBuilder_.getMessageOrBuilder();
        } else {
          return resourceAsk_ == null ?
              si.v1.Si.Resource.getDefaultInstance() : resourceAsk_;
        }
      }
      /**
       * <pre>
       * How much resource per allocation?
       * </pre>
       *
       * <code>.si.v1.Resource resourceAsk = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> 
          getResourceAskFieldBuilder() {
        if (resourceAskBuilder_ == null) {
          resourceAskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder>(
                  getResourceAsk(),
                  getParentForChildren(),
                  isClean());
          resourceAsk_ = null;
        }
        return resourceAskBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> tags_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetTags() {
        if (tags_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TagsDefaultEntryHolder.defaultEntry);
        }
        return tags_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableTags() {
        onChanged();;
        if (tags_ == null) {
          tags_ = com.google.protobuf.MapField.newMapField(
              TagsDefaultEntryHolder.defaultEntry);
        }
        if (!tags_.isMutable()) {
          tags_ = tags_.copy();
        }
        return tags_;
      }

      public int getTagsCount() {
        return internalGetTags().getMap().size();
      }
      /**
       * <pre>
       * Tags of Allocation
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 3;</code>
       */

      public boolean containsTags(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetTags().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTagsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getTags() {
        return getTagsMap();
      }
      /**
       * <pre>
       * Tags of Allocation
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getTagsMap() {
        return internalGetTags().getMap();
      }
      /**
       * <pre>
       * Tags of Allocation
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 3;</code>
       */

      public java.lang.String getTagsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetTags().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Tags of Allocation
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 3;</code>
       */

      public java.lang.String getTagsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetTags().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTags() {
        internalGetMutableTags().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Tags of Allocation
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 3;</code>
       */

      public Builder removeTags(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTags().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableTags() {
        return internalGetMutableTags().getMutableMap();
      }
      /**
       * <pre>
       * Tags of Allocation
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 3;</code>
       */
      public Builder putTags(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTags().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Tags of Allocation
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 3;</code>
       */

      public Builder putAllTags(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableTags().getMutableMap()
            .putAll(values);
        return this;
      }

      private si.v1.Si.Priority priority_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Priority, si.v1.Si.Priority.Builder, si.v1.Si.PriorityOrBuilder> priorityBuilder_;
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 4;</code>
       */
      public boolean hasPriority() {
        return priorityBuilder_ != null || priority_ != null;
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 4;</code>
       */
      public si.v1.Si.Priority getPriority() {
        if (priorityBuilder_ == null) {
          return priority_ == null ? si.v1.Si.Priority.getDefaultInstance() : priority_;
        } else {
          return priorityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 4;</code>
       */
      public Builder setPriority(si.v1.Si.Priority value) {
        if (priorityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          priority_ = value;
          onChanged();
        } else {
          priorityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 4;</code>
       */
      public Builder setPriority(
          si.v1.Si.Priority.Builder builderForValue) {
        if (priorityBuilder_ == null) {
          priority_ = builderForValue.build();
          onChanged();
        } else {
          priorityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 4;</code>
       */
      public Builder mergePriority(si.v1.Si.Priority value) {
        if (priorityBuilder_ == null) {
          if (priority_ != null) {
            priority_ =
              si.v1.Si.Priority.newBuilder(priority_).mergeFrom(value).buildPartial();
          } else {
            priority_ = value;
          }
          onChanged();
        } else {
          priorityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 4;</code>
       */
      public Builder clearPriority() {
        if (priorityBuilder_ == null) {
          priority_ = null;
          onChanged();
        } else {
          priority_ = null;
          priorityBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 4;</code>
       */
      public si.v1.Si.Priority.Builder getPriorityBuilder() {
        
        onChanged();
        return getPriorityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 4;</code>
       */
      public si.v1.Si.PriorityOrBuilder getPriorityOrBuilder() {
        if (priorityBuilder_ != null) {
          return priorityBuilder_.getMessageOrBuilder();
        } else {
          return priority_ == null ?
              si.v1.Si.Priority.getDefaultInstance() : priority_;
        }
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Priority, si.v1.Si.Priority.Builder, si.v1.Si.PriorityOrBuilder> 
          getPriorityFieldBuilder() {
        if (priorityBuilder_ == null) {
          priorityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.Priority, si.v1.Si.Priority.Builder, si.v1.Si.PriorityOrBuilder>(
                  getPriority(),
                  getParentForChildren(),
                  isClean());
          priority_ = null;
        }
        return priorityBuilder_;
      }

      private si.v1.Si.PlacementConstraint placementConstraint_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.PlacementConstraint, si.v1.Si.PlacementConstraint.Builder, si.v1.Si.PlacementConstraintOrBuilder> placementConstraintBuilder_;
      /**
       * <pre>
       * Placement constraint defines how app wanna to be placed in the cluster.
       * if not set, no placement constraint will be applied.
       * </pre>
       *
       * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
       */
      public boolean hasPlacementConstraint() {
        return placementConstraintBuilder_ != null || placementConstraint_ != null;
      }
      /**
       * <pre>
       * Placement constraint defines how app wanna to be placed in the cluster.
       * if not set, no placement constraint will be applied.
       * </pre>
       *
       * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
       */
      public si.v1.Si.PlacementConstraint getPlacementConstraint() {
        if (placementConstraintBuilder_ == null) {
          return placementConstraint_ == null ? si.v1.Si.PlacementConstraint.getDefaultInstance() : placementConstraint_;
        } else {
          return placementConstraintBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Placement constraint defines how app wanna to be placed in the cluster.
       * if not set, no placement constraint will be applied.
       * </pre>
       *
       * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
       */
      public Builder setPlacementConstraint(si.v1.Si.PlacementConstraint value) {
        if (placementConstraintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          placementConstraint_ = value;
          onChanged();
        } else {
          placementConstraintBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Placement constraint defines how app wanna to be placed in the cluster.
       * if not set, no placement constraint will be applied.
       * </pre>
       *
       * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
       */
      public Builder setPlacementConstraint(
          si.v1.Si.PlacementConstraint.Builder builderForValue) {
        if (placementConstraintBuilder_ == null) {
          placementConstraint_ = builderForValue.build();
          onChanged();
        } else {
          placementConstraintBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Placement constraint defines how app wanna to be placed in the cluster.
       * if not set, no placement constraint will be applied.
       * </pre>
       *
       * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
       */
      public Builder mergePlacementConstraint(si.v1.Si.PlacementConstraint value) {
        if (placementConstraintBuilder_ == null) {
          if (placementConstraint_ != null) {
            placementConstraint_ =
              si.v1.Si.PlacementConstraint.newBuilder(placementConstraint_).mergeFrom(value).buildPartial();
          } else {
            placementConstraint_ = value;
          }
          onChanged();
        } else {
          placementConstraintBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Placement constraint defines how app wanna to be placed in the cluster.
       * if not set, no placement constraint will be applied.
       * </pre>
       *
       * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
       */
      public Builder clearPlacementConstraint() {
        if (placementConstraintBuilder_ == null) {
          placementConstraint_ = null;
          onChanged();
        } else {
          placementConstraint_ = null;
          placementConstraintBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Placement constraint defines how app wanna to be placed in the cluster.
       * if not set, no placement constraint will be applied.
       * </pre>
       *
       * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
       */
      public si.v1.Si.PlacementConstraint.Builder getPlacementConstraintBuilder() {
        
        onChanged();
        return getPlacementConstraintFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Placement constraint defines how app wanna to be placed in the cluster.
       * if not set, no placement constraint will be applied.
       * </pre>
       *
       * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
       */
      public si.v1.Si.PlacementConstraintOrBuilder getPlacementConstraintOrBuilder() {
        if (placementConstraintBuilder_ != null) {
          return placementConstraintBuilder_.getMessageOrBuilder();
        } else {
          return placementConstraint_ == null ?
              si.v1.Si.PlacementConstraint.getDefaultInstance() : placementConstraint_;
        }
      }
      /**
       * <pre>
       * Placement constraint defines how app wanna to be placed in the cluster.
       * if not set, no placement constraint will be applied.
       * </pre>
       *
       * <code>.si.v1.PlacementConstraint placementConstraint = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.PlacementConstraint, si.v1.Si.PlacementConstraint.Builder, si.v1.Si.PlacementConstraintOrBuilder> 
          getPlacementConstraintFieldBuilder() {
        if (placementConstraintBuilder_ == null) {
          placementConstraintBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.PlacementConstraint, si.v1.Si.PlacementConstraint.Builder, si.v1.Si.PlacementConstraintOrBuilder>(
                  getPlacementConstraint(),
                  getParentForChildren(),
                  isClean());
          placementConstraint_ = null;
        }
        return placementConstraintBuilder_;
      }

      private int maxAllocations_ ;
      /**
       * <pre>
       * Maximum number of allocations
       * </pre>
       *
       * <code>int32 maxAllocations = 7;</code>
       */
      public int getMaxAllocations() {
        return maxAllocations_;
      }
      /**
       * <pre>
       * Maximum number of allocations
       * </pre>
       *
       * <code>int32 maxAllocations = 7;</code>
       */
      public Builder setMaxAllocations(int value) {
        
        maxAllocations_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of allocations
       * </pre>
       *
       * <code>int32 maxAllocations = 7;</code>
       */
      public Builder clearMaxAllocations() {
        
        maxAllocations_ = 0;
        onChanged();
        return this;
      }

      private si.v1.Si.UserGroupInformation ugi_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.UserGroupInformation, si.v1.Si.UserGroupInformation.Builder, si.v1.Si.UserGroupInformationOrBuilder> ugiBuilder_;
      /**
       * <pre>
       * Who owns the allocation
       * </pre>
       *
       * <code>.si.v1.UserGroupInformation ugi = 8;</code>
       */
      public boolean hasUgi() {
        return ugiBuilder_ != null || ugi_ != null;
      }
      /**
       * <pre>
       * Who owns the allocation
       * </pre>
       *
       * <code>.si.v1.UserGroupInformation ugi = 8;</code>
       */
      public si.v1.Si.UserGroupInformation getUgi() {
        if (ugiBuilder_ == null) {
          return ugi_ == null ? si.v1.Si.UserGroupInformation.getDefaultInstance() : ugi_;
        } else {
          return ugiBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Who owns the allocation
       * </pre>
       *
       * <code>.si.v1.UserGroupInformation ugi = 8;</code>
       */
      public Builder setUgi(si.v1.Si.UserGroupInformation value) {
        if (ugiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ugi_ = value;
          onChanged();
        } else {
          ugiBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Who owns the allocation
       * </pre>
       *
       * <code>.si.v1.UserGroupInformation ugi = 8;</code>
       */
      public Builder setUgi(
          si.v1.Si.UserGroupInformation.Builder builderForValue) {
        if (ugiBuilder_ == null) {
          ugi_ = builderForValue.build();
          onChanged();
        } else {
          ugiBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Who owns the allocation
       * </pre>
       *
       * <code>.si.v1.UserGroupInformation ugi = 8;</code>
       */
      public Builder mergeUgi(si.v1.Si.UserGroupInformation value) {
        if (ugiBuilder_ == null) {
          if (ugi_ != null) {
            ugi_ =
              si.v1.Si.UserGroupInformation.newBuilder(ugi_).mergeFrom(value).buildPartial();
          } else {
            ugi_ = value;
          }
          onChanged();
        } else {
          ugiBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Who owns the allocation
       * </pre>
       *
       * <code>.si.v1.UserGroupInformation ugi = 8;</code>
       */
      public Builder clearUgi() {
        if (ugiBuilder_ == null) {
          ugi_ = null;
          onChanged();
        } else {
          ugi_ = null;
          ugiBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Who owns the allocation
       * </pre>
       *
       * <code>.si.v1.UserGroupInformation ugi = 8;</code>
       */
      public si.v1.Si.UserGroupInformation.Builder getUgiBuilder() {
        
        onChanged();
        return getUgiFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Who owns the allocation
       * </pre>
       *
       * <code>.si.v1.UserGroupInformation ugi = 8;</code>
       */
      public si.v1.Si.UserGroupInformationOrBuilder getUgiOrBuilder() {
        if (ugiBuilder_ != null) {
          return ugiBuilder_.getMessageOrBuilder();
        } else {
          return ugi_ == null ?
              si.v1.Si.UserGroupInformation.getDefaultInstance() : ugi_;
        }
      }
      /**
       * <pre>
       * Who owns the allocation
       * </pre>
       *
       * <code>.si.v1.UserGroupInformation ugi = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.UserGroupInformation, si.v1.Si.UserGroupInformation.Builder, si.v1.Si.UserGroupInformationOrBuilder> 
          getUgiFieldBuilder() {
        if (ugiBuilder_ == null) {
          ugiBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.UserGroupInformation, si.v1.Si.UserGroupInformation.Builder, si.v1.Si.UserGroupInformationOrBuilder>(
                  getUgi(),
                  getParentForChildren(),
                  isClean());
          ugi_ = null;
        }
        return ugiBuilder_;
      }

      private java.lang.Object queueName_ = "";
      /**
       * <pre>
       * Place this allocation to specified queue.
       * If queue not specified, scheduler will place the allocation to a queue
       * according to policy
       * When queue is specified and allocation cannot be allocated in asked queue
       * AllocationAsk will be rejected.
       * </pre>
       *
       * <code>string queueName = 9;</code>
       */
      public java.lang.String getQueueName() {
        java.lang.Object ref = queueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          queueName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Place this allocation to specified queue.
       * If queue not specified, scheduler will place the allocation to a queue
       * according to policy
       * When queue is specified and allocation cannot be allocated in asked queue
       * AllocationAsk will be rejected.
       * </pre>
       *
       * <code>string queueName = 9;</code>
       */
      public com.google.protobuf.ByteString
          getQueueNameBytes() {
        java.lang.Object ref = queueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          queueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Place this allocation to specified queue.
       * If queue not specified, scheduler will place the allocation to a queue
       * according to policy
       * When queue is specified and allocation cannot be allocated in asked queue
       * AllocationAsk will be rejected.
       * </pre>
       *
       * <code>string queueName = 9;</code>
       */
      public Builder setQueueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        queueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Place this allocation to specified queue.
       * If queue not specified, scheduler will place the allocation to a queue
       * according to policy
       * When queue is specified and allocation cannot be allocated in asked queue
       * AllocationAsk will be rejected.
       * </pre>
       *
       * <code>string queueName = 9;</code>
       */
      public Builder clearQueueName() {
        
        queueName_ = getDefaultInstance().getQueueName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Place this allocation to specified queue.
       * If queue not specified, scheduler will place the allocation to a queue
       * according to policy
       * When queue is specified and allocation cannot be allocated in asked queue
       * AllocationAsk will be rejected.
       * </pre>
       *
       * <code>string queueName = 9;</code>
       */
      public Builder setQueueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        queueName_ = value;
        onChanged();
        return this;
      }

      private long executionTimeoutMilliSeconds_ ;
      /**
       * <pre>
       * Execution timeout: How long this allocation will be terminated (by scheduler)
       * once allocated by scheduler, 0 or negative value means never expire.
       * </pre>
       *
       * <code>int64 executionTimeoutMilliSeconds = 10;</code>
       */
      public long getExecutionTimeoutMilliSeconds() {
        return executionTimeoutMilliSeconds_;
      }
      /**
       * <pre>
       * Execution timeout: How long this allocation will be terminated (by scheduler)
       * once allocated by scheduler, 0 or negative value means never expire.
       * </pre>
       *
       * <code>int64 executionTimeoutMilliSeconds = 10;</code>
       */
      public Builder setExecutionTimeoutMilliSeconds(long value) {
        
        executionTimeoutMilliSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Execution timeout: How long this allocation will be terminated (by scheduler)
       * once allocated by scheduler, 0 or negative value means never expire.
       * </pre>
       *
       * <code>int64 executionTimeoutMilliSeconds = 10;</code>
       */
      public Builder clearExecutionTimeoutMilliSeconds() {
        
        executionTimeoutMilliSeconds_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object jobId_ = "";
      /**
       * <pre>
       * Which job this allocation ask belongs to, if it is not specified. The allocation
       * won't belong to any job.
       * </pre>
       *
       * <code>string jobId = 11;</code>
       */
      public java.lang.String getJobId() {
        java.lang.Object ref = jobId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jobId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Which job this allocation ask belongs to, if it is not specified. The allocation
       * won't belong to any job.
       * </pre>
       *
       * <code>string jobId = 11;</code>
       */
      public com.google.protobuf.ByteString
          getJobIdBytes() {
        java.lang.Object ref = jobId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jobId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Which job this allocation ask belongs to, if it is not specified. The allocation
       * won't belong to any job.
       * </pre>
       *
       * <code>string jobId = 11;</code>
       */
      public Builder setJobId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jobId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Which job this allocation ask belongs to, if it is not specified. The allocation
       * won't belong to any job.
       * </pre>
       *
       * <code>string jobId = 11;</code>
       */
      public Builder clearJobId() {
        
        jobId_ = getDefaultInstance().getJobId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Which job this allocation ask belongs to, if it is not specified. The allocation
       * won't belong to any job.
       * </pre>
       *
       * <code>string jobId = 11;</code>
       */
      public Builder setJobIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jobId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object partitionName_ = "";
      /**
       * <pre>
       * Which partition requested by this ask
       * One ask can only request one node partition
       * </pre>
       *
       * <code>string PartitionName = 12;</code>
       */
      public java.lang.String getPartitionName() {
        java.lang.Object ref = partitionName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          partitionName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Which partition requested by this ask
       * One ask can only request one node partition
       * </pre>
       *
       * <code>string PartitionName = 12;</code>
       */
      public com.google.protobuf.ByteString
          getPartitionNameBytes() {
        java.lang.Object ref = partitionName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partitionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Which partition requested by this ask
       * One ask can only request one node partition
       * </pre>
       *
       * <code>string PartitionName = 12;</code>
       */
      public Builder setPartitionName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        partitionName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Which partition requested by this ask
       * One ask can only request one node partition
       * </pre>
       *
       * <code>string PartitionName = 12;</code>
       */
      public Builder clearPartitionName() {
        
        partitionName_ = getDefaultInstance().getPartitionName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Which partition requested by this ask
       * One ask can only request one node partition
       * </pre>
       *
       * <code>string PartitionName = 12;</code>
       */
      public Builder setPartitionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        partitionName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.AllocationAsk)
    }

    // @@protoc_insertion_point(class_scope:si.v1.AllocationAsk)
    private static final si.v1.Si.AllocationAsk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.AllocationAsk();
    }

    public static si.v1.Si.AllocationAsk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllocationAsk>
        PARSER = new com.google.protobuf.AbstractParser<AllocationAsk>() {
      public AllocationAsk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllocationAsk(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AllocationAsk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllocationAsk> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.AllocationAsk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserGroupInformationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.UserGroupInformation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string user = 1;</code>
     */
    java.lang.String getUser();
    /**
     * <code>string user = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <code>repeated string groups = 2;</code>
     */
    java.util.List<java.lang.String>
        getGroupsList();
    /**
     * <code>repeated string groups = 2;</code>
     */
    int getGroupsCount();
    /**
     * <code>repeated string groups = 2;</code>
     */
    java.lang.String getGroups(int index);
    /**
     * <code>repeated string groups = 2;</code>
     */
    com.google.protobuf.ByteString
        getGroupsBytes(int index);
  }
  /**
   * Protobuf type {@code si.v1.UserGroupInformation}
   */
  public  static final class UserGroupInformation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.UserGroupInformation)
      UserGroupInformationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserGroupInformation.newBuilder() to construct.
    private UserGroupInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserGroupInformation() {
      user_ = "";
      groups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserGroupInformation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              user_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                groups_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              groups_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          groups_ = groups_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_UserGroupInformation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_UserGroupInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.UserGroupInformation.class, si.v1.Si.UserGroupInformation.Builder.class);
    }

    private int bitField0_;
    public static final int USER_FIELD_NUMBER = 1;
    private volatile java.lang.Object user_;
    /**
     * <code>string user = 1;</code>
     */
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      }
    }
    /**
     * <code>string user = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GROUPS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList groups_;
    /**
     * <code>repeated string groups = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getGroupsList() {
      return groups_;
    }
    /**
     * <code>repeated string groups = 2;</code>
     */
    public int getGroupsCount() {
      return groups_.size();
    }
    /**
     * <code>repeated string groups = 2;</code>
     */
    public java.lang.String getGroups(int index) {
      return groups_.get(index);
    }
    /**
     * <code>repeated string groups = 2;</code>
     */
    public com.google.protobuf.ByteString
        getGroupsBytes(int index) {
      return groups_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUserBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, user_);
      }
      for (int i = 0; i < groups_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, groups_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUserBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, user_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < groups_.size(); i++) {
          dataSize += computeStringSizeNoTag(groups_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getGroupsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.UserGroupInformation)) {
        return super.equals(obj);
      }
      si.v1.Si.UserGroupInformation other = (si.v1.Si.UserGroupInformation) obj;

      boolean result = true;
      result = result && getUser()
          .equals(other.getUser());
      result = result && getGroupsList()
          .equals(other.getGroupsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
      if (getGroupsCount() > 0) {
        hash = (37 * hash) + GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getGroupsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.UserGroupInformation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UserGroupInformation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UserGroupInformation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UserGroupInformation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UserGroupInformation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UserGroupInformation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UserGroupInformation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.UserGroupInformation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.UserGroupInformation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.UserGroupInformation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.UserGroupInformation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.UserGroupInformation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.UserGroupInformation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.UserGroupInformation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.UserGroupInformation)
        si.v1.Si.UserGroupInformationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_UserGroupInformation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_UserGroupInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.UserGroupInformation.class, si.v1.Si.UserGroupInformation.Builder.class);
      }

      // Construct using si.v1.Si.UserGroupInformation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        user_ = "";

        groups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_UserGroupInformation_descriptor;
      }

      public si.v1.Si.UserGroupInformation getDefaultInstanceForType() {
        return si.v1.Si.UserGroupInformation.getDefaultInstance();
      }

      public si.v1.Si.UserGroupInformation build() {
        si.v1.Si.UserGroupInformation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.UserGroupInformation buildPartial() {
        si.v1.Si.UserGroupInformation result = new si.v1.Si.UserGroupInformation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.user_ = user_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          groups_ = groups_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.groups_ = groups_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.UserGroupInformation) {
          return mergeFrom((si.v1.Si.UserGroupInformation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.UserGroupInformation other) {
        if (other == si.v1.Si.UserGroupInformation.getDefaultInstance()) return this;
        if (!other.getUser().isEmpty()) {
          user_ = other.user_;
          onChanged();
        }
        if (!other.groups_.isEmpty()) {
          if (groups_.isEmpty()) {
            groups_ = other.groups_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureGroupsIsMutable();
            groups_.addAll(other.groups_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.UserGroupInformation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.UserGroupInformation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object user_ = "";
      /**
       * <code>string user = 1;</code>
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string user = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string user = 1;</code>
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string user = 1;</code>
       */
      public Builder clearUser() {
        
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <code>string user = 1;</code>
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        user_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList groups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureGroupsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          groups_ = new com.google.protobuf.LazyStringArrayList(groups_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string groups = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getGroupsList() {
        return groups_.getUnmodifiableView();
      }
      /**
       * <code>repeated string groups = 2;</code>
       */
      public int getGroupsCount() {
        return groups_.size();
      }
      /**
       * <code>repeated string groups = 2;</code>
       */
      public java.lang.String getGroups(int index) {
        return groups_.get(index);
      }
      /**
       * <code>repeated string groups = 2;</code>
       */
      public com.google.protobuf.ByteString
          getGroupsBytes(int index) {
        return groups_.getByteString(index);
      }
      /**
       * <code>repeated string groups = 2;</code>
       */
      public Builder setGroups(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGroupsIsMutable();
        groups_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string groups = 2;</code>
       */
      public Builder addGroups(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGroupsIsMutable();
        groups_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string groups = 2;</code>
       */
      public Builder addAllGroups(
          java.lang.Iterable<java.lang.String> values) {
        ensureGroupsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, groups_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string groups = 2;</code>
       */
      public Builder clearGroups() {
        groups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string groups = 2;</code>
       */
      public Builder addGroupsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureGroupsIsMutable();
        groups_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.UserGroupInformation)
    }

    // @@protoc_insertion_point(class_scope:si.v1.UserGroupInformation)
    private static final si.v1.Si.UserGroupInformation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.UserGroupInformation();
    }

    public static si.v1.Si.UserGroupInformation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserGroupInformation>
        PARSER = new com.google.protobuf.AbstractParser<UserGroupInformation>() {
      public UserGroupInformation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserGroupInformation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserGroupInformation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserGroupInformation> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.UserGroupInformation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AddJobRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.AddJobRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string jobId = 1;</code>
     */
    java.lang.String getJobId();
    /**
     * <code>string jobId = 1;</code>
     */
    com.google.protobuf.ByteString
        getJobIdBytes();

    /**
     * <code>string queueName = 2;</code>
     */
    java.lang.String getQueueName();
    /**
     * <code>string queueName = 2;</code>
     */
    com.google.protobuf.ByteString
        getQueueNameBytes();

    /**
     * <code>string partitionName = 3;</code>
     */
    java.lang.String getPartitionName();
    /**
     * <code>string partitionName = 3;</code>
     */
    com.google.protobuf.ByteString
        getPartitionNameBytes();
  }
  /**
   * Protobuf type {@code si.v1.AddJobRequest}
   */
  public  static final class AddJobRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.AddJobRequest)
      AddJobRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AddJobRequest.newBuilder() to construct.
    private AddJobRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AddJobRequest() {
      jobId_ = "";
      queueName_ = "";
      partitionName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AddJobRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              jobId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              queueName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              partitionName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_AddJobRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_AddJobRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.AddJobRequest.class, si.v1.Si.AddJobRequest.Builder.class);
    }

    public static final int JOBID_FIELD_NUMBER = 1;
    private volatile java.lang.Object jobId_;
    /**
     * <code>string jobId = 1;</code>
     */
    public java.lang.String getJobId() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jobId_ = s;
        return s;
      }
    }
    /**
     * <code>string jobId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getJobIdBytes() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jobId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUEUENAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object queueName_;
    /**
     * <code>string queueName = 2;</code>
     */
    public java.lang.String getQueueName() {
      java.lang.Object ref = queueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        queueName_ = s;
        return s;
      }
    }
    /**
     * <code>string queueName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getQueueNameBytes() {
      java.lang.Object ref = queueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        queueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITIONNAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object partitionName_;
    /**
     * <code>string partitionName = 3;</code>
     */
    public java.lang.String getPartitionName() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        partitionName_ = s;
        return s;
      }
    }
    /**
     * <code>string partitionName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPartitionNameBytes() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partitionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getJobIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, jobId_);
      }
      if (!getQueueNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, queueName_);
      }
      if (!getPartitionNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, partitionName_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getJobIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, jobId_);
      }
      if (!getQueueNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, queueName_);
      }
      if (!getPartitionNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, partitionName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.AddJobRequest)) {
        return super.equals(obj);
      }
      si.v1.Si.AddJobRequest other = (si.v1.Si.AddJobRequest) obj;

      boolean result = true;
      result = result && getJobId()
          .equals(other.getJobId());
      result = result && getQueueName()
          .equals(other.getQueueName());
      result = result && getPartitionName()
          .equals(other.getPartitionName());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + JOBID_FIELD_NUMBER;
      hash = (53 * hash) + getJobId().hashCode();
      hash = (37 * hash) + QUEUENAME_FIELD_NUMBER;
      hash = (53 * hash) + getQueueName().hashCode();
      hash = (37 * hash) + PARTITIONNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPartitionName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.AddJobRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AddJobRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AddJobRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AddJobRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AddJobRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AddJobRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AddJobRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AddJobRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AddJobRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.AddJobRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AddJobRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AddJobRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.AddJobRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.AddJobRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.AddJobRequest)
        si.v1.Si.AddJobRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_AddJobRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_AddJobRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.AddJobRequest.class, si.v1.Si.AddJobRequest.Builder.class);
      }

      // Construct using si.v1.Si.AddJobRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        jobId_ = "";

        queueName_ = "";

        partitionName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_AddJobRequest_descriptor;
      }

      public si.v1.Si.AddJobRequest getDefaultInstanceForType() {
        return si.v1.Si.AddJobRequest.getDefaultInstance();
      }

      public si.v1.Si.AddJobRequest build() {
        si.v1.Si.AddJobRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.AddJobRequest buildPartial() {
        si.v1.Si.AddJobRequest result = new si.v1.Si.AddJobRequest(this);
        result.jobId_ = jobId_;
        result.queueName_ = queueName_;
        result.partitionName_ = partitionName_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.AddJobRequest) {
          return mergeFrom((si.v1.Si.AddJobRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.AddJobRequest other) {
        if (other == si.v1.Si.AddJobRequest.getDefaultInstance()) return this;
        if (!other.getJobId().isEmpty()) {
          jobId_ = other.jobId_;
          onChanged();
        }
        if (!other.getQueueName().isEmpty()) {
          queueName_ = other.queueName_;
          onChanged();
        }
        if (!other.getPartitionName().isEmpty()) {
          partitionName_ = other.partitionName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.AddJobRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.AddJobRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object jobId_ = "";
      /**
       * <code>string jobId = 1;</code>
       */
      public java.lang.String getJobId() {
        java.lang.Object ref = jobId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jobId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getJobIdBytes() {
        java.lang.Object ref = jobId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jobId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder setJobId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jobId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder clearJobId() {
        
        jobId_ = getDefaultInstance().getJobId();
        onChanged();
        return this;
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder setJobIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jobId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object queueName_ = "";
      /**
       * <code>string queueName = 2;</code>
       */
      public java.lang.String getQueueName() {
        java.lang.Object ref = queueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          queueName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string queueName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getQueueNameBytes() {
        java.lang.Object ref = queueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          queueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string queueName = 2;</code>
       */
      public Builder setQueueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        queueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string queueName = 2;</code>
       */
      public Builder clearQueueName() {
        
        queueName_ = getDefaultInstance().getQueueName();
        onChanged();
        return this;
      }
      /**
       * <code>string queueName = 2;</code>
       */
      public Builder setQueueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        queueName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object partitionName_ = "";
      /**
       * <code>string partitionName = 3;</code>
       */
      public java.lang.String getPartitionName() {
        java.lang.Object ref = partitionName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          partitionName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string partitionName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPartitionNameBytes() {
        java.lang.Object ref = partitionName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partitionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string partitionName = 3;</code>
       */
      public Builder setPartitionName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        partitionName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string partitionName = 3;</code>
       */
      public Builder clearPartitionName() {
        
        partitionName_ = getDefaultInstance().getPartitionName();
        onChanged();
        return this;
      }
      /**
       * <code>string partitionName = 3;</code>
       */
      public Builder setPartitionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        partitionName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.AddJobRequest)
    }

    // @@protoc_insertion_point(class_scope:si.v1.AddJobRequest)
    private static final si.v1.Si.AddJobRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.AddJobRequest();
    }

    public static si.v1.Si.AddJobRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AddJobRequest>
        PARSER = new com.google.protobuf.AbstractParser<AddJobRequest>() {
      public AddJobRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddJobRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AddJobRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AddJobRequest> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.AddJobRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoveJobRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.RemoveJobRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string jobId = 1;</code>
     */
    java.lang.String getJobId();
    /**
     * <code>string jobId = 1;</code>
     */
    com.google.protobuf.ByteString
        getJobIdBytes();

    /**
     * <code>string partitionName = 2;</code>
     */
    java.lang.String getPartitionName();
    /**
     * <code>string partitionName = 2;</code>
     */
    com.google.protobuf.ByteString
        getPartitionNameBytes();
  }
  /**
   * Protobuf type {@code si.v1.RemoveJobRequest}
   */
  public  static final class RemoveJobRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.RemoveJobRequest)
      RemoveJobRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoveJobRequest.newBuilder() to construct.
    private RemoveJobRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoveJobRequest() {
      jobId_ = "";
      partitionName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoveJobRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              jobId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              partitionName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_RemoveJobRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_RemoveJobRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.RemoveJobRequest.class, si.v1.Si.RemoveJobRequest.Builder.class);
    }

    public static final int JOBID_FIELD_NUMBER = 1;
    private volatile java.lang.Object jobId_;
    /**
     * <code>string jobId = 1;</code>
     */
    public java.lang.String getJobId() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jobId_ = s;
        return s;
      }
    }
    /**
     * <code>string jobId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getJobIdBytes() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jobId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITIONNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object partitionName_;
    /**
     * <code>string partitionName = 2;</code>
     */
    public java.lang.String getPartitionName() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        partitionName_ = s;
        return s;
      }
    }
    /**
     * <code>string partitionName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPartitionNameBytes() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partitionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getJobIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, jobId_);
      }
      if (!getPartitionNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, partitionName_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getJobIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, jobId_);
      }
      if (!getPartitionNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, partitionName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.RemoveJobRequest)) {
        return super.equals(obj);
      }
      si.v1.Si.RemoveJobRequest other = (si.v1.Si.RemoveJobRequest) obj;

      boolean result = true;
      result = result && getJobId()
          .equals(other.getJobId());
      result = result && getPartitionName()
          .equals(other.getPartitionName());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + JOBID_FIELD_NUMBER;
      hash = (53 * hash) + getJobId().hashCode();
      hash = (37 * hash) + PARTITIONNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPartitionName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.RemoveJobRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RemoveJobRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RemoveJobRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RemoveJobRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RemoveJobRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RemoveJobRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RemoveJobRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RemoveJobRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RemoveJobRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.RemoveJobRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RemoveJobRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RemoveJobRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.RemoveJobRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.RemoveJobRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.RemoveJobRequest)
        si.v1.Si.RemoveJobRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_RemoveJobRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_RemoveJobRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.RemoveJobRequest.class, si.v1.Si.RemoveJobRequest.Builder.class);
      }

      // Construct using si.v1.Si.RemoveJobRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        jobId_ = "";

        partitionName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_RemoveJobRequest_descriptor;
      }

      public si.v1.Si.RemoveJobRequest getDefaultInstanceForType() {
        return si.v1.Si.RemoveJobRequest.getDefaultInstance();
      }

      public si.v1.Si.RemoveJobRequest build() {
        si.v1.Si.RemoveJobRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.RemoveJobRequest buildPartial() {
        si.v1.Si.RemoveJobRequest result = new si.v1.Si.RemoveJobRequest(this);
        result.jobId_ = jobId_;
        result.partitionName_ = partitionName_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.RemoveJobRequest) {
          return mergeFrom((si.v1.Si.RemoveJobRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.RemoveJobRequest other) {
        if (other == si.v1.Si.RemoveJobRequest.getDefaultInstance()) return this;
        if (!other.getJobId().isEmpty()) {
          jobId_ = other.jobId_;
          onChanged();
        }
        if (!other.getPartitionName().isEmpty()) {
          partitionName_ = other.partitionName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.RemoveJobRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.RemoveJobRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object jobId_ = "";
      /**
       * <code>string jobId = 1;</code>
       */
      public java.lang.String getJobId() {
        java.lang.Object ref = jobId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jobId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getJobIdBytes() {
        java.lang.Object ref = jobId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jobId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder setJobId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jobId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder clearJobId() {
        
        jobId_ = getDefaultInstance().getJobId();
        onChanged();
        return this;
      }
      /**
       * <code>string jobId = 1;</code>
       */
      public Builder setJobIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jobId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object partitionName_ = "";
      /**
       * <code>string partitionName = 2;</code>
       */
      public java.lang.String getPartitionName() {
        java.lang.Object ref = partitionName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          partitionName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string partitionName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPartitionNameBytes() {
        java.lang.Object ref = partitionName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partitionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string partitionName = 2;</code>
       */
      public Builder setPartitionName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        partitionName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string partitionName = 2;</code>
       */
      public Builder clearPartitionName() {
        
        partitionName_ = getDefaultInstance().getPartitionName();
        onChanged();
        return this;
      }
      /**
       * <code>string partitionName = 2;</code>
       */
      public Builder setPartitionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        partitionName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.RemoveJobRequest)
    }

    // @@protoc_insertion_point(class_scope:si.v1.RemoveJobRequest)
    private static final si.v1.Si.RemoveJobRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.RemoveJobRequest();
    }

    public static si.v1.Si.RemoveJobRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoveJobRequest>
        PARSER = new com.google.protobuf.AbstractParser<RemoveJobRequest>() {
      public RemoveJobRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoveJobRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoveJobRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoveJobRequest> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.RemoveJobRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlacementConstraintOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.PlacementConstraint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
     */
    boolean hasSimpleConstraint();
    /**
     * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
     */
    si.v1.Si.SimplePlacementConstraint getSimpleConstraint();
    /**
     * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
     */
    si.v1.Si.SimplePlacementConstraintOrBuilder getSimpleConstraintOrBuilder();

    public si.v1.Si.PlacementConstraint.ConstraintCase getConstraintCase();
  }
  /**
   * <pre>
   * PlacementConstraint could have simplePlacementConstraint or
   * CompositePlacementConstraint. One of them will be set.
   * </pre>
   *
   * Protobuf type {@code si.v1.PlacementConstraint}
   */
  public  static final class PlacementConstraint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.PlacementConstraint)
      PlacementConstraintOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlacementConstraint.newBuilder() to construct.
    private PlacementConstraint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlacementConstraint() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlacementConstraint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              si.v1.Si.SimplePlacementConstraint.Builder subBuilder = null;
              if (constraintCase_ == 1) {
                subBuilder = ((si.v1.Si.SimplePlacementConstraint) constraint_).toBuilder();
              }
              constraint_ =
                  input.readMessage(si.v1.Si.SimplePlacementConstraint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((si.v1.Si.SimplePlacementConstraint) constraint_);
                constraint_ = subBuilder.buildPartial();
              }
              constraintCase_ = 1;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_PlacementConstraint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_PlacementConstraint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.PlacementConstraint.class, si.v1.Si.PlacementConstraint.Builder.class);
    }

    private int constraintCase_ = 0;
    private java.lang.Object constraint_;
    public enum ConstraintCase
        implements com.google.protobuf.Internal.EnumLite {
      SIMPLECONSTRAINT(1),
      CONSTRAINT_NOT_SET(0);
      private final int value;
      private ConstraintCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ConstraintCase valueOf(int value) {
        return forNumber(value);
      }

      public static ConstraintCase forNumber(int value) {
        switch (value) {
          case 1: return SIMPLECONSTRAINT;
          case 0: return CONSTRAINT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ConstraintCase
    getConstraintCase() {
      return ConstraintCase.forNumber(
          constraintCase_);
    }

    public static final int SIMPLECONSTRAINT_FIELD_NUMBER = 1;
    /**
     * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
     */
    public boolean hasSimpleConstraint() {
      return constraintCase_ == 1;
    }
    /**
     * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
     */
    public si.v1.Si.SimplePlacementConstraint getSimpleConstraint() {
      if (constraintCase_ == 1) {
         return (si.v1.Si.SimplePlacementConstraint) constraint_;
      }
      return si.v1.Si.SimplePlacementConstraint.getDefaultInstance();
    }
    /**
     * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
     */
    public si.v1.Si.SimplePlacementConstraintOrBuilder getSimpleConstraintOrBuilder() {
      if (constraintCase_ == 1) {
         return (si.v1.Si.SimplePlacementConstraint) constraint_;
      }
      return si.v1.Si.SimplePlacementConstraint.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (constraintCase_ == 1) {
        output.writeMessage(1, (si.v1.Si.SimplePlacementConstraint) constraint_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (constraintCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (si.v1.Si.SimplePlacementConstraint) constraint_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.PlacementConstraint)) {
        return super.equals(obj);
      }
      si.v1.Si.PlacementConstraint other = (si.v1.Si.PlacementConstraint) obj;

      boolean result = true;
      result = result && getConstraintCase().equals(
          other.getConstraintCase());
      if (!result) return false;
      switch (constraintCase_) {
        case 1:
          result = result && getSimpleConstraint()
              .equals(other.getSimpleConstraint());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (constraintCase_) {
        case 1:
          hash = (37 * hash) + SIMPLECONSTRAINT_FIELD_NUMBER;
          hash = (53 * hash) + getSimpleConstraint().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.PlacementConstraint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.PlacementConstraint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.PlacementConstraint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.PlacementConstraint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.PlacementConstraint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.PlacementConstraint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.PlacementConstraint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.PlacementConstraint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.PlacementConstraint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.PlacementConstraint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.PlacementConstraint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.PlacementConstraint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.PlacementConstraint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PlacementConstraint could have simplePlacementConstraint or
     * CompositePlacementConstraint. One of them will be set.
     * </pre>
     *
     * Protobuf type {@code si.v1.PlacementConstraint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.PlacementConstraint)
        si.v1.Si.PlacementConstraintOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_PlacementConstraint_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_PlacementConstraint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.PlacementConstraint.class, si.v1.Si.PlacementConstraint.Builder.class);
      }

      // Construct using si.v1.Si.PlacementConstraint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        constraintCase_ = 0;
        constraint_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_PlacementConstraint_descriptor;
      }

      public si.v1.Si.PlacementConstraint getDefaultInstanceForType() {
        return si.v1.Si.PlacementConstraint.getDefaultInstance();
      }

      public si.v1.Si.PlacementConstraint build() {
        si.v1.Si.PlacementConstraint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.PlacementConstraint buildPartial() {
        si.v1.Si.PlacementConstraint result = new si.v1.Si.PlacementConstraint(this);
        if (constraintCase_ == 1) {
          if (simpleConstraintBuilder_ == null) {
            result.constraint_ = constraint_;
          } else {
            result.constraint_ = simpleConstraintBuilder_.build();
          }
        }
        result.constraintCase_ = constraintCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.PlacementConstraint) {
          return mergeFrom((si.v1.Si.PlacementConstraint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.PlacementConstraint other) {
        if (other == si.v1.Si.PlacementConstraint.getDefaultInstance()) return this;
        switch (other.getConstraintCase()) {
          case SIMPLECONSTRAINT: {
            mergeSimpleConstraint(other.getSimpleConstraint());
            break;
          }
          case CONSTRAINT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.PlacementConstraint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.PlacementConstraint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int constraintCase_ = 0;
      private java.lang.Object constraint_;
      public ConstraintCase
          getConstraintCase() {
        return ConstraintCase.forNumber(
            constraintCase_);
      }

      public Builder clearConstraint() {
        constraintCase_ = 0;
        constraint_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.SimplePlacementConstraint, si.v1.Si.SimplePlacementConstraint.Builder, si.v1.Si.SimplePlacementConstraintOrBuilder> simpleConstraintBuilder_;
      /**
       * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
       */
      public boolean hasSimpleConstraint() {
        return constraintCase_ == 1;
      }
      /**
       * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
       */
      public si.v1.Si.SimplePlacementConstraint getSimpleConstraint() {
        if (simpleConstraintBuilder_ == null) {
          if (constraintCase_ == 1) {
            return (si.v1.Si.SimplePlacementConstraint) constraint_;
          }
          return si.v1.Si.SimplePlacementConstraint.getDefaultInstance();
        } else {
          if (constraintCase_ == 1) {
            return simpleConstraintBuilder_.getMessage();
          }
          return si.v1.Si.SimplePlacementConstraint.getDefaultInstance();
        }
      }
      /**
       * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
       */
      public Builder setSimpleConstraint(si.v1.Si.SimplePlacementConstraint value) {
        if (simpleConstraintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          constraint_ = value;
          onChanged();
        } else {
          simpleConstraintBuilder_.setMessage(value);
        }
        constraintCase_ = 1;
        return this;
      }
      /**
       * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
       */
      public Builder setSimpleConstraint(
          si.v1.Si.SimplePlacementConstraint.Builder builderForValue) {
        if (simpleConstraintBuilder_ == null) {
          constraint_ = builderForValue.build();
          onChanged();
        } else {
          simpleConstraintBuilder_.setMessage(builderForValue.build());
        }
        constraintCase_ = 1;
        return this;
      }
      /**
       * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
       */
      public Builder mergeSimpleConstraint(si.v1.Si.SimplePlacementConstraint value) {
        if (simpleConstraintBuilder_ == null) {
          if (constraintCase_ == 1 &&
              constraint_ != si.v1.Si.SimplePlacementConstraint.getDefaultInstance()) {
            constraint_ = si.v1.Si.SimplePlacementConstraint.newBuilder((si.v1.Si.SimplePlacementConstraint) constraint_)
                .mergeFrom(value).buildPartial();
          } else {
            constraint_ = value;
          }
          onChanged();
        } else {
          if (constraintCase_ == 1) {
            simpleConstraintBuilder_.mergeFrom(value);
          }
          simpleConstraintBuilder_.setMessage(value);
        }
        constraintCase_ = 1;
        return this;
      }
      /**
       * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
       */
      public Builder clearSimpleConstraint() {
        if (simpleConstraintBuilder_ == null) {
          if (constraintCase_ == 1) {
            constraintCase_ = 0;
            constraint_ = null;
            onChanged();
          }
        } else {
          if (constraintCase_ == 1) {
            constraintCase_ = 0;
            constraint_ = null;
          }
          simpleConstraintBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
       */
      public si.v1.Si.SimplePlacementConstraint.Builder getSimpleConstraintBuilder() {
        return getSimpleConstraintFieldBuilder().getBuilder();
      }
      /**
       * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
       */
      public si.v1.Si.SimplePlacementConstraintOrBuilder getSimpleConstraintOrBuilder() {
        if ((constraintCase_ == 1) && (simpleConstraintBuilder_ != null)) {
          return simpleConstraintBuilder_.getMessageOrBuilder();
        } else {
          if (constraintCase_ == 1) {
            return (si.v1.Si.SimplePlacementConstraint) constraint_;
          }
          return si.v1.Si.SimplePlacementConstraint.getDefaultInstance();
        }
      }
      /**
       * <code>.si.v1.SimplePlacementConstraint simpleConstraint = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.SimplePlacementConstraint, si.v1.Si.SimplePlacementConstraint.Builder, si.v1.Si.SimplePlacementConstraintOrBuilder> 
          getSimpleConstraintFieldBuilder() {
        if (simpleConstraintBuilder_ == null) {
          if (!(constraintCase_ == 1)) {
            constraint_ = si.v1.Si.SimplePlacementConstraint.getDefaultInstance();
          }
          simpleConstraintBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.SimplePlacementConstraint, si.v1.Si.SimplePlacementConstraint.Builder, si.v1.Si.SimplePlacementConstraintOrBuilder>(
                  (si.v1.Si.SimplePlacementConstraint) constraint_,
                  getParentForChildren(),
                  isClean());
          constraint_ = null;
        }
        constraintCase_ = 1;
        onChanged();;
        return simpleConstraintBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.PlacementConstraint)
    }

    // @@protoc_insertion_point(class_scope:si.v1.PlacementConstraint)
    private static final si.v1.Si.PlacementConstraint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.PlacementConstraint();
    }

    public static si.v1.Si.PlacementConstraint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlacementConstraint>
        PARSER = new com.google.protobuf.AbstractParser<PlacementConstraint>() {
      public PlacementConstraint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlacementConstraint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlacementConstraint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlacementConstraint> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.PlacementConstraint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimplePlacementConstraintOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.SimplePlacementConstraint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Constraint
     * </pre>
     *
     * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
     */
    boolean hasNodeAffinityConstraint();
    /**
     * <pre>
     * Constraint
     * </pre>
     *
     * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
     */
    si.v1.Si.NodeAffinityConstraints getNodeAffinityConstraint();
    /**
     * <pre>
     * Constraint
     * </pre>
     *
     * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
     */
    si.v1.Si.NodeAffinityConstraintsOrBuilder getNodeAffinityConstraintOrBuilder();

    /**
     * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
     */
    boolean hasAllocationAffinityAttribute();
    /**
     * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
     */
    si.v1.Si.AllocationAffinityConstraints getAllocationAffinityAttribute();
    /**
     * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
     */
    si.v1.Si.AllocationAffinityConstraintsOrBuilder getAllocationAffinityAttributeOrBuilder();
  }
  /**
   * <pre>
   * Simple placement constraint represent constraint for affinity/anti-affinity
   * to node attribute or allocation tags.
   * When both of NodeAffinityConstraints and AllocationAffinityConstraints
   * specified, both will be checked and verified while scheduling.
   * </pre>
   *
   * Protobuf type {@code si.v1.SimplePlacementConstraint}
   */
  public  static final class SimplePlacementConstraint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.SimplePlacementConstraint)
      SimplePlacementConstraintOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimplePlacementConstraint.newBuilder() to construct.
    private SimplePlacementConstraint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimplePlacementConstraint() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SimplePlacementConstraint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              si.v1.Si.NodeAffinityConstraints.Builder subBuilder = null;
              if (nodeAffinityConstraint_ != null) {
                subBuilder = nodeAffinityConstraint_.toBuilder();
              }
              nodeAffinityConstraint_ = input.readMessage(si.v1.Si.NodeAffinityConstraints.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeAffinityConstraint_);
                nodeAffinityConstraint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              si.v1.Si.AllocationAffinityConstraints.Builder subBuilder = null;
              if (allocationAffinityAttribute_ != null) {
                subBuilder = allocationAffinityAttribute_.toBuilder();
              }
              allocationAffinityAttribute_ = input.readMessage(si.v1.Si.AllocationAffinityConstraints.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(allocationAffinityAttribute_);
                allocationAffinityAttribute_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_SimplePlacementConstraint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_SimplePlacementConstraint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.SimplePlacementConstraint.class, si.v1.Si.SimplePlacementConstraint.Builder.class);
    }

    public static final int NODEAFFINITYCONSTRAINT_FIELD_NUMBER = 1;
    private si.v1.Si.NodeAffinityConstraints nodeAffinityConstraint_;
    /**
     * <pre>
     * Constraint
     * </pre>
     *
     * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
     */
    public boolean hasNodeAffinityConstraint() {
      return nodeAffinityConstraint_ != null;
    }
    /**
     * <pre>
     * Constraint
     * </pre>
     *
     * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
     */
    public si.v1.Si.NodeAffinityConstraints getNodeAffinityConstraint() {
      return nodeAffinityConstraint_ == null ? si.v1.Si.NodeAffinityConstraints.getDefaultInstance() : nodeAffinityConstraint_;
    }
    /**
     * <pre>
     * Constraint
     * </pre>
     *
     * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
     */
    public si.v1.Si.NodeAffinityConstraintsOrBuilder getNodeAffinityConstraintOrBuilder() {
      return getNodeAffinityConstraint();
    }

    public static final int ALLOCATIONAFFINITYATTRIBUTE_FIELD_NUMBER = 2;
    private si.v1.Si.AllocationAffinityConstraints allocationAffinityAttribute_;
    /**
     * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
     */
    public boolean hasAllocationAffinityAttribute() {
      return allocationAffinityAttribute_ != null;
    }
    /**
     * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
     */
    public si.v1.Si.AllocationAffinityConstraints getAllocationAffinityAttribute() {
      return allocationAffinityAttribute_ == null ? si.v1.Si.AllocationAffinityConstraints.getDefaultInstance() : allocationAffinityAttribute_;
    }
    /**
     * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
     */
    public si.v1.Si.AllocationAffinityConstraintsOrBuilder getAllocationAffinityAttributeOrBuilder() {
      return getAllocationAffinityAttribute();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeAffinityConstraint_ != null) {
        output.writeMessage(1, getNodeAffinityConstraint());
      }
      if (allocationAffinityAttribute_ != null) {
        output.writeMessage(2, getAllocationAffinityAttribute());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeAffinityConstraint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNodeAffinityConstraint());
      }
      if (allocationAffinityAttribute_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAllocationAffinityAttribute());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.SimplePlacementConstraint)) {
        return super.equals(obj);
      }
      si.v1.Si.SimplePlacementConstraint other = (si.v1.Si.SimplePlacementConstraint) obj;

      boolean result = true;
      result = result && (hasNodeAffinityConstraint() == other.hasNodeAffinityConstraint());
      if (hasNodeAffinityConstraint()) {
        result = result && getNodeAffinityConstraint()
            .equals(other.getNodeAffinityConstraint());
      }
      result = result && (hasAllocationAffinityAttribute() == other.hasAllocationAffinityAttribute());
      if (hasAllocationAffinityAttribute()) {
        result = result && getAllocationAffinityAttribute()
            .equals(other.getAllocationAffinityAttribute());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNodeAffinityConstraint()) {
        hash = (37 * hash) + NODEAFFINITYCONSTRAINT_FIELD_NUMBER;
        hash = (53 * hash) + getNodeAffinityConstraint().hashCode();
      }
      if (hasAllocationAffinityAttribute()) {
        hash = (37 * hash) + ALLOCATIONAFFINITYATTRIBUTE_FIELD_NUMBER;
        hash = (53 * hash) + getAllocationAffinityAttribute().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.SimplePlacementConstraint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.SimplePlacementConstraint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.SimplePlacementConstraint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.SimplePlacementConstraint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.SimplePlacementConstraint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.SimplePlacementConstraint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.SimplePlacementConstraint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.SimplePlacementConstraint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.SimplePlacementConstraint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.SimplePlacementConstraint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.SimplePlacementConstraint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.SimplePlacementConstraint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.SimplePlacementConstraint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Simple placement constraint represent constraint for affinity/anti-affinity
     * to node attribute or allocation tags.
     * When both of NodeAffinityConstraints and AllocationAffinityConstraints
     * specified, both will be checked and verified while scheduling.
     * </pre>
     *
     * Protobuf type {@code si.v1.SimplePlacementConstraint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.SimplePlacementConstraint)
        si.v1.Si.SimplePlacementConstraintOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_SimplePlacementConstraint_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_SimplePlacementConstraint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.SimplePlacementConstraint.class, si.v1.Si.SimplePlacementConstraint.Builder.class);
      }

      // Construct using si.v1.Si.SimplePlacementConstraint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (nodeAffinityConstraintBuilder_ == null) {
          nodeAffinityConstraint_ = null;
        } else {
          nodeAffinityConstraint_ = null;
          nodeAffinityConstraintBuilder_ = null;
        }
        if (allocationAffinityAttributeBuilder_ == null) {
          allocationAffinityAttribute_ = null;
        } else {
          allocationAffinityAttribute_ = null;
          allocationAffinityAttributeBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_SimplePlacementConstraint_descriptor;
      }

      public si.v1.Si.SimplePlacementConstraint getDefaultInstanceForType() {
        return si.v1.Si.SimplePlacementConstraint.getDefaultInstance();
      }

      public si.v1.Si.SimplePlacementConstraint build() {
        si.v1.Si.SimplePlacementConstraint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.SimplePlacementConstraint buildPartial() {
        si.v1.Si.SimplePlacementConstraint result = new si.v1.Si.SimplePlacementConstraint(this);
        if (nodeAffinityConstraintBuilder_ == null) {
          result.nodeAffinityConstraint_ = nodeAffinityConstraint_;
        } else {
          result.nodeAffinityConstraint_ = nodeAffinityConstraintBuilder_.build();
        }
        if (allocationAffinityAttributeBuilder_ == null) {
          result.allocationAffinityAttribute_ = allocationAffinityAttribute_;
        } else {
          result.allocationAffinityAttribute_ = allocationAffinityAttributeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.SimplePlacementConstraint) {
          return mergeFrom((si.v1.Si.SimplePlacementConstraint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.SimplePlacementConstraint other) {
        if (other == si.v1.Si.SimplePlacementConstraint.getDefaultInstance()) return this;
        if (other.hasNodeAffinityConstraint()) {
          mergeNodeAffinityConstraint(other.getNodeAffinityConstraint());
        }
        if (other.hasAllocationAffinityAttribute()) {
          mergeAllocationAffinityAttribute(other.getAllocationAffinityAttribute());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.SimplePlacementConstraint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.SimplePlacementConstraint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private si.v1.Si.NodeAffinityConstraints nodeAffinityConstraint_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.NodeAffinityConstraints, si.v1.Si.NodeAffinityConstraints.Builder, si.v1.Si.NodeAffinityConstraintsOrBuilder> nodeAffinityConstraintBuilder_;
      /**
       * <pre>
       * Constraint
       * </pre>
       *
       * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
       */
      public boolean hasNodeAffinityConstraint() {
        return nodeAffinityConstraintBuilder_ != null || nodeAffinityConstraint_ != null;
      }
      /**
       * <pre>
       * Constraint
       * </pre>
       *
       * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
       */
      public si.v1.Si.NodeAffinityConstraints getNodeAffinityConstraint() {
        if (nodeAffinityConstraintBuilder_ == null) {
          return nodeAffinityConstraint_ == null ? si.v1.Si.NodeAffinityConstraints.getDefaultInstance() : nodeAffinityConstraint_;
        } else {
          return nodeAffinityConstraintBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Constraint
       * </pre>
       *
       * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
       */
      public Builder setNodeAffinityConstraint(si.v1.Si.NodeAffinityConstraints value) {
        if (nodeAffinityConstraintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeAffinityConstraint_ = value;
          onChanged();
        } else {
          nodeAffinityConstraintBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Constraint
       * </pre>
       *
       * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
       */
      public Builder setNodeAffinityConstraint(
          si.v1.Si.NodeAffinityConstraints.Builder builderForValue) {
        if (nodeAffinityConstraintBuilder_ == null) {
          nodeAffinityConstraint_ = builderForValue.build();
          onChanged();
        } else {
          nodeAffinityConstraintBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Constraint
       * </pre>
       *
       * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
       */
      public Builder mergeNodeAffinityConstraint(si.v1.Si.NodeAffinityConstraints value) {
        if (nodeAffinityConstraintBuilder_ == null) {
          if (nodeAffinityConstraint_ != null) {
            nodeAffinityConstraint_ =
              si.v1.Si.NodeAffinityConstraints.newBuilder(nodeAffinityConstraint_).mergeFrom(value).buildPartial();
          } else {
            nodeAffinityConstraint_ = value;
          }
          onChanged();
        } else {
          nodeAffinityConstraintBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Constraint
       * </pre>
       *
       * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
       */
      public Builder clearNodeAffinityConstraint() {
        if (nodeAffinityConstraintBuilder_ == null) {
          nodeAffinityConstraint_ = null;
          onChanged();
        } else {
          nodeAffinityConstraint_ = null;
          nodeAffinityConstraintBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Constraint
       * </pre>
       *
       * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
       */
      public si.v1.Si.NodeAffinityConstraints.Builder getNodeAffinityConstraintBuilder() {
        
        onChanged();
        return getNodeAffinityConstraintFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Constraint
       * </pre>
       *
       * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
       */
      public si.v1.Si.NodeAffinityConstraintsOrBuilder getNodeAffinityConstraintOrBuilder() {
        if (nodeAffinityConstraintBuilder_ != null) {
          return nodeAffinityConstraintBuilder_.getMessageOrBuilder();
        } else {
          return nodeAffinityConstraint_ == null ?
              si.v1.Si.NodeAffinityConstraints.getDefaultInstance() : nodeAffinityConstraint_;
        }
      }
      /**
       * <pre>
       * Constraint
       * </pre>
       *
       * <code>.si.v1.NodeAffinityConstraints nodeAffinityConstraint = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.NodeAffinityConstraints, si.v1.Si.NodeAffinityConstraints.Builder, si.v1.Si.NodeAffinityConstraintsOrBuilder> 
          getNodeAffinityConstraintFieldBuilder() {
        if (nodeAffinityConstraintBuilder_ == null) {
          nodeAffinityConstraintBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.NodeAffinityConstraints, si.v1.Si.NodeAffinityConstraints.Builder, si.v1.Si.NodeAffinityConstraintsOrBuilder>(
                  getNodeAffinityConstraint(),
                  getParentForChildren(),
                  isClean());
          nodeAffinityConstraint_ = null;
        }
        return nodeAffinityConstraintBuilder_;
      }

      private si.v1.Si.AllocationAffinityConstraints allocationAffinityAttribute_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.AllocationAffinityConstraints, si.v1.Si.AllocationAffinityConstraints.Builder, si.v1.Si.AllocationAffinityConstraintsOrBuilder> allocationAffinityAttributeBuilder_;
      /**
       * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
       */
      public boolean hasAllocationAffinityAttribute() {
        return allocationAffinityAttributeBuilder_ != null || allocationAffinityAttribute_ != null;
      }
      /**
       * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
       */
      public si.v1.Si.AllocationAffinityConstraints getAllocationAffinityAttribute() {
        if (allocationAffinityAttributeBuilder_ == null) {
          return allocationAffinityAttribute_ == null ? si.v1.Si.AllocationAffinityConstraints.getDefaultInstance() : allocationAffinityAttribute_;
        } else {
          return allocationAffinityAttributeBuilder_.getMessage();
        }
      }
      /**
       * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
       */
      public Builder setAllocationAffinityAttribute(si.v1.Si.AllocationAffinityConstraints value) {
        if (allocationAffinityAttributeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          allocationAffinityAttribute_ = value;
          onChanged();
        } else {
          allocationAffinityAttributeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
       */
      public Builder setAllocationAffinityAttribute(
          si.v1.Si.AllocationAffinityConstraints.Builder builderForValue) {
        if (allocationAffinityAttributeBuilder_ == null) {
          allocationAffinityAttribute_ = builderForValue.build();
          onChanged();
        } else {
          allocationAffinityAttributeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
       */
      public Builder mergeAllocationAffinityAttribute(si.v1.Si.AllocationAffinityConstraints value) {
        if (allocationAffinityAttributeBuilder_ == null) {
          if (allocationAffinityAttribute_ != null) {
            allocationAffinityAttribute_ =
              si.v1.Si.AllocationAffinityConstraints.newBuilder(allocationAffinityAttribute_).mergeFrom(value).buildPartial();
          } else {
            allocationAffinityAttribute_ = value;
          }
          onChanged();
        } else {
          allocationAffinityAttributeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
       */
      public Builder clearAllocationAffinityAttribute() {
        if (allocationAffinityAttributeBuilder_ == null) {
          allocationAffinityAttribute_ = null;
          onChanged();
        } else {
          allocationAffinityAttribute_ = null;
          allocationAffinityAttributeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
       */
      public si.v1.Si.AllocationAffinityConstraints.Builder getAllocationAffinityAttributeBuilder() {
        
        onChanged();
        return getAllocationAffinityAttributeFieldBuilder().getBuilder();
      }
      /**
       * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
       */
      public si.v1.Si.AllocationAffinityConstraintsOrBuilder getAllocationAffinityAttributeOrBuilder() {
        if (allocationAffinityAttributeBuilder_ != null) {
          return allocationAffinityAttributeBuilder_.getMessageOrBuilder();
        } else {
          return allocationAffinityAttribute_ == null ?
              si.v1.Si.AllocationAffinityConstraints.getDefaultInstance() : allocationAffinityAttribute_;
        }
      }
      /**
       * <code>.si.v1.AllocationAffinityConstraints allocationAffinityAttribute = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.AllocationAffinityConstraints, si.v1.Si.AllocationAffinityConstraints.Builder, si.v1.Si.AllocationAffinityConstraintsOrBuilder> 
          getAllocationAffinityAttributeFieldBuilder() {
        if (allocationAffinityAttributeBuilder_ == null) {
          allocationAffinityAttributeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.AllocationAffinityConstraints, si.v1.Si.AllocationAffinityConstraints.Builder, si.v1.Si.AllocationAffinityConstraintsOrBuilder>(
                  getAllocationAffinityAttribute(),
                  getParentForChildren(),
                  isClean());
          allocationAffinityAttribute_ = null;
        }
        return allocationAffinityAttributeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.SimplePlacementConstraint)
    }

    // @@protoc_insertion_point(class_scope:si.v1.SimplePlacementConstraint)
    private static final si.v1.Si.SimplePlacementConstraint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.SimplePlacementConstraint();
    }

    public static si.v1.Si.SimplePlacementConstraint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimplePlacementConstraint>
        PARSER = new com.google.protobuf.AbstractParser<SimplePlacementConstraint>() {
      public SimplePlacementConstraint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimplePlacementConstraint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SimplePlacementConstraint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimplePlacementConstraint> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.SimplePlacementConstraint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeAffinityConstraintsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.NodeAffinityConstraints)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
     */
    java.util.List<si.v1.Si.AffinityTargetExpression> 
        getTargetExpressionsList();
    /**
     * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
     */
    si.v1.Si.AffinityTargetExpression getTargetExpressions(int index);
    /**
     * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
     */
    int getTargetExpressionsCount();
    /**
     * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
     */
    java.util.List<? extends si.v1.Si.AffinityTargetExpressionOrBuilder> 
        getTargetExpressionsOrBuilderList();
    /**
     * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
     */
    si.v1.Si.AffinityTargetExpressionOrBuilder getTargetExpressionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Affinity to node, multiple AffinityTargetExpression will be specified,
   * They will be connected by AND.
   * </pre>
   *
   * Protobuf type {@code si.v1.NodeAffinityConstraints}
   */
  public  static final class NodeAffinityConstraints extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.NodeAffinityConstraints)
      NodeAffinityConstraintsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeAffinityConstraints.newBuilder() to construct.
    private NodeAffinityConstraints(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeAffinityConstraints() {
      targetExpressions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodeAffinityConstraints(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                targetExpressions_ = new java.util.ArrayList<si.v1.Si.AffinityTargetExpression>();
                mutable_bitField0_ |= 0x00000001;
              }
              targetExpressions_.add(
                  input.readMessage(si.v1.Si.AffinityTargetExpression.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          targetExpressions_ = java.util.Collections.unmodifiableList(targetExpressions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_NodeAffinityConstraints_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_NodeAffinityConstraints_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.NodeAffinityConstraints.class, si.v1.Si.NodeAffinityConstraints.Builder.class);
    }

    public static final int TARGETEXPRESSIONS_FIELD_NUMBER = 2;
    private java.util.List<si.v1.Si.AffinityTargetExpression> targetExpressions_;
    /**
     * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
     */
    public java.util.List<si.v1.Si.AffinityTargetExpression> getTargetExpressionsList() {
      return targetExpressions_;
    }
    /**
     * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
     */
    public java.util.List<? extends si.v1.Si.AffinityTargetExpressionOrBuilder> 
        getTargetExpressionsOrBuilderList() {
      return targetExpressions_;
    }
    /**
     * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
     */
    public int getTargetExpressionsCount() {
      return targetExpressions_.size();
    }
    /**
     * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
     */
    public si.v1.Si.AffinityTargetExpression getTargetExpressions(int index) {
      return targetExpressions_.get(index);
    }
    /**
     * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
     */
    public si.v1.Si.AffinityTargetExpressionOrBuilder getTargetExpressionsOrBuilder(
        int index) {
      return targetExpressions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < targetExpressions_.size(); i++) {
        output.writeMessage(2, targetExpressions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < targetExpressions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, targetExpressions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.NodeAffinityConstraints)) {
        return super.equals(obj);
      }
      si.v1.Si.NodeAffinityConstraints other = (si.v1.Si.NodeAffinityConstraints) obj;

      boolean result = true;
      result = result && getTargetExpressionsList()
          .equals(other.getTargetExpressionsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTargetExpressionsCount() > 0) {
        hash = (37 * hash) + TARGETEXPRESSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getTargetExpressionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.NodeAffinityConstraints parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.NodeAffinityConstraints parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.NodeAffinityConstraints parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.NodeAffinityConstraints parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.NodeAffinityConstraints parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.NodeAffinityConstraints parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.NodeAffinityConstraints parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.NodeAffinityConstraints parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.NodeAffinityConstraints parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.NodeAffinityConstraints parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.NodeAffinityConstraints parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.NodeAffinityConstraints parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.NodeAffinityConstraints prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Affinity to node, multiple AffinityTargetExpression will be specified,
     * They will be connected by AND.
     * </pre>
     *
     * Protobuf type {@code si.v1.NodeAffinityConstraints}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.NodeAffinityConstraints)
        si.v1.Si.NodeAffinityConstraintsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_NodeAffinityConstraints_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_NodeAffinityConstraints_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.NodeAffinityConstraints.class, si.v1.Si.NodeAffinityConstraints.Builder.class);
      }

      // Construct using si.v1.Si.NodeAffinityConstraints.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTargetExpressionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (targetExpressionsBuilder_ == null) {
          targetExpressions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          targetExpressionsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_NodeAffinityConstraints_descriptor;
      }

      public si.v1.Si.NodeAffinityConstraints getDefaultInstanceForType() {
        return si.v1.Si.NodeAffinityConstraints.getDefaultInstance();
      }

      public si.v1.Si.NodeAffinityConstraints build() {
        si.v1.Si.NodeAffinityConstraints result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.NodeAffinityConstraints buildPartial() {
        si.v1.Si.NodeAffinityConstraints result = new si.v1.Si.NodeAffinityConstraints(this);
        int from_bitField0_ = bitField0_;
        if (targetExpressionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            targetExpressions_ = java.util.Collections.unmodifiableList(targetExpressions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.targetExpressions_ = targetExpressions_;
        } else {
          result.targetExpressions_ = targetExpressionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.NodeAffinityConstraints) {
          return mergeFrom((si.v1.Si.NodeAffinityConstraints)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.NodeAffinityConstraints other) {
        if (other == si.v1.Si.NodeAffinityConstraints.getDefaultInstance()) return this;
        if (targetExpressionsBuilder_ == null) {
          if (!other.targetExpressions_.isEmpty()) {
            if (targetExpressions_.isEmpty()) {
              targetExpressions_ = other.targetExpressions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTargetExpressionsIsMutable();
              targetExpressions_.addAll(other.targetExpressions_);
            }
            onChanged();
          }
        } else {
          if (!other.targetExpressions_.isEmpty()) {
            if (targetExpressionsBuilder_.isEmpty()) {
              targetExpressionsBuilder_.dispose();
              targetExpressionsBuilder_ = null;
              targetExpressions_ = other.targetExpressions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              targetExpressionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTargetExpressionsFieldBuilder() : null;
            } else {
              targetExpressionsBuilder_.addAllMessages(other.targetExpressions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.NodeAffinityConstraints parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.NodeAffinityConstraints) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<si.v1.Si.AffinityTargetExpression> targetExpressions_ =
        java.util.Collections.emptyList();
      private void ensureTargetExpressionsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          targetExpressions_ = new java.util.ArrayList<si.v1.Si.AffinityTargetExpression>(targetExpressions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AffinityTargetExpression, si.v1.Si.AffinityTargetExpression.Builder, si.v1.Si.AffinityTargetExpressionOrBuilder> targetExpressionsBuilder_;

      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public java.util.List<si.v1.Si.AffinityTargetExpression> getTargetExpressionsList() {
        if (targetExpressionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(targetExpressions_);
        } else {
          return targetExpressionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public int getTargetExpressionsCount() {
        if (targetExpressionsBuilder_ == null) {
          return targetExpressions_.size();
        } else {
          return targetExpressionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public si.v1.Si.AffinityTargetExpression getTargetExpressions(int index) {
        if (targetExpressionsBuilder_ == null) {
          return targetExpressions_.get(index);
        } else {
          return targetExpressionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public Builder setTargetExpressions(
          int index, si.v1.Si.AffinityTargetExpression value) {
        if (targetExpressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetExpressionsIsMutable();
          targetExpressions_.set(index, value);
          onChanged();
        } else {
          targetExpressionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public Builder setTargetExpressions(
          int index, si.v1.Si.AffinityTargetExpression.Builder builderForValue) {
        if (targetExpressionsBuilder_ == null) {
          ensureTargetExpressionsIsMutable();
          targetExpressions_.set(index, builderForValue.build());
          onChanged();
        } else {
          targetExpressionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public Builder addTargetExpressions(si.v1.Si.AffinityTargetExpression value) {
        if (targetExpressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetExpressionsIsMutable();
          targetExpressions_.add(value);
          onChanged();
        } else {
          targetExpressionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public Builder addTargetExpressions(
          int index, si.v1.Si.AffinityTargetExpression value) {
        if (targetExpressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetExpressionsIsMutable();
          targetExpressions_.add(index, value);
          onChanged();
        } else {
          targetExpressionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public Builder addTargetExpressions(
          si.v1.Si.AffinityTargetExpression.Builder builderForValue) {
        if (targetExpressionsBuilder_ == null) {
          ensureTargetExpressionsIsMutable();
          targetExpressions_.add(builderForValue.build());
          onChanged();
        } else {
          targetExpressionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public Builder addTargetExpressions(
          int index, si.v1.Si.AffinityTargetExpression.Builder builderForValue) {
        if (targetExpressionsBuilder_ == null) {
          ensureTargetExpressionsIsMutable();
          targetExpressions_.add(index, builderForValue.build());
          onChanged();
        } else {
          targetExpressionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public Builder addAllTargetExpressions(
          java.lang.Iterable<? extends si.v1.Si.AffinityTargetExpression> values) {
        if (targetExpressionsBuilder_ == null) {
          ensureTargetExpressionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, targetExpressions_);
          onChanged();
        } else {
          targetExpressionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public Builder clearTargetExpressions() {
        if (targetExpressionsBuilder_ == null) {
          targetExpressions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          targetExpressionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public Builder removeTargetExpressions(int index) {
        if (targetExpressionsBuilder_ == null) {
          ensureTargetExpressionsIsMutable();
          targetExpressions_.remove(index);
          onChanged();
        } else {
          targetExpressionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public si.v1.Si.AffinityTargetExpression.Builder getTargetExpressionsBuilder(
          int index) {
        return getTargetExpressionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public si.v1.Si.AffinityTargetExpressionOrBuilder getTargetExpressionsOrBuilder(
          int index) {
        if (targetExpressionsBuilder_ == null) {
          return targetExpressions_.get(index);  } else {
          return targetExpressionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public java.util.List<? extends si.v1.Si.AffinityTargetExpressionOrBuilder> 
           getTargetExpressionsOrBuilderList() {
        if (targetExpressionsBuilder_ != null) {
          return targetExpressionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(targetExpressions_);
        }
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public si.v1.Si.AffinityTargetExpression.Builder addTargetExpressionsBuilder() {
        return getTargetExpressionsFieldBuilder().addBuilder(
            si.v1.Si.AffinityTargetExpression.getDefaultInstance());
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public si.v1.Si.AffinityTargetExpression.Builder addTargetExpressionsBuilder(
          int index) {
        return getTargetExpressionsFieldBuilder().addBuilder(
            index, si.v1.Si.AffinityTargetExpression.getDefaultInstance());
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression targetExpressions = 2;</code>
       */
      public java.util.List<si.v1.Si.AffinityTargetExpression.Builder> 
           getTargetExpressionsBuilderList() {
        return getTargetExpressionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AffinityTargetExpression, si.v1.Si.AffinityTargetExpression.Builder, si.v1.Si.AffinityTargetExpressionOrBuilder> 
          getTargetExpressionsFieldBuilder() {
        if (targetExpressionsBuilder_ == null) {
          targetExpressionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.AffinityTargetExpression, si.v1.Si.AffinityTargetExpression.Builder, si.v1.Si.AffinityTargetExpressionOrBuilder>(
                  targetExpressions_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          targetExpressions_ = null;
        }
        return targetExpressionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.NodeAffinityConstraints)
    }

    // @@protoc_insertion_point(class_scope:si.v1.NodeAffinityConstraints)
    private static final si.v1.Si.NodeAffinityConstraints DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.NodeAffinityConstraints();
    }

    public static si.v1.Si.NodeAffinityConstraints getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeAffinityConstraints>
        PARSER = new com.google.protobuf.AbstractParser<NodeAffinityConstraints>() {
      public NodeAffinityConstraints parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeAffinityConstraints(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeAffinityConstraints> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeAffinityConstraints> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.NodeAffinityConstraints getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllocationAffinityConstraintsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.AllocationAffinityConstraints)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Scope: scope is key of node attribute, which determines if &gt;1 allocations
     * in the same group or not.
     * When allocations on node(s) which have same node attribute value
     * for given node attribute key == scope. They're in the same group.
     * e.g. when user wants to do anti-affinity between allocation on node
     * basis, scope can be set to "hostname", max-cardinality = 1;
     * </pre>
     *
     * <code>string scope = 1;</code>
     */
    java.lang.String getScope();
    /**
     * <pre>
     * Scope: scope is key of node attribute, which determines if &gt;1 allocations
     * in the same group or not.
     * When allocations on node(s) which have same node attribute value
     * for given node attribute key == scope. They're in the same group.
     * e.g. when user wants to do anti-affinity between allocation on node
     * basis, scope can be set to "hostname", max-cardinality = 1;
     * </pre>
     *
     * <code>string scope = 1;</code>
     */
    com.google.protobuf.ByteString
        getScopeBytes();

    /**
     * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
     */
    java.util.List<si.v1.Si.AffinityTargetExpression> 
        getTragetExpressionsList();
    /**
     * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
     */
    si.v1.Si.AffinityTargetExpression getTragetExpressions(int index);
    /**
     * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
     */
    int getTragetExpressionsCount();
    /**
     * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
     */
    java.util.List<? extends si.v1.Si.AffinityTargetExpressionOrBuilder> 
        getTragetExpressionsOrBuilderList();
    /**
     * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
     */
    si.v1.Si.AffinityTargetExpressionOrBuilder getTragetExpressionsOrBuilder(
        int index);

    /**
     * <code>int32 minCardinality = 3;</code>
     */
    int getMinCardinality();

    /**
     * <code>int32 maxCardinality = 4;</code>
     */
    int getMaxCardinality();

    /**
     * <pre>
     * Is this a required (hard) or preferred (soft) request.
     * </pre>
     *
     * <code>bool required = 5;</code>
     */
    boolean getRequired();
  }
  /**
   * <pre>
   * Affinity to allocations (containers).
   * Affinity is single-direction, which means if RM wants to do mutual affinity/
   * anti-affinity between allocations, same constraints need to be added
   * to all allocation asks.
   * </pre>
   *
   * Protobuf type {@code si.v1.AllocationAffinityConstraints}
   */
  public  static final class AllocationAffinityConstraints extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.AllocationAffinityConstraints)
      AllocationAffinityConstraintsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllocationAffinityConstraints.newBuilder() to construct.
    private AllocationAffinityConstraints(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllocationAffinityConstraints() {
      scope_ = "";
      tragetExpressions_ = java.util.Collections.emptyList();
      minCardinality_ = 0;
      maxCardinality_ = 0;
      required_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AllocationAffinityConstraints(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              scope_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                tragetExpressions_ = new java.util.ArrayList<si.v1.Si.AffinityTargetExpression>();
                mutable_bitField0_ |= 0x00000002;
              }
              tragetExpressions_.add(
                  input.readMessage(si.v1.Si.AffinityTargetExpression.parser(), extensionRegistry));
              break;
            }
            case 24: {

              minCardinality_ = input.readInt32();
              break;
            }
            case 32: {

              maxCardinality_ = input.readInt32();
              break;
            }
            case 40: {

              required_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          tragetExpressions_ = java.util.Collections.unmodifiableList(tragetExpressions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_AllocationAffinityConstraints_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_AllocationAffinityConstraints_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.AllocationAffinityConstraints.class, si.v1.Si.AllocationAffinityConstraints.Builder.class);
    }

    private int bitField0_;
    public static final int SCOPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object scope_;
    /**
     * <pre>
     * Scope: scope is key of node attribute, which determines if &gt;1 allocations
     * in the same group or not.
     * When allocations on node(s) which have same node attribute value
     * for given node attribute key == scope. They're in the same group.
     * e.g. when user wants to do anti-affinity between allocation on node
     * basis, scope can be set to "hostname", max-cardinality = 1;
     * </pre>
     *
     * <code>string scope = 1;</code>
     */
    public java.lang.String getScope() {
      java.lang.Object ref = scope_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        scope_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Scope: scope is key of node attribute, which determines if &gt;1 allocations
     * in the same group or not.
     * When allocations on node(s) which have same node attribute value
     * for given node attribute key == scope. They're in the same group.
     * e.g. when user wants to do anti-affinity between allocation on node
     * basis, scope can be set to "hostname", max-cardinality = 1;
     * </pre>
     *
     * <code>string scope = 1;</code>
     */
    public com.google.protobuf.ByteString
        getScopeBytes() {
      java.lang.Object ref = scope_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scope_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRAGETEXPRESSIONS_FIELD_NUMBER = 2;
    private java.util.List<si.v1.Si.AffinityTargetExpression> tragetExpressions_;
    /**
     * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
     */
    public java.util.List<si.v1.Si.AffinityTargetExpression> getTragetExpressionsList() {
      return tragetExpressions_;
    }
    /**
     * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
     */
    public java.util.List<? extends si.v1.Si.AffinityTargetExpressionOrBuilder> 
        getTragetExpressionsOrBuilderList() {
      return tragetExpressions_;
    }
    /**
     * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
     */
    public int getTragetExpressionsCount() {
      return tragetExpressions_.size();
    }
    /**
     * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
     */
    public si.v1.Si.AffinityTargetExpression getTragetExpressions(int index) {
      return tragetExpressions_.get(index);
    }
    /**
     * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
     */
    public si.v1.Si.AffinityTargetExpressionOrBuilder getTragetExpressionsOrBuilder(
        int index) {
      return tragetExpressions_.get(index);
    }

    public static final int MINCARDINALITY_FIELD_NUMBER = 3;
    private int minCardinality_;
    /**
     * <code>int32 minCardinality = 3;</code>
     */
    public int getMinCardinality() {
      return minCardinality_;
    }

    public static final int MAXCARDINALITY_FIELD_NUMBER = 4;
    private int maxCardinality_;
    /**
     * <code>int32 maxCardinality = 4;</code>
     */
    public int getMaxCardinality() {
      return maxCardinality_;
    }

    public static final int REQUIRED_FIELD_NUMBER = 5;
    private boolean required_;
    /**
     * <pre>
     * Is this a required (hard) or preferred (soft) request.
     * </pre>
     *
     * <code>bool required = 5;</code>
     */
    public boolean getRequired() {
      return required_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getScopeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, scope_);
      }
      for (int i = 0; i < tragetExpressions_.size(); i++) {
        output.writeMessage(2, tragetExpressions_.get(i));
      }
      if (minCardinality_ != 0) {
        output.writeInt32(3, minCardinality_);
      }
      if (maxCardinality_ != 0) {
        output.writeInt32(4, maxCardinality_);
      }
      if (required_ != false) {
        output.writeBool(5, required_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getScopeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, scope_);
      }
      for (int i = 0; i < tragetExpressions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tragetExpressions_.get(i));
      }
      if (minCardinality_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, minCardinality_);
      }
      if (maxCardinality_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxCardinality_);
      }
      if (required_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, required_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.AllocationAffinityConstraints)) {
        return super.equals(obj);
      }
      si.v1.Si.AllocationAffinityConstraints other = (si.v1.Si.AllocationAffinityConstraints) obj;

      boolean result = true;
      result = result && getScope()
          .equals(other.getScope());
      result = result && getTragetExpressionsList()
          .equals(other.getTragetExpressionsList());
      result = result && (getMinCardinality()
          == other.getMinCardinality());
      result = result && (getMaxCardinality()
          == other.getMaxCardinality());
      result = result && (getRequired()
          == other.getRequired());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SCOPE_FIELD_NUMBER;
      hash = (53 * hash) + getScope().hashCode();
      if (getTragetExpressionsCount() > 0) {
        hash = (37 * hash) + TRAGETEXPRESSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getTragetExpressionsList().hashCode();
      }
      hash = (37 * hash) + MINCARDINALITY_FIELD_NUMBER;
      hash = (53 * hash) + getMinCardinality();
      hash = (37 * hash) + MAXCARDINALITY_FIELD_NUMBER;
      hash = (53 * hash) + getMaxCardinality();
      hash = (37 * hash) + REQUIRED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRequired());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.AllocationAffinityConstraints parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationAffinityConstraints parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.AllocationAffinityConstraints prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Affinity to allocations (containers).
     * Affinity is single-direction, which means if RM wants to do mutual affinity/
     * anti-affinity between allocations, same constraints need to be added
     * to all allocation asks.
     * </pre>
     *
     * Protobuf type {@code si.v1.AllocationAffinityConstraints}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.AllocationAffinityConstraints)
        si.v1.Si.AllocationAffinityConstraintsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_AllocationAffinityConstraints_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_AllocationAffinityConstraints_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.AllocationAffinityConstraints.class, si.v1.Si.AllocationAffinityConstraints.Builder.class);
      }

      // Construct using si.v1.Si.AllocationAffinityConstraints.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTragetExpressionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        scope_ = "";

        if (tragetExpressionsBuilder_ == null) {
          tragetExpressions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tragetExpressionsBuilder_.clear();
        }
        minCardinality_ = 0;

        maxCardinality_ = 0;

        required_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_AllocationAffinityConstraints_descriptor;
      }

      public si.v1.Si.AllocationAffinityConstraints getDefaultInstanceForType() {
        return si.v1.Si.AllocationAffinityConstraints.getDefaultInstance();
      }

      public si.v1.Si.AllocationAffinityConstraints build() {
        si.v1.Si.AllocationAffinityConstraints result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.AllocationAffinityConstraints buildPartial() {
        si.v1.Si.AllocationAffinityConstraints result = new si.v1.Si.AllocationAffinityConstraints(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.scope_ = scope_;
        if (tragetExpressionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            tragetExpressions_ = java.util.Collections.unmodifiableList(tragetExpressions_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tragetExpressions_ = tragetExpressions_;
        } else {
          result.tragetExpressions_ = tragetExpressionsBuilder_.build();
        }
        result.minCardinality_ = minCardinality_;
        result.maxCardinality_ = maxCardinality_;
        result.required_ = required_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.AllocationAffinityConstraints) {
          return mergeFrom((si.v1.Si.AllocationAffinityConstraints)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.AllocationAffinityConstraints other) {
        if (other == si.v1.Si.AllocationAffinityConstraints.getDefaultInstance()) return this;
        if (!other.getScope().isEmpty()) {
          scope_ = other.scope_;
          onChanged();
        }
        if (tragetExpressionsBuilder_ == null) {
          if (!other.tragetExpressions_.isEmpty()) {
            if (tragetExpressions_.isEmpty()) {
              tragetExpressions_ = other.tragetExpressions_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTragetExpressionsIsMutable();
              tragetExpressions_.addAll(other.tragetExpressions_);
            }
            onChanged();
          }
        } else {
          if (!other.tragetExpressions_.isEmpty()) {
            if (tragetExpressionsBuilder_.isEmpty()) {
              tragetExpressionsBuilder_.dispose();
              tragetExpressionsBuilder_ = null;
              tragetExpressions_ = other.tragetExpressions_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tragetExpressionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTragetExpressionsFieldBuilder() : null;
            } else {
              tragetExpressionsBuilder_.addAllMessages(other.tragetExpressions_);
            }
          }
        }
        if (other.getMinCardinality() != 0) {
          setMinCardinality(other.getMinCardinality());
        }
        if (other.getMaxCardinality() != 0) {
          setMaxCardinality(other.getMaxCardinality());
        }
        if (other.getRequired() != false) {
          setRequired(other.getRequired());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.AllocationAffinityConstraints parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.AllocationAffinityConstraints) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object scope_ = "";
      /**
       * <pre>
       * Scope: scope is key of node attribute, which determines if &gt;1 allocations
       * in the same group or not.
       * When allocations on node(s) which have same node attribute value
       * for given node attribute key == scope. They're in the same group.
       * e.g. when user wants to do anti-affinity between allocation on node
       * basis, scope can be set to "hostname", max-cardinality = 1;
       * </pre>
       *
       * <code>string scope = 1;</code>
       */
      public java.lang.String getScope() {
        java.lang.Object ref = scope_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          scope_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Scope: scope is key of node attribute, which determines if &gt;1 allocations
       * in the same group or not.
       * When allocations on node(s) which have same node attribute value
       * for given node attribute key == scope. They're in the same group.
       * e.g. when user wants to do anti-affinity between allocation on node
       * basis, scope can be set to "hostname", max-cardinality = 1;
       * </pre>
       *
       * <code>string scope = 1;</code>
       */
      public com.google.protobuf.ByteString
          getScopeBytes() {
        java.lang.Object ref = scope_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scope_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Scope: scope is key of node attribute, which determines if &gt;1 allocations
       * in the same group or not.
       * When allocations on node(s) which have same node attribute value
       * for given node attribute key == scope. They're in the same group.
       * e.g. when user wants to do anti-affinity between allocation on node
       * basis, scope can be set to "hostname", max-cardinality = 1;
       * </pre>
       *
       * <code>string scope = 1;</code>
       */
      public Builder setScope(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        scope_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Scope: scope is key of node attribute, which determines if &gt;1 allocations
       * in the same group or not.
       * When allocations on node(s) which have same node attribute value
       * for given node attribute key == scope. They're in the same group.
       * e.g. when user wants to do anti-affinity between allocation on node
       * basis, scope can be set to "hostname", max-cardinality = 1;
       * </pre>
       *
       * <code>string scope = 1;</code>
       */
      public Builder clearScope() {
        
        scope_ = getDefaultInstance().getScope();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Scope: scope is key of node attribute, which determines if &gt;1 allocations
       * in the same group or not.
       * When allocations on node(s) which have same node attribute value
       * for given node attribute key == scope. They're in the same group.
       * e.g. when user wants to do anti-affinity between allocation on node
       * basis, scope can be set to "hostname", max-cardinality = 1;
       * </pre>
       *
       * <code>string scope = 1;</code>
       */
      public Builder setScopeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        scope_ = value;
        onChanged();
        return this;
      }

      private java.util.List<si.v1.Si.AffinityTargetExpression> tragetExpressions_ =
        java.util.Collections.emptyList();
      private void ensureTragetExpressionsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tragetExpressions_ = new java.util.ArrayList<si.v1.Si.AffinityTargetExpression>(tragetExpressions_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AffinityTargetExpression, si.v1.Si.AffinityTargetExpression.Builder, si.v1.Si.AffinityTargetExpressionOrBuilder> tragetExpressionsBuilder_;

      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public java.util.List<si.v1.Si.AffinityTargetExpression> getTragetExpressionsList() {
        if (tragetExpressionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tragetExpressions_);
        } else {
          return tragetExpressionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public int getTragetExpressionsCount() {
        if (tragetExpressionsBuilder_ == null) {
          return tragetExpressions_.size();
        } else {
          return tragetExpressionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public si.v1.Si.AffinityTargetExpression getTragetExpressions(int index) {
        if (tragetExpressionsBuilder_ == null) {
          return tragetExpressions_.get(index);
        } else {
          return tragetExpressionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public Builder setTragetExpressions(
          int index, si.v1.Si.AffinityTargetExpression value) {
        if (tragetExpressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTragetExpressionsIsMutable();
          tragetExpressions_.set(index, value);
          onChanged();
        } else {
          tragetExpressionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public Builder setTragetExpressions(
          int index, si.v1.Si.AffinityTargetExpression.Builder builderForValue) {
        if (tragetExpressionsBuilder_ == null) {
          ensureTragetExpressionsIsMutable();
          tragetExpressions_.set(index, builderForValue.build());
          onChanged();
        } else {
          tragetExpressionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public Builder addTragetExpressions(si.v1.Si.AffinityTargetExpression value) {
        if (tragetExpressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTragetExpressionsIsMutable();
          tragetExpressions_.add(value);
          onChanged();
        } else {
          tragetExpressionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public Builder addTragetExpressions(
          int index, si.v1.Si.AffinityTargetExpression value) {
        if (tragetExpressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTragetExpressionsIsMutable();
          tragetExpressions_.add(index, value);
          onChanged();
        } else {
          tragetExpressionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public Builder addTragetExpressions(
          si.v1.Si.AffinityTargetExpression.Builder builderForValue) {
        if (tragetExpressionsBuilder_ == null) {
          ensureTragetExpressionsIsMutable();
          tragetExpressions_.add(builderForValue.build());
          onChanged();
        } else {
          tragetExpressionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public Builder addTragetExpressions(
          int index, si.v1.Si.AffinityTargetExpression.Builder builderForValue) {
        if (tragetExpressionsBuilder_ == null) {
          ensureTragetExpressionsIsMutable();
          tragetExpressions_.add(index, builderForValue.build());
          onChanged();
        } else {
          tragetExpressionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public Builder addAllTragetExpressions(
          java.lang.Iterable<? extends si.v1.Si.AffinityTargetExpression> values) {
        if (tragetExpressionsBuilder_ == null) {
          ensureTragetExpressionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tragetExpressions_);
          onChanged();
        } else {
          tragetExpressionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public Builder clearTragetExpressions() {
        if (tragetExpressionsBuilder_ == null) {
          tragetExpressions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tragetExpressionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public Builder removeTragetExpressions(int index) {
        if (tragetExpressionsBuilder_ == null) {
          ensureTragetExpressionsIsMutable();
          tragetExpressions_.remove(index);
          onChanged();
        } else {
          tragetExpressionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public si.v1.Si.AffinityTargetExpression.Builder getTragetExpressionsBuilder(
          int index) {
        return getTragetExpressionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public si.v1.Si.AffinityTargetExpressionOrBuilder getTragetExpressionsOrBuilder(
          int index) {
        if (tragetExpressionsBuilder_ == null) {
          return tragetExpressions_.get(index);  } else {
          return tragetExpressionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public java.util.List<? extends si.v1.Si.AffinityTargetExpressionOrBuilder> 
           getTragetExpressionsOrBuilderList() {
        if (tragetExpressionsBuilder_ != null) {
          return tragetExpressionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tragetExpressions_);
        }
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public si.v1.Si.AffinityTargetExpression.Builder addTragetExpressionsBuilder() {
        return getTragetExpressionsFieldBuilder().addBuilder(
            si.v1.Si.AffinityTargetExpression.getDefaultInstance());
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public si.v1.Si.AffinityTargetExpression.Builder addTragetExpressionsBuilder(
          int index) {
        return getTragetExpressionsFieldBuilder().addBuilder(
            index, si.v1.Si.AffinityTargetExpression.getDefaultInstance());
      }
      /**
       * <code>repeated .si.v1.AffinityTargetExpression tragetExpressions = 2;</code>
       */
      public java.util.List<si.v1.Si.AffinityTargetExpression.Builder> 
           getTragetExpressionsBuilderList() {
        return getTragetExpressionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AffinityTargetExpression, si.v1.Si.AffinityTargetExpression.Builder, si.v1.Si.AffinityTargetExpressionOrBuilder> 
          getTragetExpressionsFieldBuilder() {
        if (tragetExpressionsBuilder_ == null) {
          tragetExpressionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.AffinityTargetExpression, si.v1.Si.AffinityTargetExpression.Builder, si.v1.Si.AffinityTargetExpressionOrBuilder>(
                  tragetExpressions_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          tragetExpressions_ = null;
        }
        return tragetExpressionsBuilder_;
      }

      private int minCardinality_ ;
      /**
       * <code>int32 minCardinality = 3;</code>
       */
      public int getMinCardinality() {
        return minCardinality_;
      }
      /**
       * <code>int32 minCardinality = 3;</code>
       */
      public Builder setMinCardinality(int value) {
        
        minCardinality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 minCardinality = 3;</code>
       */
      public Builder clearMinCardinality() {
        
        minCardinality_ = 0;
        onChanged();
        return this;
      }

      private int maxCardinality_ ;
      /**
       * <code>int32 maxCardinality = 4;</code>
       */
      public int getMaxCardinality() {
        return maxCardinality_;
      }
      /**
       * <code>int32 maxCardinality = 4;</code>
       */
      public Builder setMaxCardinality(int value) {
        
        maxCardinality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxCardinality = 4;</code>
       */
      public Builder clearMaxCardinality() {
        
        maxCardinality_ = 0;
        onChanged();
        return this;
      }

      private boolean required_ ;
      /**
       * <pre>
       * Is this a required (hard) or preferred (soft) request.
       * </pre>
       *
       * <code>bool required = 5;</code>
       */
      public boolean getRequired() {
        return required_;
      }
      /**
       * <pre>
       * Is this a required (hard) or preferred (soft) request.
       * </pre>
       *
       * <code>bool required = 5;</code>
       */
      public Builder setRequired(boolean value) {
        
        required_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Is this a required (hard) or preferred (soft) request.
       * </pre>
       *
       * <code>bool required = 5;</code>
       */
      public Builder clearRequired() {
        
        required_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.AllocationAffinityConstraints)
    }

    // @@protoc_insertion_point(class_scope:si.v1.AllocationAffinityConstraints)
    private static final si.v1.Si.AllocationAffinityConstraints DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.AllocationAffinityConstraints();
    }

    public static si.v1.Si.AllocationAffinityConstraints getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllocationAffinityConstraints>
        PARSER = new com.google.protobuf.AbstractParser<AllocationAffinityConstraints>() {
      public AllocationAffinityConstraints parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllocationAffinityConstraints(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AllocationAffinityConstraints> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllocationAffinityConstraints> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.AllocationAffinityConstraints getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AffinityTargetExpressionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.AffinityTargetExpression)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
     */
    boolean hasTargetOperator();
    /**
     * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
     */
    si.v1.Si.AffinityTargetExpression getTargetOperator();
    /**
     * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
     */
    si.v1.Si.AffinityTargetExpressionOrBuilder getTargetOperatorOrBuilder();

    /**
     * <code>string targetKey = 2;</code>
     */
    java.lang.String getTargetKey();
    /**
     * <code>string targetKey = 2;</code>
     */
    com.google.protobuf.ByteString
        getTargetKeyBytes();

    /**
     * <code>repeated string targetValues = 3;</code>
     */
    java.util.List<java.lang.String>
        getTargetValuesList();
    /**
     * <code>repeated string targetValues = 3;</code>
     */
    int getTargetValuesCount();
    /**
     * <code>repeated string targetValues = 3;</code>
     */
    java.lang.String getTargetValues(int index);
    /**
     * <code>repeated string targetValues = 3;</code>
     */
    com.google.protobuf.ByteString
        getTargetValuesBytes(int index);
  }
  /**
   * Protobuf type {@code si.v1.AffinityTargetExpression}
   */
  public  static final class AffinityTargetExpression extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.AffinityTargetExpression)
      AffinityTargetExpressionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AffinityTargetExpression.newBuilder() to construct.
    private AffinityTargetExpression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AffinityTargetExpression() {
      targetKey_ = "";
      targetValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AffinityTargetExpression(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              si.v1.Si.AffinityTargetExpression.Builder subBuilder = null;
              if (targetOperator_ != null) {
                subBuilder = targetOperator_.toBuilder();
              }
              targetOperator_ = input.readMessage(si.v1.Si.AffinityTargetExpression.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetOperator_);
                targetOperator_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              targetKey_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                targetValues_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              targetValues_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          targetValues_ = targetValues_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_AffinityTargetExpression_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_AffinityTargetExpression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.AffinityTargetExpression.class, si.v1.Si.AffinityTargetExpression.Builder.class);
    }

    /**
     * <pre>
     * Following 4 operators can be specified, by default is "IN".
     * When EXIST/NOT_EXISTS specified, scheduler only check if given targetKey
     * appears on node attribute or allocation tag.
     * </pre>
     *
     * Protobuf enum {@code si.v1.AffinityTargetExpression.AffinityTargetOperator}
     */
    public enum AffinityTargetOperator
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>IN = 0;</code>
       */
      IN(0),
      /**
       * <code>NOT_IN = 1;</code>
       */
      NOT_IN(1),
      /**
       * <code>EXIST = 2;</code>
       */
      EXIST(2),
      /**
       * <code>NOT_EXIST = 3;</code>
       */
      NOT_EXIST(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>IN = 0;</code>
       */
      public static final int IN_VALUE = 0;
      /**
       * <code>NOT_IN = 1;</code>
       */
      public static final int NOT_IN_VALUE = 1;
      /**
       * <code>EXIST = 2;</code>
       */
      public static final int EXIST_VALUE = 2;
      /**
       * <code>NOT_EXIST = 3;</code>
       */
      public static final int NOT_EXIST_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AffinityTargetOperator valueOf(int value) {
        return forNumber(value);
      }

      public static AffinityTargetOperator forNumber(int value) {
        switch (value) {
          case 0: return IN;
          case 1: return NOT_IN;
          case 2: return EXIST;
          case 3: return NOT_EXIST;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AffinityTargetOperator>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AffinityTargetOperator> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AffinityTargetOperator>() {
              public AffinityTargetOperator findValueByNumber(int number) {
                return AffinityTargetOperator.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return si.v1.Si.AffinityTargetExpression.getDescriptor().getEnumTypes().get(0);
      }

      private static final AffinityTargetOperator[] VALUES = values();

      public static AffinityTargetOperator valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AffinityTargetOperator(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:si.v1.AffinityTargetExpression.AffinityTargetOperator)
    }

    private int bitField0_;
    public static final int TARGETOPERATOR_FIELD_NUMBER = 1;
    private si.v1.Si.AffinityTargetExpression targetOperator_;
    /**
     * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
     */
    public boolean hasTargetOperator() {
      return targetOperator_ != null;
    }
    /**
     * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
     */
    public si.v1.Si.AffinityTargetExpression getTargetOperator() {
      return targetOperator_ == null ? si.v1.Si.AffinityTargetExpression.getDefaultInstance() : targetOperator_;
    }
    /**
     * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
     */
    public si.v1.Si.AffinityTargetExpressionOrBuilder getTargetOperatorOrBuilder() {
      return getTargetOperator();
    }

    public static final int TARGETKEY_FIELD_NUMBER = 2;
    private volatile java.lang.Object targetKey_;
    /**
     * <code>string targetKey = 2;</code>
     */
    public java.lang.String getTargetKey() {
      java.lang.Object ref = targetKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetKey_ = s;
        return s;
      }
    }
    /**
     * <code>string targetKey = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTargetKeyBytes() {
      java.lang.Object ref = targetKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGETVALUES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList targetValues_;
    /**
     * <code>repeated string targetValues = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTargetValuesList() {
      return targetValues_;
    }
    /**
     * <code>repeated string targetValues = 3;</code>
     */
    public int getTargetValuesCount() {
      return targetValues_.size();
    }
    /**
     * <code>repeated string targetValues = 3;</code>
     */
    public java.lang.String getTargetValues(int index) {
      return targetValues_.get(index);
    }
    /**
     * <code>repeated string targetValues = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTargetValuesBytes(int index) {
      return targetValues_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (targetOperator_ != null) {
        output.writeMessage(1, getTargetOperator());
      }
      if (!getTargetKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, targetKey_);
      }
      for (int i = 0; i < targetValues_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, targetValues_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (targetOperator_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTargetOperator());
      }
      if (!getTargetKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, targetKey_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < targetValues_.size(); i++) {
          dataSize += computeStringSizeNoTag(targetValues_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTargetValuesList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.AffinityTargetExpression)) {
        return super.equals(obj);
      }
      si.v1.Si.AffinityTargetExpression other = (si.v1.Si.AffinityTargetExpression) obj;

      boolean result = true;
      result = result && (hasTargetOperator() == other.hasTargetOperator());
      if (hasTargetOperator()) {
        result = result && getTargetOperator()
            .equals(other.getTargetOperator());
      }
      result = result && getTargetKey()
          .equals(other.getTargetKey());
      result = result && getTargetValuesList()
          .equals(other.getTargetValuesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTargetOperator()) {
        hash = (37 * hash) + TARGETOPERATOR_FIELD_NUMBER;
        hash = (53 * hash) + getTargetOperator().hashCode();
      }
      hash = (37 * hash) + TARGETKEY_FIELD_NUMBER;
      hash = (53 * hash) + getTargetKey().hashCode();
      if (getTargetValuesCount() > 0) {
        hash = (37 * hash) + TARGETVALUES_FIELD_NUMBER;
        hash = (53 * hash) + getTargetValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.AffinityTargetExpression parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AffinityTargetExpression parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AffinityTargetExpression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AffinityTargetExpression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AffinityTargetExpression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AffinityTargetExpression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AffinityTargetExpression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AffinityTargetExpression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AffinityTargetExpression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.AffinityTargetExpression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AffinityTargetExpression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AffinityTargetExpression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.AffinityTargetExpression prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.AffinityTargetExpression}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.AffinityTargetExpression)
        si.v1.Si.AffinityTargetExpressionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_AffinityTargetExpression_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_AffinityTargetExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.AffinityTargetExpression.class, si.v1.Si.AffinityTargetExpression.Builder.class);
      }

      // Construct using si.v1.Si.AffinityTargetExpression.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (targetOperatorBuilder_ == null) {
          targetOperator_ = null;
        } else {
          targetOperator_ = null;
          targetOperatorBuilder_ = null;
        }
        targetKey_ = "";

        targetValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_AffinityTargetExpression_descriptor;
      }

      public si.v1.Si.AffinityTargetExpression getDefaultInstanceForType() {
        return si.v1.Si.AffinityTargetExpression.getDefaultInstance();
      }

      public si.v1.Si.AffinityTargetExpression build() {
        si.v1.Si.AffinityTargetExpression result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.AffinityTargetExpression buildPartial() {
        si.v1.Si.AffinityTargetExpression result = new si.v1.Si.AffinityTargetExpression(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (targetOperatorBuilder_ == null) {
          result.targetOperator_ = targetOperator_;
        } else {
          result.targetOperator_ = targetOperatorBuilder_.build();
        }
        result.targetKey_ = targetKey_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          targetValues_ = targetValues_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.targetValues_ = targetValues_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.AffinityTargetExpression) {
          return mergeFrom((si.v1.Si.AffinityTargetExpression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.AffinityTargetExpression other) {
        if (other == si.v1.Si.AffinityTargetExpression.getDefaultInstance()) return this;
        if (other.hasTargetOperator()) {
          mergeTargetOperator(other.getTargetOperator());
        }
        if (!other.getTargetKey().isEmpty()) {
          targetKey_ = other.targetKey_;
          onChanged();
        }
        if (!other.targetValues_.isEmpty()) {
          if (targetValues_.isEmpty()) {
            targetValues_ = other.targetValues_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTargetValuesIsMutable();
            targetValues_.addAll(other.targetValues_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.AffinityTargetExpression parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.AffinityTargetExpression) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private si.v1.Si.AffinityTargetExpression targetOperator_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.AffinityTargetExpression, si.v1.Si.AffinityTargetExpression.Builder, si.v1.Si.AffinityTargetExpressionOrBuilder> targetOperatorBuilder_;
      /**
       * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
       */
      public boolean hasTargetOperator() {
        return targetOperatorBuilder_ != null || targetOperator_ != null;
      }
      /**
       * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
       */
      public si.v1.Si.AffinityTargetExpression getTargetOperator() {
        if (targetOperatorBuilder_ == null) {
          return targetOperator_ == null ? si.v1.Si.AffinityTargetExpression.getDefaultInstance() : targetOperator_;
        } else {
          return targetOperatorBuilder_.getMessage();
        }
      }
      /**
       * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
       */
      public Builder setTargetOperator(si.v1.Si.AffinityTargetExpression value) {
        if (targetOperatorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetOperator_ = value;
          onChanged();
        } else {
          targetOperatorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
       */
      public Builder setTargetOperator(
          si.v1.Si.AffinityTargetExpression.Builder builderForValue) {
        if (targetOperatorBuilder_ == null) {
          targetOperator_ = builderForValue.build();
          onChanged();
        } else {
          targetOperatorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
       */
      public Builder mergeTargetOperator(si.v1.Si.AffinityTargetExpression value) {
        if (targetOperatorBuilder_ == null) {
          if (targetOperator_ != null) {
            targetOperator_ =
              si.v1.Si.AffinityTargetExpression.newBuilder(targetOperator_).mergeFrom(value).buildPartial();
          } else {
            targetOperator_ = value;
          }
          onChanged();
        } else {
          targetOperatorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
       */
      public Builder clearTargetOperator() {
        if (targetOperatorBuilder_ == null) {
          targetOperator_ = null;
          onChanged();
        } else {
          targetOperator_ = null;
          targetOperatorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
       */
      public si.v1.Si.AffinityTargetExpression.Builder getTargetOperatorBuilder() {
        
        onChanged();
        return getTargetOperatorFieldBuilder().getBuilder();
      }
      /**
       * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
       */
      public si.v1.Si.AffinityTargetExpressionOrBuilder getTargetOperatorOrBuilder() {
        if (targetOperatorBuilder_ != null) {
          return targetOperatorBuilder_.getMessageOrBuilder();
        } else {
          return targetOperator_ == null ?
              si.v1.Si.AffinityTargetExpression.getDefaultInstance() : targetOperator_;
        }
      }
      /**
       * <code>.si.v1.AffinityTargetExpression targetOperator = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.AffinityTargetExpression, si.v1.Si.AffinityTargetExpression.Builder, si.v1.Si.AffinityTargetExpressionOrBuilder> 
          getTargetOperatorFieldBuilder() {
        if (targetOperatorBuilder_ == null) {
          targetOperatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.AffinityTargetExpression, si.v1.Si.AffinityTargetExpression.Builder, si.v1.Si.AffinityTargetExpressionOrBuilder>(
                  getTargetOperator(),
                  getParentForChildren(),
                  isClean());
          targetOperator_ = null;
        }
        return targetOperatorBuilder_;
      }

      private java.lang.Object targetKey_ = "";
      /**
       * <code>string targetKey = 2;</code>
       */
      public java.lang.String getTargetKey() {
        java.lang.Object ref = targetKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          targetKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string targetKey = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTargetKeyBytes() {
        java.lang.Object ref = targetKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string targetKey = 2;</code>
       */
      public Builder setTargetKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        targetKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string targetKey = 2;</code>
       */
      public Builder clearTargetKey() {
        
        targetKey_ = getDefaultInstance().getTargetKey();
        onChanged();
        return this;
      }
      /**
       * <code>string targetKey = 2;</code>
       */
      public Builder setTargetKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        targetKey_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList targetValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTargetValuesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          targetValues_ = new com.google.protobuf.LazyStringArrayList(targetValues_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string targetValues = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTargetValuesList() {
        return targetValues_.getUnmodifiableView();
      }
      /**
       * <code>repeated string targetValues = 3;</code>
       */
      public int getTargetValuesCount() {
        return targetValues_.size();
      }
      /**
       * <code>repeated string targetValues = 3;</code>
       */
      public java.lang.String getTargetValues(int index) {
        return targetValues_.get(index);
      }
      /**
       * <code>repeated string targetValues = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTargetValuesBytes(int index) {
        return targetValues_.getByteString(index);
      }
      /**
       * <code>repeated string targetValues = 3;</code>
       */
      public Builder setTargetValues(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTargetValuesIsMutable();
        targetValues_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string targetValues = 3;</code>
       */
      public Builder addTargetValues(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTargetValuesIsMutable();
        targetValues_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string targetValues = 3;</code>
       */
      public Builder addAllTargetValues(
          java.lang.Iterable<java.lang.String> values) {
        ensureTargetValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, targetValues_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string targetValues = 3;</code>
       */
      public Builder clearTargetValues() {
        targetValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string targetValues = 3;</code>
       */
      public Builder addTargetValuesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTargetValuesIsMutable();
        targetValues_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.AffinityTargetExpression)
    }

    // @@protoc_insertion_point(class_scope:si.v1.AffinityTargetExpression)
    private static final si.v1.Si.AffinityTargetExpression DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.AffinityTargetExpression();
    }

    public static si.v1.Si.AffinityTargetExpression getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AffinityTargetExpression>
        PARSER = new com.google.protobuf.AbstractParser<AffinityTargetExpression>() {
      public AffinityTargetExpression parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AffinityTargetExpression(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AffinityTargetExpression> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AffinityTargetExpression> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.AffinityTargetExpression getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllocationReleasesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.AllocationReleasesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
     */
    java.util.List<si.v1.Si.AllocationReleaseRequest> 
        getAllocationsToReleaseList();
    /**
     * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
     */
    si.v1.Si.AllocationReleaseRequest getAllocationsToRelease(int index);
    /**
     * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
     */
    int getAllocationsToReleaseCount();
    /**
     * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
     */
    java.util.List<? extends si.v1.Si.AllocationReleaseRequestOrBuilder> 
        getAllocationsToReleaseOrBuilderList();
    /**
     * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
     */
    si.v1.Si.AllocationReleaseRequestOrBuilder getAllocationsToReleaseOrBuilder(
        int index);

    /**
     * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
     */
    java.util.List<si.v1.Si.AllocationAskReleaseRequest> 
        getAllocationAsksToReleaseList();
    /**
     * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
     */
    si.v1.Si.AllocationAskReleaseRequest getAllocationAsksToRelease(int index);
    /**
     * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
     */
    int getAllocationAsksToReleaseCount();
    /**
     * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
     */
    java.util.List<? extends si.v1.Si.AllocationAskReleaseRequestOrBuilder> 
        getAllocationAsksToReleaseOrBuilderList();
    /**
     * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
     */
    si.v1.Si.AllocationAskReleaseRequestOrBuilder getAllocationAsksToReleaseOrBuilder(
        int index);
  }
  /**
   * <pre>
   *Following protocol is commented on-purpose, currently for your references only
   *message CompositePlacementConstraintProto {
   *enum CompositeType {
   * // All children constraints have to be satisfied.
   *AND = 0;
   * // One of the children constraints has to be satisfied.
   *OR = 1;
   * // Attempt to satisfy the first child constraint for delays[0] units (e.g.,
   * // millisec or heartbeats). If this fails, try to satisfy the second child
   * // constraint for delays[1] units and so on.
   *DELAYED_OR = 2;
   *}
   *CompositeType compositeType = 1;
   *repeated PlacementConstraintProto childConstraints = 2;
   *repeated TimedPlacementConstraintProto timedChildConstraints = 3;
   *}
   *message TimedPlacementConstraintProto {
   *enum DelayUnit {
   *MILLISECONDS = 0;
   *OPPORTUNITIES = 1;
   *}
   *required PlacementConstraintProto placementConstraint = 1;
   *required int64 schedulingDelay = 2;
   *DelayUnit delayUnit = 3 [ default = MILLISECONDS ];
   *}
   * </pre>
   *
   * Protobuf type {@code si.v1.AllocationReleasesRequest}
   */
  public  static final class AllocationReleasesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.AllocationReleasesRequest)
      AllocationReleasesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllocationReleasesRequest.newBuilder() to construct.
    private AllocationReleasesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllocationReleasesRequest() {
      allocationsToRelease_ = java.util.Collections.emptyList();
      allocationAsksToRelease_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AllocationReleasesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                allocationsToRelease_ = new java.util.ArrayList<si.v1.Si.AllocationReleaseRequest>();
                mutable_bitField0_ |= 0x00000001;
              }
              allocationsToRelease_.add(
                  input.readMessage(si.v1.Si.AllocationReleaseRequest.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                allocationAsksToRelease_ = new java.util.ArrayList<si.v1.Si.AllocationAskReleaseRequest>();
                mutable_bitField0_ |= 0x00000002;
              }
              allocationAsksToRelease_.add(
                  input.readMessage(si.v1.Si.AllocationAskReleaseRequest.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          allocationsToRelease_ = java.util.Collections.unmodifiableList(allocationsToRelease_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          allocationAsksToRelease_ = java.util.Collections.unmodifiableList(allocationAsksToRelease_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_AllocationReleasesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_AllocationReleasesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.AllocationReleasesRequest.class, si.v1.Si.AllocationReleasesRequest.Builder.class);
    }

    public static final int ALLOCATIONSTORELEASE_FIELD_NUMBER = 1;
    private java.util.List<si.v1.Si.AllocationReleaseRequest> allocationsToRelease_;
    /**
     * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
     */
    public java.util.List<si.v1.Si.AllocationReleaseRequest> getAllocationsToReleaseList() {
      return allocationsToRelease_;
    }
    /**
     * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
     */
    public java.util.List<? extends si.v1.Si.AllocationReleaseRequestOrBuilder> 
        getAllocationsToReleaseOrBuilderList() {
      return allocationsToRelease_;
    }
    /**
     * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
     */
    public int getAllocationsToReleaseCount() {
      return allocationsToRelease_.size();
    }
    /**
     * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
     */
    public si.v1.Si.AllocationReleaseRequest getAllocationsToRelease(int index) {
      return allocationsToRelease_.get(index);
    }
    /**
     * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
     */
    public si.v1.Si.AllocationReleaseRequestOrBuilder getAllocationsToReleaseOrBuilder(
        int index) {
      return allocationsToRelease_.get(index);
    }

    public static final int ALLOCATIONASKSTORELEASE_FIELD_NUMBER = 2;
    private java.util.List<si.v1.Si.AllocationAskReleaseRequest> allocationAsksToRelease_;
    /**
     * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
     */
    public java.util.List<si.v1.Si.AllocationAskReleaseRequest> getAllocationAsksToReleaseList() {
      return allocationAsksToRelease_;
    }
    /**
     * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
     */
    public java.util.List<? extends si.v1.Si.AllocationAskReleaseRequestOrBuilder> 
        getAllocationAsksToReleaseOrBuilderList() {
      return allocationAsksToRelease_;
    }
    /**
     * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
     */
    public int getAllocationAsksToReleaseCount() {
      return allocationAsksToRelease_.size();
    }
    /**
     * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
     */
    public si.v1.Si.AllocationAskReleaseRequest getAllocationAsksToRelease(int index) {
      return allocationAsksToRelease_.get(index);
    }
    /**
     * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
     */
    public si.v1.Si.AllocationAskReleaseRequestOrBuilder getAllocationAsksToReleaseOrBuilder(
        int index) {
      return allocationAsksToRelease_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < allocationsToRelease_.size(); i++) {
        output.writeMessage(1, allocationsToRelease_.get(i));
      }
      for (int i = 0; i < allocationAsksToRelease_.size(); i++) {
        output.writeMessage(2, allocationAsksToRelease_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < allocationsToRelease_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, allocationsToRelease_.get(i));
      }
      for (int i = 0; i < allocationAsksToRelease_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, allocationAsksToRelease_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.AllocationReleasesRequest)) {
        return super.equals(obj);
      }
      si.v1.Si.AllocationReleasesRequest other = (si.v1.Si.AllocationReleasesRequest) obj;

      boolean result = true;
      result = result && getAllocationsToReleaseList()
          .equals(other.getAllocationsToReleaseList());
      result = result && getAllocationAsksToReleaseList()
          .equals(other.getAllocationAsksToReleaseList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAllocationsToReleaseCount() > 0) {
        hash = (37 * hash) + ALLOCATIONSTORELEASE_FIELD_NUMBER;
        hash = (53 * hash) + getAllocationsToReleaseList().hashCode();
      }
      if (getAllocationAsksToReleaseCount() > 0) {
        hash = (37 * hash) + ALLOCATIONASKSTORELEASE_FIELD_NUMBER;
        hash = (53 * hash) + getAllocationAsksToReleaseList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.AllocationReleasesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationReleasesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleasesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationReleasesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleasesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationReleasesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleasesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationReleasesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleasesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationReleasesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleasesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationReleasesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.AllocationReleasesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *Following protocol is commented on-purpose, currently for your references only
     *message CompositePlacementConstraintProto {
     *enum CompositeType {
     * // All children constraints have to be satisfied.
     *AND = 0;
     * // One of the children constraints has to be satisfied.
     *OR = 1;
     * // Attempt to satisfy the first child constraint for delays[0] units (e.g.,
     * // millisec or heartbeats). If this fails, try to satisfy the second child
     * // constraint for delays[1] units and so on.
     *DELAYED_OR = 2;
     *}
     *CompositeType compositeType = 1;
     *repeated PlacementConstraintProto childConstraints = 2;
     *repeated TimedPlacementConstraintProto timedChildConstraints = 3;
     *}
     *message TimedPlacementConstraintProto {
     *enum DelayUnit {
     *MILLISECONDS = 0;
     *OPPORTUNITIES = 1;
     *}
     *required PlacementConstraintProto placementConstraint = 1;
     *required int64 schedulingDelay = 2;
     *DelayUnit delayUnit = 3 [ default = MILLISECONDS ];
     *}
     * </pre>
     *
     * Protobuf type {@code si.v1.AllocationReleasesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.AllocationReleasesRequest)
        si.v1.Si.AllocationReleasesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_AllocationReleasesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_AllocationReleasesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.AllocationReleasesRequest.class, si.v1.Si.AllocationReleasesRequest.Builder.class);
      }

      // Construct using si.v1.Si.AllocationReleasesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAllocationsToReleaseFieldBuilder();
          getAllocationAsksToReleaseFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (allocationsToReleaseBuilder_ == null) {
          allocationsToRelease_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          allocationsToReleaseBuilder_.clear();
        }
        if (allocationAsksToReleaseBuilder_ == null) {
          allocationAsksToRelease_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          allocationAsksToReleaseBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_AllocationReleasesRequest_descriptor;
      }

      public si.v1.Si.AllocationReleasesRequest getDefaultInstanceForType() {
        return si.v1.Si.AllocationReleasesRequest.getDefaultInstance();
      }

      public si.v1.Si.AllocationReleasesRequest build() {
        si.v1.Si.AllocationReleasesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.AllocationReleasesRequest buildPartial() {
        si.v1.Si.AllocationReleasesRequest result = new si.v1.Si.AllocationReleasesRequest(this);
        int from_bitField0_ = bitField0_;
        if (allocationsToReleaseBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            allocationsToRelease_ = java.util.Collections.unmodifiableList(allocationsToRelease_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.allocationsToRelease_ = allocationsToRelease_;
        } else {
          result.allocationsToRelease_ = allocationsToReleaseBuilder_.build();
        }
        if (allocationAsksToReleaseBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            allocationAsksToRelease_ = java.util.Collections.unmodifiableList(allocationAsksToRelease_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.allocationAsksToRelease_ = allocationAsksToRelease_;
        } else {
          result.allocationAsksToRelease_ = allocationAsksToReleaseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.AllocationReleasesRequest) {
          return mergeFrom((si.v1.Si.AllocationReleasesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.AllocationReleasesRequest other) {
        if (other == si.v1.Si.AllocationReleasesRequest.getDefaultInstance()) return this;
        if (allocationsToReleaseBuilder_ == null) {
          if (!other.allocationsToRelease_.isEmpty()) {
            if (allocationsToRelease_.isEmpty()) {
              allocationsToRelease_ = other.allocationsToRelease_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAllocationsToReleaseIsMutable();
              allocationsToRelease_.addAll(other.allocationsToRelease_);
            }
            onChanged();
          }
        } else {
          if (!other.allocationsToRelease_.isEmpty()) {
            if (allocationsToReleaseBuilder_.isEmpty()) {
              allocationsToReleaseBuilder_.dispose();
              allocationsToReleaseBuilder_ = null;
              allocationsToRelease_ = other.allocationsToRelease_;
              bitField0_ = (bitField0_ & ~0x00000001);
              allocationsToReleaseBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAllocationsToReleaseFieldBuilder() : null;
            } else {
              allocationsToReleaseBuilder_.addAllMessages(other.allocationsToRelease_);
            }
          }
        }
        if (allocationAsksToReleaseBuilder_ == null) {
          if (!other.allocationAsksToRelease_.isEmpty()) {
            if (allocationAsksToRelease_.isEmpty()) {
              allocationAsksToRelease_ = other.allocationAsksToRelease_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAllocationAsksToReleaseIsMutable();
              allocationAsksToRelease_.addAll(other.allocationAsksToRelease_);
            }
            onChanged();
          }
        } else {
          if (!other.allocationAsksToRelease_.isEmpty()) {
            if (allocationAsksToReleaseBuilder_.isEmpty()) {
              allocationAsksToReleaseBuilder_.dispose();
              allocationAsksToReleaseBuilder_ = null;
              allocationAsksToRelease_ = other.allocationAsksToRelease_;
              bitField0_ = (bitField0_ & ~0x00000002);
              allocationAsksToReleaseBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAllocationAsksToReleaseFieldBuilder() : null;
            } else {
              allocationAsksToReleaseBuilder_.addAllMessages(other.allocationAsksToRelease_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.AllocationReleasesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.AllocationReleasesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<si.v1.Si.AllocationReleaseRequest> allocationsToRelease_ =
        java.util.Collections.emptyList();
      private void ensureAllocationsToReleaseIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          allocationsToRelease_ = new java.util.ArrayList<si.v1.Si.AllocationReleaseRequest>(allocationsToRelease_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AllocationReleaseRequest, si.v1.Si.AllocationReleaseRequest.Builder, si.v1.Si.AllocationReleaseRequestOrBuilder> allocationsToReleaseBuilder_;

      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public java.util.List<si.v1.Si.AllocationReleaseRequest> getAllocationsToReleaseList() {
        if (allocationsToReleaseBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allocationsToRelease_);
        } else {
          return allocationsToReleaseBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public int getAllocationsToReleaseCount() {
        if (allocationsToReleaseBuilder_ == null) {
          return allocationsToRelease_.size();
        } else {
          return allocationsToReleaseBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public si.v1.Si.AllocationReleaseRequest getAllocationsToRelease(int index) {
        if (allocationsToReleaseBuilder_ == null) {
          return allocationsToRelease_.get(index);
        } else {
          return allocationsToReleaseBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public Builder setAllocationsToRelease(
          int index, si.v1.Si.AllocationReleaseRequest value) {
        if (allocationsToReleaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocationsToReleaseIsMutable();
          allocationsToRelease_.set(index, value);
          onChanged();
        } else {
          allocationsToReleaseBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public Builder setAllocationsToRelease(
          int index, si.v1.Si.AllocationReleaseRequest.Builder builderForValue) {
        if (allocationsToReleaseBuilder_ == null) {
          ensureAllocationsToReleaseIsMutable();
          allocationsToRelease_.set(index, builderForValue.build());
          onChanged();
        } else {
          allocationsToReleaseBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public Builder addAllocationsToRelease(si.v1.Si.AllocationReleaseRequest value) {
        if (allocationsToReleaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocationsToReleaseIsMutable();
          allocationsToRelease_.add(value);
          onChanged();
        } else {
          allocationsToReleaseBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public Builder addAllocationsToRelease(
          int index, si.v1.Si.AllocationReleaseRequest value) {
        if (allocationsToReleaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocationsToReleaseIsMutable();
          allocationsToRelease_.add(index, value);
          onChanged();
        } else {
          allocationsToReleaseBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public Builder addAllocationsToRelease(
          si.v1.Si.AllocationReleaseRequest.Builder builderForValue) {
        if (allocationsToReleaseBuilder_ == null) {
          ensureAllocationsToReleaseIsMutable();
          allocationsToRelease_.add(builderForValue.build());
          onChanged();
        } else {
          allocationsToReleaseBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public Builder addAllocationsToRelease(
          int index, si.v1.Si.AllocationReleaseRequest.Builder builderForValue) {
        if (allocationsToReleaseBuilder_ == null) {
          ensureAllocationsToReleaseIsMutable();
          allocationsToRelease_.add(index, builderForValue.build());
          onChanged();
        } else {
          allocationsToReleaseBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public Builder addAllAllocationsToRelease(
          java.lang.Iterable<? extends si.v1.Si.AllocationReleaseRequest> values) {
        if (allocationsToReleaseBuilder_ == null) {
          ensureAllocationsToReleaseIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, allocationsToRelease_);
          onChanged();
        } else {
          allocationsToReleaseBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public Builder clearAllocationsToRelease() {
        if (allocationsToReleaseBuilder_ == null) {
          allocationsToRelease_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          allocationsToReleaseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public Builder removeAllocationsToRelease(int index) {
        if (allocationsToReleaseBuilder_ == null) {
          ensureAllocationsToReleaseIsMutable();
          allocationsToRelease_.remove(index);
          onChanged();
        } else {
          allocationsToReleaseBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public si.v1.Si.AllocationReleaseRequest.Builder getAllocationsToReleaseBuilder(
          int index) {
        return getAllocationsToReleaseFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public si.v1.Si.AllocationReleaseRequestOrBuilder getAllocationsToReleaseOrBuilder(
          int index) {
        if (allocationsToReleaseBuilder_ == null) {
          return allocationsToRelease_.get(index);  } else {
          return allocationsToReleaseBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public java.util.List<? extends si.v1.Si.AllocationReleaseRequestOrBuilder> 
           getAllocationsToReleaseOrBuilderList() {
        if (allocationsToReleaseBuilder_ != null) {
          return allocationsToReleaseBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allocationsToRelease_);
        }
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public si.v1.Si.AllocationReleaseRequest.Builder addAllocationsToReleaseBuilder() {
        return getAllocationsToReleaseFieldBuilder().addBuilder(
            si.v1.Si.AllocationReleaseRequest.getDefaultInstance());
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public si.v1.Si.AllocationReleaseRequest.Builder addAllocationsToReleaseBuilder(
          int index) {
        return getAllocationsToReleaseFieldBuilder().addBuilder(
            index, si.v1.Si.AllocationReleaseRequest.getDefaultInstance());
      }
      /**
       * <code>repeated .si.v1.AllocationReleaseRequest allocationsToRelease = 1;</code>
       */
      public java.util.List<si.v1.Si.AllocationReleaseRequest.Builder> 
           getAllocationsToReleaseBuilderList() {
        return getAllocationsToReleaseFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AllocationReleaseRequest, si.v1.Si.AllocationReleaseRequest.Builder, si.v1.Si.AllocationReleaseRequestOrBuilder> 
          getAllocationsToReleaseFieldBuilder() {
        if (allocationsToReleaseBuilder_ == null) {
          allocationsToReleaseBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.AllocationReleaseRequest, si.v1.Si.AllocationReleaseRequest.Builder, si.v1.Si.AllocationReleaseRequestOrBuilder>(
                  allocationsToRelease_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          allocationsToRelease_ = null;
        }
        return allocationsToReleaseBuilder_;
      }

      private java.util.List<si.v1.Si.AllocationAskReleaseRequest> allocationAsksToRelease_ =
        java.util.Collections.emptyList();
      private void ensureAllocationAsksToReleaseIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          allocationAsksToRelease_ = new java.util.ArrayList<si.v1.Si.AllocationAskReleaseRequest>(allocationAsksToRelease_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AllocationAskReleaseRequest, si.v1.Si.AllocationAskReleaseRequest.Builder, si.v1.Si.AllocationAskReleaseRequestOrBuilder> allocationAsksToReleaseBuilder_;

      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public java.util.List<si.v1.Si.AllocationAskReleaseRequest> getAllocationAsksToReleaseList() {
        if (allocationAsksToReleaseBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allocationAsksToRelease_);
        } else {
          return allocationAsksToReleaseBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public int getAllocationAsksToReleaseCount() {
        if (allocationAsksToReleaseBuilder_ == null) {
          return allocationAsksToRelease_.size();
        } else {
          return allocationAsksToReleaseBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public si.v1.Si.AllocationAskReleaseRequest getAllocationAsksToRelease(int index) {
        if (allocationAsksToReleaseBuilder_ == null) {
          return allocationAsksToRelease_.get(index);
        } else {
          return allocationAsksToReleaseBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public Builder setAllocationAsksToRelease(
          int index, si.v1.Si.AllocationAskReleaseRequest value) {
        if (allocationAsksToReleaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocationAsksToReleaseIsMutable();
          allocationAsksToRelease_.set(index, value);
          onChanged();
        } else {
          allocationAsksToReleaseBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public Builder setAllocationAsksToRelease(
          int index, si.v1.Si.AllocationAskReleaseRequest.Builder builderForValue) {
        if (allocationAsksToReleaseBuilder_ == null) {
          ensureAllocationAsksToReleaseIsMutable();
          allocationAsksToRelease_.set(index, builderForValue.build());
          onChanged();
        } else {
          allocationAsksToReleaseBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public Builder addAllocationAsksToRelease(si.v1.Si.AllocationAskReleaseRequest value) {
        if (allocationAsksToReleaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocationAsksToReleaseIsMutable();
          allocationAsksToRelease_.add(value);
          onChanged();
        } else {
          allocationAsksToReleaseBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public Builder addAllocationAsksToRelease(
          int index, si.v1.Si.AllocationAskReleaseRequest value) {
        if (allocationAsksToReleaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocationAsksToReleaseIsMutable();
          allocationAsksToRelease_.add(index, value);
          onChanged();
        } else {
          allocationAsksToReleaseBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public Builder addAllocationAsksToRelease(
          si.v1.Si.AllocationAskReleaseRequest.Builder builderForValue) {
        if (allocationAsksToReleaseBuilder_ == null) {
          ensureAllocationAsksToReleaseIsMutable();
          allocationAsksToRelease_.add(builderForValue.build());
          onChanged();
        } else {
          allocationAsksToReleaseBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public Builder addAllocationAsksToRelease(
          int index, si.v1.Si.AllocationAskReleaseRequest.Builder builderForValue) {
        if (allocationAsksToReleaseBuilder_ == null) {
          ensureAllocationAsksToReleaseIsMutable();
          allocationAsksToRelease_.add(index, builderForValue.build());
          onChanged();
        } else {
          allocationAsksToReleaseBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public Builder addAllAllocationAsksToRelease(
          java.lang.Iterable<? extends si.v1.Si.AllocationAskReleaseRequest> values) {
        if (allocationAsksToReleaseBuilder_ == null) {
          ensureAllocationAsksToReleaseIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, allocationAsksToRelease_);
          onChanged();
        } else {
          allocationAsksToReleaseBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public Builder clearAllocationAsksToRelease() {
        if (allocationAsksToReleaseBuilder_ == null) {
          allocationAsksToRelease_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          allocationAsksToReleaseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public Builder removeAllocationAsksToRelease(int index) {
        if (allocationAsksToReleaseBuilder_ == null) {
          ensureAllocationAsksToReleaseIsMutable();
          allocationAsksToRelease_.remove(index);
          onChanged();
        } else {
          allocationAsksToReleaseBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public si.v1.Si.AllocationAskReleaseRequest.Builder getAllocationAsksToReleaseBuilder(
          int index) {
        return getAllocationAsksToReleaseFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public si.v1.Si.AllocationAskReleaseRequestOrBuilder getAllocationAsksToReleaseOrBuilder(
          int index) {
        if (allocationAsksToReleaseBuilder_ == null) {
          return allocationAsksToRelease_.get(index);  } else {
          return allocationAsksToReleaseBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public java.util.List<? extends si.v1.Si.AllocationAskReleaseRequestOrBuilder> 
           getAllocationAsksToReleaseOrBuilderList() {
        if (allocationAsksToReleaseBuilder_ != null) {
          return allocationAsksToReleaseBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allocationAsksToRelease_);
        }
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public si.v1.Si.AllocationAskReleaseRequest.Builder addAllocationAsksToReleaseBuilder() {
        return getAllocationAsksToReleaseFieldBuilder().addBuilder(
            si.v1.Si.AllocationAskReleaseRequest.getDefaultInstance());
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public si.v1.Si.AllocationAskReleaseRequest.Builder addAllocationAsksToReleaseBuilder(
          int index) {
        return getAllocationAsksToReleaseFieldBuilder().addBuilder(
            index, si.v1.Si.AllocationAskReleaseRequest.getDefaultInstance());
      }
      /**
       * <code>repeated .si.v1.AllocationAskReleaseRequest allocationAsksToRelease = 2;</code>
       */
      public java.util.List<si.v1.Si.AllocationAskReleaseRequest.Builder> 
           getAllocationAsksToReleaseBuilderList() {
        return getAllocationAsksToReleaseFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.AllocationAskReleaseRequest, si.v1.Si.AllocationAskReleaseRequest.Builder, si.v1.Si.AllocationAskReleaseRequestOrBuilder> 
          getAllocationAsksToReleaseFieldBuilder() {
        if (allocationAsksToReleaseBuilder_ == null) {
          allocationAsksToReleaseBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.AllocationAskReleaseRequest, si.v1.Si.AllocationAskReleaseRequest.Builder, si.v1.Si.AllocationAskReleaseRequestOrBuilder>(
                  allocationAsksToRelease_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          allocationAsksToRelease_ = null;
        }
        return allocationAsksToReleaseBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.AllocationReleasesRequest)
    }

    // @@protoc_insertion_point(class_scope:si.v1.AllocationReleasesRequest)
    private static final si.v1.Si.AllocationReleasesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.AllocationReleasesRequest();
    }

    public static si.v1.Si.AllocationReleasesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllocationReleasesRequest>
        PARSER = new com.google.protobuf.AbstractParser<AllocationReleasesRequest>() {
      public AllocationReleasesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllocationReleasesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AllocationReleasesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllocationReleasesRequest> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.AllocationReleasesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllocationReleaseRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.AllocationReleaseRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * optional, when this is set, only release allocation by given uuid.
     * </pre>
     *
     * <code>string uuid = 1;</code>
     */
    java.lang.String getUuid();
    /**
     * <pre>
     * optional, when this is set, only release allocation by given uuid.
     * </pre>
     *
     * <code>string uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    /**
     * <pre>
     * when this is set, filter allocations by job id.
     * empty value will filter allocations don't belong to job. 
     * when job id is set and uuid not set, release all allocations under the job id.
     * </pre>
     *
     * <code>string jobId = 2;</code>
     */
    java.lang.String getJobId();
    /**
     * <pre>
     * when this is set, filter allocations by job id.
     * empty value will filter allocations don't belong to job. 
     * when job id is set and uuid not set, release all allocations under the job id.
     * </pre>
     *
     * <code>string jobId = 2;</code>
     */
    com.google.protobuf.ByteString
        getJobIdBytes();

    /**
     * <pre>
     * Which partition to release, required.
     * </pre>
     *
     * <code>string partitionName = 3;</code>
     */
    java.lang.String getPartitionName();
    /**
     * <pre>
     * Which partition to release, required.
     * </pre>
     *
     * <code>string partitionName = 3;</code>
     */
    com.google.protobuf.ByteString
        getPartitionNameBytes();

    /**
     * <pre>
     * For human-readable
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * For human-readable
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * <pre>
   * Release allocation
   * </pre>
   *
   * Protobuf type {@code si.v1.AllocationReleaseRequest}
   */
  public  static final class AllocationReleaseRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.AllocationReleaseRequest)
      AllocationReleaseRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllocationReleaseRequest.newBuilder() to construct.
    private AllocationReleaseRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllocationReleaseRequest() {
      uuid_ = "";
      jobId_ = "";
      partitionName_ = "";
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AllocationReleaseRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              uuid_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              jobId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              partitionName_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_AllocationReleaseRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_AllocationReleaseRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.AllocationReleaseRequest.class, si.v1.Si.AllocationReleaseRequest.Builder.class);
    }

    public static final int UUID_FIELD_NUMBER = 1;
    private volatile java.lang.Object uuid_;
    /**
     * <pre>
     * optional, when this is set, only release allocation by given uuid.
     * </pre>
     *
     * <code>string uuid = 1;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * optional, when this is set, only release allocation by given uuid.
     * </pre>
     *
     * <code>string uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JOBID_FIELD_NUMBER = 2;
    private volatile java.lang.Object jobId_;
    /**
     * <pre>
     * when this is set, filter allocations by job id.
     * empty value will filter allocations don't belong to job. 
     * when job id is set and uuid not set, release all allocations under the job id.
     * </pre>
     *
     * <code>string jobId = 2;</code>
     */
    public java.lang.String getJobId() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jobId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * when this is set, filter allocations by job id.
     * empty value will filter allocations don't belong to job. 
     * when job id is set and uuid not set, release all allocations under the job id.
     * </pre>
     *
     * <code>string jobId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getJobIdBytes() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jobId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITIONNAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object partitionName_;
    /**
     * <pre>
     * Which partition to release, required.
     * </pre>
     *
     * <code>string partitionName = 3;</code>
     */
    public java.lang.String getPartitionName() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        partitionName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Which partition to release, required.
     * </pre>
     *
     * <code>string partitionName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPartitionNameBytes() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partitionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_FIELD_NUMBER = 4;
    private volatile java.lang.Object message_;
    /**
     * <pre>
     * For human-readable
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * For human-readable
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uuid_);
      }
      if (!getJobIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, jobId_);
      }
      if (!getPartitionNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, partitionName_);
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, message_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uuid_);
      }
      if (!getJobIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, jobId_);
      }
      if (!getPartitionNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, partitionName_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.AllocationReleaseRequest)) {
        return super.equals(obj);
      }
      si.v1.Si.AllocationReleaseRequest other = (si.v1.Si.AllocationReleaseRequest) obj;

      boolean result = true;
      result = result && getUuid()
          .equals(other.getUuid());
      result = result && getJobId()
          .equals(other.getJobId());
      result = result && getPartitionName()
          .equals(other.getPartitionName());
      result = result && getMessage()
          .equals(other.getMessage());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UUID_FIELD_NUMBER;
      hash = (53 * hash) + getUuid().hashCode();
      hash = (37 * hash) + JOBID_FIELD_NUMBER;
      hash = (53 * hash) + getJobId().hashCode();
      hash = (37 * hash) + PARTITIONNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPartitionName().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.AllocationReleaseRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationReleaseRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleaseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationReleaseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleaseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationReleaseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleaseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationReleaseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleaseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationReleaseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleaseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationReleaseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.AllocationReleaseRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Release allocation
     * </pre>
     *
     * Protobuf type {@code si.v1.AllocationReleaseRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.AllocationReleaseRequest)
        si.v1.Si.AllocationReleaseRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_AllocationReleaseRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_AllocationReleaseRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.AllocationReleaseRequest.class, si.v1.Si.AllocationReleaseRequest.Builder.class);
      }

      // Construct using si.v1.Si.AllocationReleaseRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        uuid_ = "";

        jobId_ = "";

        partitionName_ = "";

        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_AllocationReleaseRequest_descriptor;
      }

      public si.v1.Si.AllocationReleaseRequest getDefaultInstanceForType() {
        return si.v1.Si.AllocationReleaseRequest.getDefaultInstance();
      }

      public si.v1.Si.AllocationReleaseRequest build() {
        si.v1.Si.AllocationReleaseRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.AllocationReleaseRequest buildPartial() {
        si.v1.Si.AllocationReleaseRequest result = new si.v1.Si.AllocationReleaseRequest(this);
        result.uuid_ = uuid_;
        result.jobId_ = jobId_;
        result.partitionName_ = partitionName_;
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.AllocationReleaseRequest) {
          return mergeFrom((si.v1.Si.AllocationReleaseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.AllocationReleaseRequest other) {
        if (other == si.v1.Si.AllocationReleaseRequest.getDefaultInstance()) return this;
        if (!other.getUuid().isEmpty()) {
          uuid_ = other.uuid_;
          onChanged();
        }
        if (!other.getJobId().isEmpty()) {
          jobId_ = other.jobId_;
          onChanged();
        }
        if (!other.getPartitionName().isEmpty()) {
          partitionName_ = other.partitionName_;
          onChanged();
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.AllocationReleaseRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.AllocationReleaseRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object uuid_ = "";
      /**
       * <pre>
       * optional, when this is set, only release allocation by given uuid.
       * </pre>
       *
       * <code>string uuid = 1;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * optional, when this is set, only release allocation by given uuid.
       * </pre>
       *
       * <code>string uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * optional, when this is set, only release allocation by given uuid.
       * </pre>
       *
       * <code>string uuid = 1;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional, when this is set, only release allocation by given uuid.
       * </pre>
       *
       * <code>string uuid = 1;</code>
       */
      public Builder clearUuid() {
        
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional, when this is set, only release allocation by given uuid.
       * </pre>
       *
       * <code>string uuid = 1;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuid_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object jobId_ = "";
      /**
       * <pre>
       * when this is set, filter allocations by job id.
       * empty value will filter allocations don't belong to job. 
       * when job id is set and uuid not set, release all allocations under the job id.
       * </pre>
       *
       * <code>string jobId = 2;</code>
       */
      public java.lang.String getJobId() {
        java.lang.Object ref = jobId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jobId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * when this is set, filter allocations by job id.
       * empty value will filter allocations don't belong to job. 
       * when job id is set and uuid not set, release all allocations under the job id.
       * </pre>
       *
       * <code>string jobId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getJobIdBytes() {
        java.lang.Object ref = jobId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jobId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * when this is set, filter allocations by job id.
       * empty value will filter allocations don't belong to job. 
       * when job id is set and uuid not set, release all allocations under the job id.
       * </pre>
       *
       * <code>string jobId = 2;</code>
       */
      public Builder setJobId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jobId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * when this is set, filter allocations by job id.
       * empty value will filter allocations don't belong to job. 
       * when job id is set and uuid not set, release all allocations under the job id.
       * </pre>
       *
       * <code>string jobId = 2;</code>
       */
      public Builder clearJobId() {
        
        jobId_ = getDefaultInstance().getJobId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * when this is set, filter allocations by job id.
       * empty value will filter allocations don't belong to job. 
       * when job id is set and uuid not set, release all allocations under the job id.
       * </pre>
       *
       * <code>string jobId = 2;</code>
       */
      public Builder setJobIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jobId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object partitionName_ = "";
      /**
       * <pre>
       * Which partition to release, required.
       * </pre>
       *
       * <code>string partitionName = 3;</code>
       */
      public java.lang.String getPartitionName() {
        java.lang.Object ref = partitionName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          partitionName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Which partition to release, required.
       * </pre>
       *
       * <code>string partitionName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPartitionNameBytes() {
        java.lang.Object ref = partitionName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partitionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Which partition to release, required.
       * </pre>
       *
       * <code>string partitionName = 3;</code>
       */
      public Builder setPartitionName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        partitionName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Which partition to release, required.
       * </pre>
       *
       * <code>string partitionName = 3;</code>
       */
      public Builder clearPartitionName() {
        
        partitionName_ = getDefaultInstance().getPartitionName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Which partition to release, required.
       * </pre>
       *
       * <code>string partitionName = 3;</code>
       */
      public Builder setPartitionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        partitionName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <pre>
       * For human-readable
       * </pre>
       *
       * <code>string message = 4;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * For human-readable
       * </pre>
       *
       * <code>string message = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * For human-readable
       * </pre>
       *
       * <code>string message = 4;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For human-readable
       * </pre>
       *
       * <code>string message = 4;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For human-readable
       * </pre>
       *
       * <code>string message = 4;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.AllocationReleaseRequest)
    }

    // @@protoc_insertion_point(class_scope:si.v1.AllocationReleaseRequest)
    private static final si.v1.Si.AllocationReleaseRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.AllocationReleaseRequest();
    }

    public static si.v1.Si.AllocationReleaseRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllocationReleaseRequest>
        PARSER = new com.google.protobuf.AbstractParser<AllocationReleaseRequest>() {
      public AllocationReleaseRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllocationReleaseRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AllocationReleaseRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllocationReleaseRequest> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.AllocationReleaseRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllocationAskReleaseRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.AllocationAskReleaseRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * optional, when this is set, only release allocation ask by specified
     * </pre>
     *
     * <code>string allocationkey = 1;</code>
     */
    java.lang.String getAllocationkey();
    /**
     * <pre>
     * optional, when this is set, only release allocation ask by specified
     * </pre>
     *
     * <code>string allocationkey = 1;</code>
     */
    com.google.protobuf.ByteString
        getAllocationkeyBytes();

    /**
     * <pre>
     * when this is set, filter allocation key by job id.
     * empty value will filter allocations don't belong to job. 
     * when job id is set and allocationKey not set, release all allocations key under the job id.
     * </pre>
     *
     * <code>string jobId = 2;</code>
     */
    java.lang.String getJobId();
    /**
     * <pre>
     * when this is set, filter allocation key by job id.
     * empty value will filter allocations don't belong to job. 
     * when job id is set and allocationKey not set, release all allocations key under the job id.
     * </pre>
     *
     * <code>string jobId = 2;</code>
     */
    com.google.protobuf.ByteString
        getJobIdBytes();

    /**
     * <pre>
     * Which partition to release, required.
     * </pre>
     *
     * <code>string partitionName = 3;</code>
     */
    java.lang.String getPartitionName();
    /**
     * <pre>
     * Which partition to release, required.
     * </pre>
     *
     * <code>string partitionName = 3;</code>
     */
    com.google.protobuf.ByteString
        getPartitionNameBytes();

    /**
     * <pre>
     * For human-readable
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * For human-readable
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * <pre>
   * Release allocation
   * </pre>
   *
   * Protobuf type {@code si.v1.AllocationAskReleaseRequest}
   */
  public  static final class AllocationAskReleaseRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.AllocationAskReleaseRequest)
      AllocationAskReleaseRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllocationAskReleaseRequest.newBuilder() to construct.
    private AllocationAskReleaseRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllocationAskReleaseRequest() {
      allocationkey_ = "";
      jobId_ = "";
      partitionName_ = "";
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AllocationAskReleaseRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              allocationkey_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              jobId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              partitionName_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_AllocationAskReleaseRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_AllocationAskReleaseRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.AllocationAskReleaseRequest.class, si.v1.Si.AllocationAskReleaseRequest.Builder.class);
    }

    public static final int ALLOCATIONKEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object allocationkey_;
    /**
     * <pre>
     * optional, when this is set, only release allocation ask by specified
     * </pre>
     *
     * <code>string allocationkey = 1;</code>
     */
    public java.lang.String getAllocationkey() {
      java.lang.Object ref = allocationkey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        allocationkey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * optional, when this is set, only release allocation ask by specified
     * </pre>
     *
     * <code>string allocationkey = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAllocationkeyBytes() {
      java.lang.Object ref = allocationkey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        allocationkey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JOBID_FIELD_NUMBER = 2;
    private volatile java.lang.Object jobId_;
    /**
     * <pre>
     * when this is set, filter allocation key by job id.
     * empty value will filter allocations don't belong to job. 
     * when job id is set and allocationKey not set, release all allocations key under the job id.
     * </pre>
     *
     * <code>string jobId = 2;</code>
     */
    public java.lang.String getJobId() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jobId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * when this is set, filter allocation key by job id.
     * empty value will filter allocations don't belong to job. 
     * when job id is set and allocationKey not set, release all allocations key under the job id.
     * </pre>
     *
     * <code>string jobId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getJobIdBytes() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jobId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITIONNAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object partitionName_;
    /**
     * <pre>
     * Which partition to release, required.
     * </pre>
     *
     * <code>string partitionName = 3;</code>
     */
    public java.lang.String getPartitionName() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        partitionName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Which partition to release, required.
     * </pre>
     *
     * <code>string partitionName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPartitionNameBytes() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partitionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_FIELD_NUMBER = 4;
    private volatile java.lang.Object message_;
    /**
     * <pre>
     * For human-readable
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * For human-readable
     * </pre>
     *
     * <code>string message = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAllocationkeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, allocationkey_);
      }
      if (!getJobIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, jobId_);
      }
      if (!getPartitionNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, partitionName_);
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, message_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAllocationkeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, allocationkey_);
      }
      if (!getJobIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, jobId_);
      }
      if (!getPartitionNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, partitionName_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.AllocationAskReleaseRequest)) {
        return super.equals(obj);
      }
      si.v1.Si.AllocationAskReleaseRequest other = (si.v1.Si.AllocationAskReleaseRequest) obj;

      boolean result = true;
      result = result && getAllocationkey()
          .equals(other.getAllocationkey());
      result = result && getJobId()
          .equals(other.getJobId());
      result = result && getPartitionName()
          .equals(other.getPartitionName());
      result = result && getMessage()
          .equals(other.getMessage());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALLOCATIONKEY_FIELD_NUMBER;
      hash = (53 * hash) + getAllocationkey().hashCode();
      hash = (37 * hash) + JOBID_FIELD_NUMBER;
      hash = (53 * hash) + getJobId().hashCode();
      hash = (37 * hash) + PARTITIONNAME_FIELD_NUMBER;
      hash = (53 * hash) + getPartitionName().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.AllocationAskReleaseRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationAskReleaseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.AllocationAskReleaseRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Release allocation
     * </pre>
     *
     * Protobuf type {@code si.v1.AllocationAskReleaseRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.AllocationAskReleaseRequest)
        si.v1.Si.AllocationAskReleaseRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_AllocationAskReleaseRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_AllocationAskReleaseRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.AllocationAskReleaseRequest.class, si.v1.Si.AllocationAskReleaseRequest.Builder.class);
      }

      // Construct using si.v1.Si.AllocationAskReleaseRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        allocationkey_ = "";

        jobId_ = "";

        partitionName_ = "";

        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_AllocationAskReleaseRequest_descriptor;
      }

      public si.v1.Si.AllocationAskReleaseRequest getDefaultInstanceForType() {
        return si.v1.Si.AllocationAskReleaseRequest.getDefaultInstance();
      }

      public si.v1.Si.AllocationAskReleaseRequest build() {
        si.v1.Si.AllocationAskReleaseRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.AllocationAskReleaseRequest buildPartial() {
        si.v1.Si.AllocationAskReleaseRequest result = new si.v1.Si.AllocationAskReleaseRequest(this);
        result.allocationkey_ = allocationkey_;
        result.jobId_ = jobId_;
        result.partitionName_ = partitionName_;
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.AllocationAskReleaseRequest) {
          return mergeFrom((si.v1.Si.AllocationAskReleaseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.AllocationAskReleaseRequest other) {
        if (other == si.v1.Si.AllocationAskReleaseRequest.getDefaultInstance()) return this;
        if (!other.getAllocationkey().isEmpty()) {
          allocationkey_ = other.allocationkey_;
          onChanged();
        }
        if (!other.getJobId().isEmpty()) {
          jobId_ = other.jobId_;
          onChanged();
        }
        if (!other.getPartitionName().isEmpty()) {
          partitionName_ = other.partitionName_;
          onChanged();
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.AllocationAskReleaseRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.AllocationAskReleaseRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object allocationkey_ = "";
      /**
       * <pre>
       * optional, when this is set, only release allocation ask by specified
       * </pre>
       *
       * <code>string allocationkey = 1;</code>
       */
      public java.lang.String getAllocationkey() {
        java.lang.Object ref = allocationkey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          allocationkey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * optional, when this is set, only release allocation ask by specified
       * </pre>
       *
       * <code>string allocationkey = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAllocationkeyBytes() {
        java.lang.Object ref = allocationkey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          allocationkey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * optional, when this is set, only release allocation ask by specified
       * </pre>
       *
       * <code>string allocationkey = 1;</code>
       */
      public Builder setAllocationkey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        allocationkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional, when this is set, only release allocation ask by specified
       * </pre>
       *
       * <code>string allocationkey = 1;</code>
       */
      public Builder clearAllocationkey() {
        
        allocationkey_ = getDefaultInstance().getAllocationkey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional, when this is set, only release allocation ask by specified
       * </pre>
       *
       * <code>string allocationkey = 1;</code>
       */
      public Builder setAllocationkeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        allocationkey_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object jobId_ = "";
      /**
       * <pre>
       * when this is set, filter allocation key by job id.
       * empty value will filter allocations don't belong to job. 
       * when job id is set and allocationKey not set, release all allocations key under the job id.
       * </pre>
       *
       * <code>string jobId = 2;</code>
       */
      public java.lang.String getJobId() {
        java.lang.Object ref = jobId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jobId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * when this is set, filter allocation key by job id.
       * empty value will filter allocations don't belong to job. 
       * when job id is set and allocationKey not set, release all allocations key under the job id.
       * </pre>
       *
       * <code>string jobId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getJobIdBytes() {
        java.lang.Object ref = jobId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jobId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * when this is set, filter allocation key by job id.
       * empty value will filter allocations don't belong to job. 
       * when job id is set and allocationKey not set, release all allocations key under the job id.
       * </pre>
       *
       * <code>string jobId = 2;</code>
       */
      public Builder setJobId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jobId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * when this is set, filter allocation key by job id.
       * empty value will filter allocations don't belong to job. 
       * when job id is set and allocationKey not set, release all allocations key under the job id.
       * </pre>
       *
       * <code>string jobId = 2;</code>
       */
      public Builder clearJobId() {
        
        jobId_ = getDefaultInstance().getJobId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * when this is set, filter allocation key by job id.
       * empty value will filter allocations don't belong to job. 
       * when job id is set and allocationKey not set, release all allocations key under the job id.
       * </pre>
       *
       * <code>string jobId = 2;</code>
       */
      public Builder setJobIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jobId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object partitionName_ = "";
      /**
       * <pre>
       * Which partition to release, required.
       * </pre>
       *
       * <code>string partitionName = 3;</code>
       */
      public java.lang.String getPartitionName() {
        java.lang.Object ref = partitionName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          partitionName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Which partition to release, required.
       * </pre>
       *
       * <code>string partitionName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPartitionNameBytes() {
        java.lang.Object ref = partitionName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partitionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Which partition to release, required.
       * </pre>
       *
       * <code>string partitionName = 3;</code>
       */
      public Builder setPartitionName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        partitionName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Which partition to release, required.
       * </pre>
       *
       * <code>string partitionName = 3;</code>
       */
      public Builder clearPartitionName() {
        
        partitionName_ = getDefaultInstance().getPartitionName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Which partition to release, required.
       * </pre>
       *
       * <code>string partitionName = 3;</code>
       */
      public Builder setPartitionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        partitionName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <pre>
       * For human-readable
       * </pre>
       *
       * <code>string message = 4;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * For human-readable
       * </pre>
       *
       * <code>string message = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * For human-readable
       * </pre>
       *
       * <code>string message = 4;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For human-readable
       * </pre>
       *
       * <code>string message = 4;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For human-readable
       * </pre>
       *
       * <code>string message = 4;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.AllocationAskReleaseRequest)
    }

    // @@protoc_insertion_point(class_scope:si.v1.AllocationAskReleaseRequest)
    private static final si.v1.Si.AllocationAskReleaseRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.AllocationAskReleaseRequest();
    }

    public static si.v1.Si.AllocationAskReleaseRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllocationAskReleaseRequest>
        PARSER = new com.google.protobuf.AbstractParser<AllocationAskReleaseRequest>() {
      public AllocationAskReleaseRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllocationAskReleaseRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AllocationAskReleaseRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllocationAskReleaseRequest> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.AllocationAskReleaseRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NewNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.NewNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Id of node, it should be identical if same node daemon restarted.
     * </pre>
     *
     * <code>string nodeId = 1;</code>
     */
    java.lang.String getNodeId();
    /**
     * <pre>
     * Id of node, it should be identical if same node daemon restarted.
     * </pre>
     *
     * <code>string nodeId = 1;</code>
     */
    com.google.protobuf.ByteString
        getNodeIdBytes();

    /**
     * <pre>
     * node attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */
    int getAttributesCount();
    /**
     * <pre>
     * node attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */
    boolean containsAttributes(
        java.lang.String key);
    /**
     * Use {@link #getAttributesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getAttributes();
    /**
     * <pre>
     * node attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getAttributesMap();
    /**
     * <pre>
     * node attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    java.lang.String getAttributesOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * node attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    java.lang.String getAttributesOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Schedulable Resource, scheduler may overcommit resource of node depends on available information
     * (such as utilization, priority of each container, etc.)
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    boolean hasSchedulableResource();
    /**
     * <pre>
     * Schedulable Resource, scheduler may overcommit resource of node depends on available information
     * (such as utilization, priority of each container, etc.)
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    si.v1.Si.Resource getSchedulableResource();
    /**
     * <pre>
     * Schedulable Resource, scheduler may overcommit resource of node depends on available information
     * (such as utilization, priority of each container, etc.)
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    si.v1.Si.ResourceOrBuilder getSchedulableResourceOrBuilder();

    /**
     * <pre>
     * Allocated resources, this will be added when node registered to RM
     * (recovery) 
     * </pre>
     *
     * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
     */
    java.util.List<si.v1.Si.Allocation> 
        getExistingAllocationsList();
    /**
     * <pre>
     * Allocated resources, this will be added when node registered to RM
     * (recovery) 
     * </pre>
     *
     * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
     */
    si.v1.Si.Allocation getExistingAllocations(int index);
    /**
     * <pre>
     * Allocated resources, this will be added when node registered to RM
     * (recovery) 
     * </pre>
     *
     * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
     */
    int getExistingAllocationsCount();
    /**
     * <pre>
     * Allocated resources, this will be added when node registered to RM
     * (recovery) 
     * </pre>
     *
     * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
     */
    java.util.List<? extends si.v1.Si.AllocationOrBuilder> 
        getExistingAllocationsOrBuilderList();
    /**
     * <pre>
     * Allocated resources, this will be added when node registered to RM
     * (recovery) 
     * </pre>
     *
     * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
     */
    si.v1.Si.AllocationOrBuilder getExistingAllocationsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code si.v1.NewNodeInfo}
   */
  public  static final class NewNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.NewNodeInfo)
      NewNodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NewNodeInfo.newBuilder() to construct.
    private NewNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NewNodeInfo() {
      nodeId_ = "";
      existingAllocations_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NewNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeId_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                attributes_ = com.google.protobuf.MapField.newMapField(
                    AttributesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              attributes__ = input.readMessage(
                  AttributesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              attributes_.getMutableMap().put(
                  attributes__.getKey(), attributes__.getValue());
              break;
            }
            case 26: {
              si.v1.Si.Resource.Builder subBuilder = null;
              if (schedulableResource_ != null) {
                subBuilder = schedulableResource_.toBuilder();
              }
              schedulableResource_ = input.readMessage(si.v1.Si.Resource.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(schedulableResource_);
                schedulableResource_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                existingAllocations_ = new java.util.ArrayList<si.v1.Si.Allocation>();
                mutable_bitField0_ |= 0x00000008;
              }
              existingAllocations_.add(
                  input.readMessage(si.v1.Si.Allocation.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          existingAllocations_ = java.util.Collections.unmodifiableList(existingAllocations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_NewNodeInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetAttributes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_NewNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.NewNodeInfo.class, si.v1.Si.NewNodeInfo.Builder.class);
    }

    private int bitField0_;
    public static final int NODEID_FIELD_NUMBER = 1;
    private volatile java.lang.Object nodeId_;
    /**
     * <pre>
     * Id of node, it should be identical if same node daemon restarted.
     * </pre>
     *
     * <code>string nodeId = 1;</code>
     */
    public java.lang.String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Id of node, it should be identical if same node daemon restarted.
     * </pre>
     *
     * <code>string nodeId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 2;
    private static final class AttributesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  si.v1.Si.internal_static_si_v1_NewNodeInfo_AttributesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> attributes_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetAttributes() {
      if (attributes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AttributesDefaultEntryHolder.defaultEntry);
      }
      return attributes_;
    }

    public int getAttributesCount() {
      return internalGetAttributes().getMap().size();
    }
    /**
     * <pre>
     * node attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    public boolean containsAttributes(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetAttributes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAttributesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getAttributes() {
      return getAttributesMap();
    }
    /**
     * <pre>
     * node attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getAttributesMap() {
      return internalGetAttributes().getMap();
    }
    /**
     * <pre>
     * node attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    public java.lang.String getAttributesOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAttributes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * node attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    public java.lang.String getAttributesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAttributes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SCHEDULABLERESOURCE_FIELD_NUMBER = 3;
    private si.v1.Si.Resource schedulableResource_;
    /**
     * <pre>
     * Schedulable Resource, scheduler may overcommit resource of node depends on available information
     * (such as utilization, priority of each container, etc.)
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    public boolean hasSchedulableResource() {
      return schedulableResource_ != null;
    }
    /**
     * <pre>
     * Schedulable Resource, scheduler may overcommit resource of node depends on available information
     * (such as utilization, priority of each container, etc.)
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    public si.v1.Si.Resource getSchedulableResource() {
      return schedulableResource_ == null ? si.v1.Si.Resource.getDefaultInstance() : schedulableResource_;
    }
    /**
     * <pre>
     * Schedulable Resource, scheduler may overcommit resource of node depends on available information
     * (such as utilization, priority of each container, etc.)
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    public si.v1.Si.ResourceOrBuilder getSchedulableResourceOrBuilder() {
      return getSchedulableResource();
    }

    public static final int EXISTINGALLOCATIONS_FIELD_NUMBER = 4;
    private java.util.List<si.v1.Si.Allocation> existingAllocations_;
    /**
     * <pre>
     * Allocated resources, this will be added when node registered to RM
     * (recovery) 
     * </pre>
     *
     * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
     */
    public java.util.List<si.v1.Si.Allocation> getExistingAllocationsList() {
      return existingAllocations_;
    }
    /**
     * <pre>
     * Allocated resources, this will be added when node registered to RM
     * (recovery) 
     * </pre>
     *
     * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
     */
    public java.util.List<? extends si.v1.Si.AllocationOrBuilder> 
        getExistingAllocationsOrBuilderList() {
      return existingAllocations_;
    }
    /**
     * <pre>
     * Allocated resources, this will be added when node registered to RM
     * (recovery) 
     * </pre>
     *
     * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
     */
    public int getExistingAllocationsCount() {
      return existingAllocations_.size();
    }
    /**
     * <pre>
     * Allocated resources, this will be added when node registered to RM
     * (recovery) 
     * </pre>
     *
     * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
     */
    public si.v1.Si.Allocation getExistingAllocations(int index) {
      return existingAllocations_.get(index);
    }
    /**
     * <pre>
     * Allocated resources, this will be added when node registered to RM
     * (recovery) 
     * </pre>
     *
     * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
     */
    public si.v1.Si.AllocationOrBuilder getExistingAllocationsOrBuilder(
        int index) {
      return existingAllocations_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAttributes(),
          AttributesDefaultEntryHolder.defaultEntry,
          2);
      if (schedulableResource_ != null) {
        output.writeMessage(3, getSchedulableResource());
      }
      for (int i = 0; i < existingAllocations_.size(); i++) {
        output.writeMessage(4, existingAllocations_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeId_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetAttributes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        attributes__ = AttributesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, attributes__);
      }
      if (schedulableResource_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSchedulableResource());
      }
      for (int i = 0; i < existingAllocations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, existingAllocations_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.NewNodeInfo)) {
        return super.equals(obj);
      }
      si.v1.Si.NewNodeInfo other = (si.v1.Si.NewNodeInfo) obj;

      boolean result = true;
      result = result && getNodeId()
          .equals(other.getNodeId());
      result = result && internalGetAttributes().equals(
          other.internalGetAttributes());
      result = result && (hasSchedulableResource() == other.hasSchedulableResource());
      if (hasSchedulableResource()) {
        result = result && getSchedulableResource()
            .equals(other.getSchedulableResource());
      }
      result = result && getExistingAllocationsList()
          .equals(other.getExistingAllocationsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODEID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId().hashCode();
      if (!internalGetAttributes().getMap().isEmpty()) {
        hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAttributes().hashCode();
      }
      if (hasSchedulableResource()) {
        hash = (37 * hash) + SCHEDULABLERESOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSchedulableResource().hashCode();
      }
      if (getExistingAllocationsCount() > 0) {
        hash = (37 * hash) + EXISTINGALLOCATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getExistingAllocationsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.NewNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.NewNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.NewNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.NewNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.NewNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.NewNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.NewNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.NewNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.NewNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.NewNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.NewNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.NewNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.NewNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.NewNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.NewNodeInfo)
        si.v1.Si.NewNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_NewNodeInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetAttributes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableAttributes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_NewNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.NewNodeInfo.class, si.v1.Si.NewNodeInfo.Builder.class);
      }

      // Construct using si.v1.Si.NewNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getExistingAllocationsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = "";

        internalGetMutableAttributes().clear();
        if (schedulableResourceBuilder_ == null) {
          schedulableResource_ = null;
        } else {
          schedulableResource_ = null;
          schedulableResourceBuilder_ = null;
        }
        if (existingAllocationsBuilder_ == null) {
          existingAllocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          existingAllocationsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_NewNodeInfo_descriptor;
      }

      public si.v1.Si.NewNodeInfo getDefaultInstanceForType() {
        return si.v1.Si.NewNodeInfo.getDefaultInstance();
      }

      public si.v1.Si.NewNodeInfo build() {
        si.v1.Si.NewNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.NewNodeInfo buildPartial() {
        si.v1.Si.NewNodeInfo result = new si.v1.Si.NewNodeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.nodeId_ = nodeId_;
        result.attributes_ = internalGetAttributes();
        result.attributes_.makeImmutable();
        if (schedulableResourceBuilder_ == null) {
          result.schedulableResource_ = schedulableResource_;
        } else {
          result.schedulableResource_ = schedulableResourceBuilder_.build();
        }
        if (existingAllocationsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            existingAllocations_ = java.util.Collections.unmodifiableList(existingAllocations_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.existingAllocations_ = existingAllocations_;
        } else {
          result.existingAllocations_ = existingAllocationsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.NewNodeInfo) {
          return mergeFrom((si.v1.Si.NewNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.NewNodeInfo other) {
        if (other == si.v1.Si.NewNodeInfo.getDefaultInstance()) return this;
        if (!other.getNodeId().isEmpty()) {
          nodeId_ = other.nodeId_;
          onChanged();
        }
        internalGetMutableAttributes().mergeFrom(
            other.internalGetAttributes());
        if (other.hasSchedulableResource()) {
          mergeSchedulableResource(other.getSchedulableResource());
        }
        if (existingAllocationsBuilder_ == null) {
          if (!other.existingAllocations_.isEmpty()) {
            if (existingAllocations_.isEmpty()) {
              existingAllocations_ = other.existingAllocations_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureExistingAllocationsIsMutable();
              existingAllocations_.addAll(other.existingAllocations_);
            }
            onChanged();
          }
        } else {
          if (!other.existingAllocations_.isEmpty()) {
            if (existingAllocationsBuilder_.isEmpty()) {
              existingAllocationsBuilder_.dispose();
              existingAllocationsBuilder_ = null;
              existingAllocations_ = other.existingAllocations_;
              bitField0_ = (bitField0_ & ~0x00000008);
              existingAllocationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExistingAllocationsFieldBuilder() : null;
            } else {
              existingAllocationsBuilder_.addAllMessages(other.existingAllocations_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.NewNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.NewNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object nodeId_ = "";
      /**
       * <pre>
       * Id of node, it should be identical if same node daemon restarted.
       * </pre>
       *
       * <code>string nodeId = 1;</code>
       */
      public java.lang.String getNodeId() {
        java.lang.Object ref = nodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Id of node, it should be identical if same node daemon restarted.
       * </pre>
       *
       * <code>string nodeId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNodeIdBytes() {
        java.lang.Object ref = nodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Id of node, it should be identical if same node daemon restarted.
       * </pre>
       *
       * <code>string nodeId = 1;</code>
       */
      public Builder setNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id of node, it should be identical if same node daemon restarted.
       * </pre>
       *
       * <code>string nodeId = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = getDefaultInstance().getNodeId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id of node, it should be identical if same node daemon restarted.
       * </pre>
       *
       * <code>string nodeId = 1;</code>
       */
      public Builder setNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> attributes_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetAttributes() {
        if (attributes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AttributesDefaultEntryHolder.defaultEntry);
        }
        return attributes_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableAttributes() {
        onChanged();;
        if (attributes_ == null) {
          attributes_ = com.google.protobuf.MapField.newMapField(
              AttributesDefaultEntryHolder.defaultEntry);
        }
        if (!attributes_.isMutable()) {
          attributes_ = attributes_.copy();
        }
        return attributes_;
      }

      public int getAttributesCount() {
        return internalGetAttributes().getMap().size();
      }
      /**
       * <pre>
       * node attributes
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public boolean containsAttributes(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetAttributes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAttributesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getAttributes() {
        return getAttributesMap();
      }
      /**
       * <pre>
       * node attributes
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getAttributesMap() {
        return internalGetAttributes().getMap();
      }
      /**
       * <pre>
       * node attributes
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public java.lang.String getAttributesOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetAttributes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * node attributes
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public java.lang.String getAttributesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetAttributes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAttributes() {
        internalGetMutableAttributes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * node attributes
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public Builder removeAttributes(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAttributes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableAttributes() {
        return internalGetMutableAttributes().getMutableMap();
      }
      /**
       * <pre>
       * node attributes
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */
      public Builder putAttributes(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAttributes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * node attributes
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public Builder putAllAttributes(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableAttributes().getMutableMap()
            .putAll(values);
        return this;
      }

      private si.v1.Si.Resource schedulableResource_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> schedulableResourceBuilder_;
      /**
       * <pre>
       * Schedulable Resource, scheduler may overcommit resource of node depends on available information
       * (such as utilization, priority of each container, etc.)
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public boolean hasSchedulableResource() {
        return schedulableResourceBuilder_ != null || schedulableResource_ != null;
      }
      /**
       * <pre>
       * Schedulable Resource, scheduler may overcommit resource of node depends on available information
       * (such as utilization, priority of each container, etc.)
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public si.v1.Si.Resource getSchedulableResource() {
        if (schedulableResourceBuilder_ == null) {
          return schedulableResource_ == null ? si.v1.Si.Resource.getDefaultInstance() : schedulableResource_;
        } else {
          return schedulableResourceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Schedulable Resource, scheduler may overcommit resource of node depends on available information
       * (such as utilization, priority of each container, etc.)
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public Builder setSchedulableResource(si.v1.Si.Resource value) {
        if (schedulableResourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          schedulableResource_ = value;
          onChanged();
        } else {
          schedulableResourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Schedulable Resource, scheduler may overcommit resource of node depends on available information
       * (such as utilization, priority of each container, etc.)
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public Builder setSchedulableResource(
          si.v1.Si.Resource.Builder builderForValue) {
        if (schedulableResourceBuilder_ == null) {
          schedulableResource_ = builderForValue.build();
          onChanged();
        } else {
          schedulableResourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Schedulable Resource, scheduler may overcommit resource of node depends on available information
       * (such as utilization, priority of each container, etc.)
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public Builder mergeSchedulableResource(si.v1.Si.Resource value) {
        if (schedulableResourceBuilder_ == null) {
          if (schedulableResource_ != null) {
            schedulableResource_ =
              si.v1.Si.Resource.newBuilder(schedulableResource_).mergeFrom(value).buildPartial();
          } else {
            schedulableResource_ = value;
          }
          onChanged();
        } else {
          schedulableResourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Schedulable Resource, scheduler may overcommit resource of node depends on available information
       * (such as utilization, priority of each container, etc.)
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public Builder clearSchedulableResource() {
        if (schedulableResourceBuilder_ == null) {
          schedulableResource_ = null;
          onChanged();
        } else {
          schedulableResource_ = null;
          schedulableResourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Schedulable Resource, scheduler may overcommit resource of node depends on available information
       * (such as utilization, priority of each container, etc.)
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public si.v1.Si.Resource.Builder getSchedulableResourceBuilder() {
        
        onChanged();
        return getSchedulableResourceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Schedulable Resource, scheduler may overcommit resource of node depends on available information
       * (such as utilization, priority of each container, etc.)
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public si.v1.Si.ResourceOrBuilder getSchedulableResourceOrBuilder() {
        if (schedulableResourceBuilder_ != null) {
          return schedulableResourceBuilder_.getMessageOrBuilder();
        } else {
          return schedulableResource_ == null ?
              si.v1.Si.Resource.getDefaultInstance() : schedulableResource_;
        }
      }
      /**
       * <pre>
       * Schedulable Resource, scheduler may overcommit resource of node depends on available information
       * (such as utilization, priority of each container, etc.)
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> 
          getSchedulableResourceFieldBuilder() {
        if (schedulableResourceBuilder_ == null) {
          schedulableResourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder>(
                  getSchedulableResource(),
                  getParentForChildren(),
                  isClean());
          schedulableResource_ = null;
        }
        return schedulableResourceBuilder_;
      }

      private java.util.List<si.v1.Si.Allocation> existingAllocations_ =
        java.util.Collections.emptyList();
      private void ensureExistingAllocationsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          existingAllocations_ = new java.util.ArrayList<si.v1.Si.Allocation>(existingAllocations_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.Allocation, si.v1.Si.Allocation.Builder, si.v1.Si.AllocationOrBuilder> existingAllocationsBuilder_;

      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public java.util.List<si.v1.Si.Allocation> getExistingAllocationsList() {
        if (existingAllocationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(existingAllocations_);
        } else {
          return existingAllocationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public int getExistingAllocationsCount() {
        if (existingAllocationsBuilder_ == null) {
          return existingAllocations_.size();
        } else {
          return existingAllocationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public si.v1.Si.Allocation getExistingAllocations(int index) {
        if (existingAllocationsBuilder_ == null) {
          return existingAllocations_.get(index);
        } else {
          return existingAllocationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public Builder setExistingAllocations(
          int index, si.v1.Si.Allocation value) {
        if (existingAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExistingAllocationsIsMutable();
          existingAllocations_.set(index, value);
          onChanged();
        } else {
          existingAllocationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public Builder setExistingAllocations(
          int index, si.v1.Si.Allocation.Builder builderForValue) {
        if (existingAllocationsBuilder_ == null) {
          ensureExistingAllocationsIsMutable();
          existingAllocations_.set(index, builderForValue.build());
          onChanged();
        } else {
          existingAllocationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public Builder addExistingAllocations(si.v1.Si.Allocation value) {
        if (existingAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExistingAllocationsIsMutable();
          existingAllocations_.add(value);
          onChanged();
        } else {
          existingAllocationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public Builder addExistingAllocations(
          int index, si.v1.Si.Allocation value) {
        if (existingAllocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExistingAllocationsIsMutable();
          existingAllocations_.add(index, value);
          onChanged();
        } else {
          existingAllocationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public Builder addExistingAllocations(
          si.v1.Si.Allocation.Builder builderForValue) {
        if (existingAllocationsBuilder_ == null) {
          ensureExistingAllocationsIsMutable();
          existingAllocations_.add(builderForValue.build());
          onChanged();
        } else {
          existingAllocationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public Builder addExistingAllocations(
          int index, si.v1.Si.Allocation.Builder builderForValue) {
        if (existingAllocationsBuilder_ == null) {
          ensureExistingAllocationsIsMutable();
          existingAllocations_.add(index, builderForValue.build());
          onChanged();
        } else {
          existingAllocationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public Builder addAllExistingAllocations(
          java.lang.Iterable<? extends si.v1.Si.Allocation> values) {
        if (existingAllocationsBuilder_ == null) {
          ensureExistingAllocationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, existingAllocations_);
          onChanged();
        } else {
          existingAllocationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public Builder clearExistingAllocations() {
        if (existingAllocationsBuilder_ == null) {
          existingAllocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          existingAllocationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public Builder removeExistingAllocations(int index) {
        if (existingAllocationsBuilder_ == null) {
          ensureExistingAllocationsIsMutable();
          existingAllocations_.remove(index);
          onChanged();
        } else {
          existingAllocationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public si.v1.Si.Allocation.Builder getExistingAllocationsBuilder(
          int index) {
        return getExistingAllocationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public si.v1.Si.AllocationOrBuilder getExistingAllocationsOrBuilder(
          int index) {
        if (existingAllocationsBuilder_ == null) {
          return existingAllocations_.get(index);  } else {
          return existingAllocationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public java.util.List<? extends si.v1.Si.AllocationOrBuilder> 
           getExistingAllocationsOrBuilderList() {
        if (existingAllocationsBuilder_ != null) {
          return existingAllocationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(existingAllocations_);
        }
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public si.v1.Si.Allocation.Builder addExistingAllocationsBuilder() {
        return getExistingAllocationsFieldBuilder().addBuilder(
            si.v1.Si.Allocation.getDefaultInstance());
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public si.v1.Si.Allocation.Builder addExistingAllocationsBuilder(
          int index) {
        return getExistingAllocationsFieldBuilder().addBuilder(
            index, si.v1.Si.Allocation.getDefaultInstance());
      }
      /**
       * <pre>
       * Allocated resources, this will be added when node registered to RM
       * (recovery) 
       * </pre>
       *
       * <code>repeated .si.v1.Allocation existingAllocations = 4;</code>
       */
      public java.util.List<si.v1.Si.Allocation.Builder> 
           getExistingAllocationsBuilderList() {
        return getExistingAllocationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          si.v1.Si.Allocation, si.v1.Si.Allocation.Builder, si.v1.Si.AllocationOrBuilder> 
          getExistingAllocationsFieldBuilder() {
        if (existingAllocationsBuilder_ == null) {
          existingAllocationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              si.v1.Si.Allocation, si.v1.Si.Allocation.Builder, si.v1.Si.AllocationOrBuilder>(
                  existingAllocations_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          existingAllocations_ = null;
        }
        return existingAllocationsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.NewNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:si.v1.NewNodeInfo)
    private static final si.v1.Si.NewNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.NewNodeInfo();
    }

    public static si.v1.Si.NewNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NewNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<NewNodeInfo>() {
      public NewNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NewNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NewNodeInfo> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.NewNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.UpdateNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Id of node
     * </pre>
     *
     * <code>string nodeId = 1;</code>
     */
    java.lang.String getNodeId();
    /**
     * <pre>
     * Id of node
     * </pre>
     *
     * <code>string nodeId = 1;</code>
     */
    com.google.protobuf.ByteString
        getNodeIdBytes();

    /**
     * <pre>
     * New attributes of node, which will replace previously reported attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */
    int getAttributesCount();
    /**
     * <pre>
     * New attributes of node, which will replace previously reported attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */
    boolean containsAttributes(
        java.lang.String key);
    /**
     * Use {@link #getAttributesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getAttributes();
    /**
     * <pre>
     * New attributes of node, which will replace previously reported attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getAttributesMap();
    /**
     * <pre>
     * New attributes of node, which will replace previously reported attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    java.lang.String getAttributesOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * New attributes of node, which will replace previously reported attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    java.lang.String getAttributesOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * new schedulable resource, scheduler may preempt allocations on the
     * node or schedule more allocations accordingly.
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    boolean hasSchedulableResource();
    /**
     * <pre>
     * new schedulable resource, scheduler may preempt allocations on the
     * node or schedule more allocations accordingly.
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    si.v1.Si.Resource getSchedulableResource();
    /**
     * <pre>
     * new schedulable resource, scheduler may preempt allocations on the
     * node or schedule more allocations accordingly.
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    si.v1.Si.ResourceOrBuilder getSchedulableResourceOrBuilder();

    /**
     * <code>.si.v1.UpdateNodeInfo.ActionFromRM action = 4;</code>
     */
    int getActionValue();
    /**
     * <code>.si.v1.UpdateNodeInfo.ActionFromRM action = 4;</code>
     */
    si.v1.Si.UpdateNodeInfo.ActionFromRM getAction();
  }
  /**
   * Protobuf type {@code si.v1.UpdateNodeInfo}
   */
  public  static final class UpdateNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.UpdateNodeInfo)
      UpdateNodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdateNodeInfo.newBuilder() to construct.
    private UpdateNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateNodeInfo() {
      nodeId_ = "";
      action_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeId_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                attributes_ = com.google.protobuf.MapField.newMapField(
                    AttributesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              attributes__ = input.readMessage(
                  AttributesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              attributes_.getMutableMap().put(
                  attributes__.getKey(), attributes__.getValue());
              break;
            }
            case 26: {
              si.v1.Si.Resource.Builder subBuilder = null;
              if (schedulableResource_ != null) {
                subBuilder = schedulableResource_.toBuilder();
              }
              schedulableResource_ = input.readMessage(si.v1.Si.Resource.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(schedulableResource_);
                schedulableResource_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              action_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_UpdateNodeInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetAttributes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_UpdateNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.UpdateNodeInfo.class, si.v1.Si.UpdateNodeInfo.Builder.class);
    }

    /**
     * <pre>
     * Action from RM
     * </pre>
     *
     * Protobuf enum {@code si.v1.UpdateNodeInfo.ActionFromRM}
     */
    public enum ActionFromRM
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Do not allocate new allocations on the node.
       * </pre>
       *
       * <code>DRAIN_NODE = 0;</code>
       */
      DRAIN_NODE(0),
      /**
       * <pre>
       * Decomission node, it will immediately stop allocations on the same
       * node and move the node from schedulable lists.
       * </pre>
       *
       * <code>DECOMISSION = 1;</code>
       */
      DECOMISSION(1),
      /**
       * <pre>
       * From Draining state to SCHEDULABLE state.
       * If node is not in draining state, error will be thrown
       * </pre>
       *
       * <code>DRAIN_TO_SCHEDULABLE = 2;</code>
       */
      DRAIN_TO_SCHEDULABLE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Do not allocate new allocations on the node.
       * </pre>
       *
       * <code>DRAIN_NODE = 0;</code>
       */
      public static final int DRAIN_NODE_VALUE = 0;
      /**
       * <pre>
       * Decomission node, it will immediately stop allocations on the same
       * node and move the node from schedulable lists.
       * </pre>
       *
       * <code>DECOMISSION = 1;</code>
       */
      public static final int DECOMISSION_VALUE = 1;
      /**
       * <pre>
       * From Draining state to SCHEDULABLE state.
       * If node is not in draining state, error will be thrown
       * </pre>
       *
       * <code>DRAIN_TO_SCHEDULABLE = 2;</code>
       */
      public static final int DRAIN_TO_SCHEDULABLE_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ActionFromRM valueOf(int value) {
        return forNumber(value);
      }

      public static ActionFromRM forNumber(int value) {
        switch (value) {
          case 0: return DRAIN_NODE;
          case 1: return DECOMISSION;
          case 2: return DRAIN_TO_SCHEDULABLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ActionFromRM>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ActionFromRM> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ActionFromRM>() {
              public ActionFromRM findValueByNumber(int number) {
                return ActionFromRM.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return si.v1.Si.UpdateNodeInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final ActionFromRM[] VALUES = values();

      public static ActionFromRM valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ActionFromRM(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:si.v1.UpdateNodeInfo.ActionFromRM)
    }

    private int bitField0_;
    public static final int NODEID_FIELD_NUMBER = 1;
    private volatile java.lang.Object nodeId_;
    /**
     * <pre>
     * Id of node
     * </pre>
     *
     * <code>string nodeId = 1;</code>
     */
    public java.lang.String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Id of node
     * </pre>
     *
     * <code>string nodeId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 2;
    private static final class AttributesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  si.v1.Si.internal_static_si_v1_UpdateNodeInfo_AttributesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> attributes_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetAttributes() {
      if (attributes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AttributesDefaultEntryHolder.defaultEntry);
      }
      return attributes_;
    }

    public int getAttributesCount() {
      return internalGetAttributes().getMap().size();
    }
    /**
     * <pre>
     * New attributes of node, which will replace previously reported attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    public boolean containsAttributes(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetAttributes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAttributesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getAttributes() {
      return getAttributesMap();
    }
    /**
     * <pre>
     * New attributes of node, which will replace previously reported attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getAttributesMap() {
      return internalGetAttributes().getMap();
    }
    /**
     * <pre>
     * New attributes of node, which will replace previously reported attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    public java.lang.String getAttributesOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAttributes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * New attributes of node, which will replace previously reported attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 2;</code>
     */

    public java.lang.String getAttributesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAttributes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SCHEDULABLERESOURCE_FIELD_NUMBER = 3;
    private si.v1.Si.Resource schedulableResource_;
    /**
     * <pre>
     * new schedulable resource, scheduler may preempt allocations on the
     * node or schedule more allocations accordingly.
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    public boolean hasSchedulableResource() {
      return schedulableResource_ != null;
    }
    /**
     * <pre>
     * new schedulable resource, scheduler may preempt allocations on the
     * node or schedule more allocations accordingly.
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    public si.v1.Si.Resource getSchedulableResource() {
      return schedulableResource_ == null ? si.v1.Si.Resource.getDefaultInstance() : schedulableResource_;
    }
    /**
     * <pre>
     * new schedulable resource, scheduler may preempt allocations on the
     * node or schedule more allocations accordingly.
     * </pre>
     *
     * <code>.si.v1.Resource schedulableResource = 3;</code>
     */
    public si.v1.Si.ResourceOrBuilder getSchedulableResourceOrBuilder() {
      return getSchedulableResource();
    }

    public static final int ACTION_FIELD_NUMBER = 4;
    private int action_;
    /**
     * <code>.si.v1.UpdateNodeInfo.ActionFromRM action = 4;</code>
     */
    public int getActionValue() {
      return action_;
    }
    /**
     * <code>.si.v1.UpdateNodeInfo.ActionFromRM action = 4;</code>
     */
    public si.v1.Si.UpdateNodeInfo.ActionFromRM getAction() {
      si.v1.Si.UpdateNodeInfo.ActionFromRM result = si.v1.Si.UpdateNodeInfo.ActionFromRM.valueOf(action_);
      return result == null ? si.v1.Si.UpdateNodeInfo.ActionFromRM.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAttributes(),
          AttributesDefaultEntryHolder.defaultEntry,
          2);
      if (schedulableResource_ != null) {
        output.writeMessage(3, getSchedulableResource());
      }
      if (action_ != si.v1.Si.UpdateNodeInfo.ActionFromRM.DRAIN_NODE.getNumber()) {
        output.writeEnum(4, action_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeId_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetAttributes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        attributes__ = AttributesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, attributes__);
      }
      if (schedulableResource_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSchedulableResource());
      }
      if (action_ != si.v1.Si.UpdateNodeInfo.ActionFromRM.DRAIN_NODE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, action_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.UpdateNodeInfo)) {
        return super.equals(obj);
      }
      si.v1.Si.UpdateNodeInfo other = (si.v1.Si.UpdateNodeInfo) obj;

      boolean result = true;
      result = result && getNodeId()
          .equals(other.getNodeId());
      result = result && internalGetAttributes().equals(
          other.internalGetAttributes());
      result = result && (hasSchedulableResource() == other.hasSchedulableResource());
      if (hasSchedulableResource()) {
        result = result && getSchedulableResource()
            .equals(other.getSchedulableResource());
      }
      result = result && action_ == other.action_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODEID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId().hashCode();
      if (!internalGetAttributes().getMap().isEmpty()) {
        hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAttributes().hashCode();
      }
      if (hasSchedulableResource()) {
        hash = (37 * hash) + SCHEDULABLERESOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSchedulableResource().hashCode();
      }
      hash = (37 * hash) + ACTION_FIELD_NUMBER;
      hash = (53 * hash) + action_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.UpdateNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UpdateNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UpdateNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UpdateNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UpdateNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UpdateNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UpdateNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.UpdateNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.UpdateNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.UpdateNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.UpdateNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.UpdateNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.UpdateNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.UpdateNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.UpdateNodeInfo)
        si.v1.Si.UpdateNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_UpdateNodeInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetAttributes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableAttributes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_UpdateNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.UpdateNodeInfo.class, si.v1.Si.UpdateNodeInfo.Builder.class);
      }

      // Construct using si.v1.Si.UpdateNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = "";

        internalGetMutableAttributes().clear();
        if (schedulableResourceBuilder_ == null) {
          schedulableResource_ = null;
        } else {
          schedulableResource_ = null;
          schedulableResourceBuilder_ = null;
        }
        action_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_UpdateNodeInfo_descriptor;
      }

      public si.v1.Si.UpdateNodeInfo getDefaultInstanceForType() {
        return si.v1.Si.UpdateNodeInfo.getDefaultInstance();
      }

      public si.v1.Si.UpdateNodeInfo build() {
        si.v1.Si.UpdateNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.UpdateNodeInfo buildPartial() {
        si.v1.Si.UpdateNodeInfo result = new si.v1.Si.UpdateNodeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.nodeId_ = nodeId_;
        result.attributes_ = internalGetAttributes();
        result.attributes_.makeImmutable();
        if (schedulableResourceBuilder_ == null) {
          result.schedulableResource_ = schedulableResource_;
        } else {
          result.schedulableResource_ = schedulableResourceBuilder_.build();
        }
        result.action_ = action_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.UpdateNodeInfo) {
          return mergeFrom((si.v1.Si.UpdateNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.UpdateNodeInfo other) {
        if (other == si.v1.Si.UpdateNodeInfo.getDefaultInstance()) return this;
        if (!other.getNodeId().isEmpty()) {
          nodeId_ = other.nodeId_;
          onChanged();
        }
        internalGetMutableAttributes().mergeFrom(
            other.internalGetAttributes());
        if (other.hasSchedulableResource()) {
          mergeSchedulableResource(other.getSchedulableResource());
        }
        if (other.action_ != 0) {
          setActionValue(other.getActionValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.UpdateNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.UpdateNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object nodeId_ = "";
      /**
       * <pre>
       * Id of node
       * </pre>
       *
       * <code>string nodeId = 1;</code>
       */
      public java.lang.String getNodeId() {
        java.lang.Object ref = nodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Id of node
       * </pre>
       *
       * <code>string nodeId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNodeIdBytes() {
        java.lang.Object ref = nodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Id of node
       * </pre>
       *
       * <code>string nodeId = 1;</code>
       */
      public Builder setNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id of node
       * </pre>
       *
       * <code>string nodeId = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = getDefaultInstance().getNodeId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id of node
       * </pre>
       *
       * <code>string nodeId = 1;</code>
       */
      public Builder setNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> attributes_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetAttributes() {
        if (attributes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AttributesDefaultEntryHolder.defaultEntry);
        }
        return attributes_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableAttributes() {
        onChanged();;
        if (attributes_ == null) {
          attributes_ = com.google.protobuf.MapField.newMapField(
              AttributesDefaultEntryHolder.defaultEntry);
        }
        if (!attributes_.isMutable()) {
          attributes_ = attributes_.copy();
        }
        return attributes_;
      }

      public int getAttributesCount() {
        return internalGetAttributes().getMap().size();
      }
      /**
       * <pre>
       * New attributes of node, which will replace previously reported attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public boolean containsAttributes(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetAttributes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAttributesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getAttributes() {
        return getAttributesMap();
      }
      /**
       * <pre>
       * New attributes of node, which will replace previously reported attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getAttributesMap() {
        return internalGetAttributes().getMap();
      }
      /**
       * <pre>
       * New attributes of node, which will replace previously reported attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public java.lang.String getAttributesOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetAttributes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * New attributes of node, which will replace previously reported attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public java.lang.String getAttributesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetAttributes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAttributes() {
        internalGetMutableAttributes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * New attributes of node, which will replace previously reported attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public Builder removeAttributes(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAttributes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableAttributes() {
        return internalGetMutableAttributes().getMutableMap();
      }
      /**
       * <pre>
       * New attributes of node, which will replace previously reported attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */
      public Builder putAttributes(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAttributes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * New attributes of node, which will replace previously reported attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; attributes = 2;</code>
       */

      public Builder putAllAttributes(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableAttributes().getMutableMap()
            .putAll(values);
        return this;
      }

      private si.v1.Si.Resource schedulableResource_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> schedulableResourceBuilder_;
      /**
       * <pre>
       * new schedulable resource, scheduler may preempt allocations on the
       * node or schedule more allocations accordingly.
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public boolean hasSchedulableResource() {
        return schedulableResourceBuilder_ != null || schedulableResource_ != null;
      }
      /**
       * <pre>
       * new schedulable resource, scheduler may preempt allocations on the
       * node or schedule more allocations accordingly.
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public si.v1.Si.Resource getSchedulableResource() {
        if (schedulableResourceBuilder_ == null) {
          return schedulableResource_ == null ? si.v1.Si.Resource.getDefaultInstance() : schedulableResource_;
        } else {
          return schedulableResourceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * new schedulable resource, scheduler may preempt allocations on the
       * node or schedule more allocations accordingly.
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public Builder setSchedulableResource(si.v1.Si.Resource value) {
        if (schedulableResourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          schedulableResource_ = value;
          onChanged();
        } else {
          schedulableResourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * new schedulable resource, scheduler may preempt allocations on the
       * node or schedule more allocations accordingly.
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public Builder setSchedulableResource(
          si.v1.Si.Resource.Builder builderForValue) {
        if (schedulableResourceBuilder_ == null) {
          schedulableResource_ = builderForValue.build();
          onChanged();
        } else {
          schedulableResourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * new schedulable resource, scheduler may preempt allocations on the
       * node or schedule more allocations accordingly.
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public Builder mergeSchedulableResource(si.v1.Si.Resource value) {
        if (schedulableResourceBuilder_ == null) {
          if (schedulableResource_ != null) {
            schedulableResource_ =
              si.v1.Si.Resource.newBuilder(schedulableResource_).mergeFrom(value).buildPartial();
          } else {
            schedulableResource_ = value;
          }
          onChanged();
        } else {
          schedulableResourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * new schedulable resource, scheduler may preempt allocations on the
       * node or schedule more allocations accordingly.
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public Builder clearSchedulableResource() {
        if (schedulableResourceBuilder_ == null) {
          schedulableResource_ = null;
          onChanged();
        } else {
          schedulableResource_ = null;
          schedulableResourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * new schedulable resource, scheduler may preempt allocations on the
       * node or schedule more allocations accordingly.
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public si.v1.Si.Resource.Builder getSchedulableResourceBuilder() {
        
        onChanged();
        return getSchedulableResourceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * new schedulable resource, scheduler may preempt allocations on the
       * node or schedule more allocations accordingly.
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      public si.v1.Si.ResourceOrBuilder getSchedulableResourceOrBuilder() {
        if (schedulableResourceBuilder_ != null) {
          return schedulableResourceBuilder_.getMessageOrBuilder();
        } else {
          return schedulableResource_ == null ?
              si.v1.Si.Resource.getDefaultInstance() : schedulableResource_;
        }
      }
      /**
       * <pre>
       * new schedulable resource, scheduler may preempt allocations on the
       * node or schedule more allocations accordingly.
       * </pre>
       *
       * <code>.si.v1.Resource schedulableResource = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> 
          getSchedulableResourceFieldBuilder() {
        if (schedulableResourceBuilder_ == null) {
          schedulableResourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder>(
                  getSchedulableResource(),
                  getParentForChildren(),
                  isClean());
          schedulableResource_ = null;
        }
        return schedulableResourceBuilder_;
      }

      private int action_ = 0;
      /**
       * <code>.si.v1.UpdateNodeInfo.ActionFromRM action = 4;</code>
       */
      public int getActionValue() {
        return action_;
      }
      /**
       * <code>.si.v1.UpdateNodeInfo.ActionFromRM action = 4;</code>
       */
      public Builder setActionValue(int value) {
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.si.v1.UpdateNodeInfo.ActionFromRM action = 4;</code>
       */
      public si.v1.Si.UpdateNodeInfo.ActionFromRM getAction() {
        si.v1.Si.UpdateNodeInfo.ActionFromRM result = si.v1.Si.UpdateNodeInfo.ActionFromRM.valueOf(action_);
        return result == null ? si.v1.Si.UpdateNodeInfo.ActionFromRM.UNRECOGNIZED : result;
      }
      /**
       * <code>.si.v1.UpdateNodeInfo.ActionFromRM action = 4;</code>
       */
      public Builder setAction(si.v1.Si.UpdateNodeInfo.ActionFromRM value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        action_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.si.v1.UpdateNodeInfo.ActionFromRM action = 4;</code>
       */
      public Builder clearAction() {
        
        action_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.UpdateNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:si.v1.UpdateNodeInfo)
    private static final si.v1.Si.UpdateNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.UpdateNodeInfo();
    }

    public static si.v1.Si.UpdateNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<UpdateNodeInfo>() {
      public UpdateNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateNodeInfo> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.UpdateNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UtilizationReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.UtilizationReport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * it could be either node id or allocation uuid.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * it could be either node id or allocation uuid.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Actual used resource
     * </pre>
     *
     * <code>.si.v1.Resource actualUsedResource = 2;</code>
     */
    boolean hasActualUsedResource();
    /**
     * <pre>
     * Actual used resource
     * </pre>
     *
     * <code>.si.v1.Resource actualUsedResource = 2;</code>
     */
    si.v1.Si.Resource getActualUsedResource();
    /**
     * <pre>
     * Actual used resource
     * </pre>
     *
     * <code>.si.v1.Resource actualUsedResource = 2;</code>
     */
    si.v1.Si.ResourceOrBuilder getActualUsedResourceOrBuilder();
  }
  /**
   * Protobuf type {@code si.v1.UtilizationReport}
   */
  public  static final class UtilizationReport extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.UtilizationReport)
      UtilizationReportOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UtilizationReport.newBuilder() to construct.
    private UtilizationReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UtilizationReport() {
      id_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UtilizationReport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              si.v1.Si.Resource.Builder subBuilder = null;
              if (actualUsedResource_ != null) {
                subBuilder = actualUsedResource_.toBuilder();
              }
              actualUsedResource_ = input.readMessage(si.v1.Si.Resource.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(actualUsedResource_);
                actualUsedResource_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_UtilizationReport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_UtilizationReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.UtilizationReport.class, si.v1.Si.UtilizationReport.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * it could be either node id or allocation uuid.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * it could be either node id or allocation uuid.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTUALUSEDRESOURCE_FIELD_NUMBER = 2;
    private si.v1.Si.Resource actualUsedResource_;
    /**
     * <pre>
     * Actual used resource
     * </pre>
     *
     * <code>.si.v1.Resource actualUsedResource = 2;</code>
     */
    public boolean hasActualUsedResource() {
      return actualUsedResource_ != null;
    }
    /**
     * <pre>
     * Actual used resource
     * </pre>
     *
     * <code>.si.v1.Resource actualUsedResource = 2;</code>
     */
    public si.v1.Si.Resource getActualUsedResource() {
      return actualUsedResource_ == null ? si.v1.Si.Resource.getDefaultInstance() : actualUsedResource_;
    }
    /**
     * <pre>
     * Actual used resource
     * </pre>
     *
     * <code>.si.v1.Resource actualUsedResource = 2;</code>
     */
    public si.v1.Si.ResourceOrBuilder getActualUsedResourceOrBuilder() {
      return getActualUsedResource();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (actualUsedResource_ != null) {
        output.writeMessage(2, getActualUsedResource());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (actualUsedResource_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getActualUsedResource());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.UtilizationReport)) {
        return super.equals(obj);
      }
      si.v1.Si.UtilizationReport other = (si.v1.Si.UtilizationReport) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && (hasActualUsedResource() == other.hasActualUsedResource());
      if (hasActualUsedResource()) {
        result = result && getActualUsedResource()
            .equals(other.getActualUsedResource());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasActualUsedResource()) {
        hash = (37 * hash) + ACTUALUSEDRESOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getActualUsedResource().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.UtilizationReport parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UtilizationReport parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UtilizationReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UtilizationReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UtilizationReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.UtilizationReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.UtilizationReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.UtilizationReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.UtilizationReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.UtilizationReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.UtilizationReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.UtilizationReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.UtilizationReport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.UtilizationReport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.UtilizationReport)
        si.v1.Si.UtilizationReportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_UtilizationReport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_UtilizationReport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.UtilizationReport.class, si.v1.Si.UtilizationReport.Builder.class);
      }

      // Construct using si.v1.Si.UtilizationReport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        if (actualUsedResourceBuilder_ == null) {
          actualUsedResource_ = null;
        } else {
          actualUsedResource_ = null;
          actualUsedResourceBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_UtilizationReport_descriptor;
      }

      public si.v1.Si.UtilizationReport getDefaultInstanceForType() {
        return si.v1.Si.UtilizationReport.getDefaultInstance();
      }

      public si.v1.Si.UtilizationReport build() {
        si.v1.Si.UtilizationReport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.UtilizationReport buildPartial() {
        si.v1.Si.UtilizationReport result = new si.v1.Si.UtilizationReport(this);
        result.id_ = id_;
        if (actualUsedResourceBuilder_ == null) {
          result.actualUsedResource_ = actualUsedResource_;
        } else {
          result.actualUsedResource_ = actualUsedResourceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.UtilizationReport) {
          return mergeFrom((si.v1.Si.UtilizationReport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.UtilizationReport other) {
        if (other == si.v1.Si.UtilizationReport.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.hasActualUsedResource()) {
          mergeActualUsedResource(other.getActualUsedResource());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.UtilizationReport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.UtilizationReport) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * it could be either node id or allocation uuid.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * it could be either node id or allocation uuid.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * it could be either node id or allocation uuid.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * it could be either node id or allocation uuid.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * it could be either node id or allocation uuid.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private si.v1.Si.Resource actualUsedResource_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> actualUsedResourceBuilder_;
      /**
       * <pre>
       * Actual used resource
       * </pre>
       *
       * <code>.si.v1.Resource actualUsedResource = 2;</code>
       */
      public boolean hasActualUsedResource() {
        return actualUsedResourceBuilder_ != null || actualUsedResource_ != null;
      }
      /**
       * <pre>
       * Actual used resource
       * </pre>
       *
       * <code>.si.v1.Resource actualUsedResource = 2;</code>
       */
      public si.v1.Si.Resource getActualUsedResource() {
        if (actualUsedResourceBuilder_ == null) {
          return actualUsedResource_ == null ? si.v1.Si.Resource.getDefaultInstance() : actualUsedResource_;
        } else {
          return actualUsedResourceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Actual used resource
       * </pre>
       *
       * <code>.si.v1.Resource actualUsedResource = 2;</code>
       */
      public Builder setActualUsedResource(si.v1.Si.Resource value) {
        if (actualUsedResourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actualUsedResource_ = value;
          onChanged();
        } else {
          actualUsedResourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Actual used resource
       * </pre>
       *
       * <code>.si.v1.Resource actualUsedResource = 2;</code>
       */
      public Builder setActualUsedResource(
          si.v1.Si.Resource.Builder builderForValue) {
        if (actualUsedResourceBuilder_ == null) {
          actualUsedResource_ = builderForValue.build();
          onChanged();
        } else {
          actualUsedResourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Actual used resource
       * </pre>
       *
       * <code>.si.v1.Resource actualUsedResource = 2;</code>
       */
      public Builder mergeActualUsedResource(si.v1.Si.Resource value) {
        if (actualUsedResourceBuilder_ == null) {
          if (actualUsedResource_ != null) {
            actualUsedResource_ =
              si.v1.Si.Resource.newBuilder(actualUsedResource_).mergeFrom(value).buildPartial();
          } else {
            actualUsedResource_ = value;
          }
          onChanged();
        } else {
          actualUsedResourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Actual used resource
       * </pre>
       *
       * <code>.si.v1.Resource actualUsedResource = 2;</code>
       */
      public Builder clearActualUsedResource() {
        if (actualUsedResourceBuilder_ == null) {
          actualUsedResource_ = null;
          onChanged();
        } else {
          actualUsedResource_ = null;
          actualUsedResourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Actual used resource
       * </pre>
       *
       * <code>.si.v1.Resource actualUsedResource = 2;</code>
       */
      public si.v1.Si.Resource.Builder getActualUsedResourceBuilder() {
        
        onChanged();
        return getActualUsedResourceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Actual used resource
       * </pre>
       *
       * <code>.si.v1.Resource actualUsedResource = 2;</code>
       */
      public si.v1.Si.ResourceOrBuilder getActualUsedResourceOrBuilder() {
        if (actualUsedResourceBuilder_ != null) {
          return actualUsedResourceBuilder_.getMessageOrBuilder();
        } else {
          return actualUsedResource_ == null ?
              si.v1.Si.Resource.getDefaultInstance() : actualUsedResource_;
        }
      }
      /**
       * <pre>
       * Actual used resource
       * </pre>
       *
       * <code>.si.v1.Resource actualUsedResource = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> 
          getActualUsedResourceFieldBuilder() {
        if (actualUsedResourceBuilder_ == null) {
          actualUsedResourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder>(
                  getActualUsedResource(),
                  getParentForChildren(),
                  isClean());
          actualUsedResource_ = null;
        }
        return actualUsedResourceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.UtilizationReport)
    }

    // @@protoc_insertion_point(class_scope:si.v1.UtilizationReport)
    private static final si.v1.Si.UtilizationReport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.UtilizationReport();
    }

    public static si.v1.Si.UtilizationReport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UtilizationReport>
        PARSER = new com.google.protobuf.AbstractParser<UtilizationReport>() {
      public UtilizationReport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UtilizationReport(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UtilizationReport> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UtilizationReport> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.UtilizationReport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.Allocation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * AllocationKey from AllocationAsk
     * </pre>
     *
     * <code>string allocationKey = 1;</code>
     */
    java.lang.String getAllocationKey();
    /**
     * <pre>
     * AllocationKey from AllocationAsk
     * </pre>
     *
     * <code>string allocationKey = 1;</code>
     */
    com.google.protobuf.ByteString
        getAllocationKeyBytes();

    /**
     * <pre>
     * Allocation tags from AllocationAsk
     * </pre>
     *
     * <code>map&lt;string, string&gt; allocationTags = 2;</code>
     */
    int getAllocationTagsCount();
    /**
     * <pre>
     * Allocation tags from AllocationAsk
     * </pre>
     *
     * <code>map&lt;string, string&gt; allocationTags = 2;</code>
     */
    boolean containsAllocationTags(
        java.lang.String key);
    /**
     * Use {@link #getAllocationTagsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getAllocationTags();
    /**
     * <pre>
     * Allocation tags from AllocationAsk
     * </pre>
     *
     * <code>map&lt;string, string&gt; allocationTags = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getAllocationTagsMap();
    /**
     * <pre>
     * Allocation tags from AllocationAsk
     * </pre>
     *
     * <code>map&lt;string, string&gt; allocationTags = 2;</code>
     */

    java.lang.String getAllocationTagsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Allocation tags from AllocationAsk
     * </pre>
     *
     * <code>map&lt;string, string&gt; allocationTags = 2;</code>
     */

    java.lang.String getAllocationTagsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * uuid of the allocation
     * </pre>
     *
     * <code>string uuid = 3;</code>
     */
    java.lang.String getUuid();
    /**
     * <pre>
     * uuid of the allocation
     * </pre>
     *
     * <code>string uuid = 3;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    /**
     * <pre>
     * Resource for each allocation
     * </pre>
     *
     * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
     */
    boolean hasResourcePerAlloc();
    /**
     * <pre>
     * Resource for each allocation
     * </pre>
     *
     * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
     */
    si.v1.Si.Resource getResourcePerAlloc();
    /**
     * <pre>
     * Resource for each allocation
     * </pre>
     *
     * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
     */
    si.v1.Si.ResourceOrBuilder getResourcePerAllocOrBuilder();

    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 6;</code>
     */
    boolean hasPriority();
    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 6;</code>
     */
    si.v1.Si.Priority getPriority();
    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 6;</code>
     */
    si.v1.Si.PriorityOrBuilder getPriorityOrBuilder();

    /**
     * <pre>
     * Queue which the allocation belongs to
     * </pre>
     *
     * <code>string queueName = 7;</code>
     */
    java.lang.String getQueueName();
    /**
     * <pre>
     * Queue which the allocation belongs to
     * </pre>
     *
     * <code>string queueName = 7;</code>
     */
    com.google.protobuf.ByteString
        getQueueNameBytes();

    /**
     * <pre>
     * Node which the allocation belongs to
     * </pre>
     *
     * <code>string nodeId = 8;</code>
     */
    java.lang.String getNodeId();
    /**
     * <pre>
     * Node which the allocation belongs to
     * </pre>
     *
     * <code>string nodeId = 8;</code>
     */
    com.google.protobuf.ByteString
        getNodeIdBytes();

    /**
     * <pre>
     * Id of Job
     * </pre>
     *
     * <code>string jobId = 9;</code>
     */
    java.lang.String getJobId();
    /**
     * <pre>
     * Id of Job
     * </pre>
     *
     * <code>string jobId = 9;</code>
     */
    com.google.protobuf.ByteString
        getJobIdBytes();

    /**
     * <pre>
     * Partition of the allocation 
     * </pre>
     *
     * <code>string partition = 10;</code>
     */
    java.lang.String getPartition();
    /**
     * <pre>
     * Partition of the allocation 
     * </pre>
     *
     * <code>string partition = 10;</code>
     */
    com.google.protobuf.ByteString
        getPartitionBytes();
  }
  /**
   * Protobuf type {@code si.v1.Allocation}
   */
  public  static final class Allocation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.Allocation)
      AllocationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Allocation.newBuilder() to construct.
    private Allocation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Allocation() {
      allocationKey_ = "";
      uuid_ = "";
      queueName_ = "";
      nodeId_ = "";
      jobId_ = "";
      partition_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Allocation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              allocationKey_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                allocationTags_ = com.google.protobuf.MapField.newMapField(
                    AllocationTagsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              allocationTags__ = input.readMessage(
                  AllocationTagsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              allocationTags_.getMutableMap().put(
                  allocationTags__.getKey(), allocationTags__.getValue());
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              uuid_ = s;
              break;
            }
            case 42: {
              si.v1.Si.Resource.Builder subBuilder = null;
              if (resourcePerAlloc_ != null) {
                subBuilder = resourcePerAlloc_.toBuilder();
              }
              resourcePerAlloc_ = input.readMessage(si.v1.Si.Resource.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resourcePerAlloc_);
                resourcePerAlloc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              si.v1.Si.Priority.Builder subBuilder = null;
              if (priority_ != null) {
                subBuilder = priority_.toBuilder();
              }
              priority_ = input.readMessage(si.v1.Si.Priority.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(priority_);
                priority_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              queueName_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeId_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              jobId_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              partition_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_Allocation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetAllocationTags();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_Allocation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.Allocation.class, si.v1.Si.Allocation.Builder.class);
    }

    private int bitField0_;
    public static final int ALLOCATIONKEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object allocationKey_;
    /**
     * <pre>
     * AllocationKey from AllocationAsk
     * </pre>
     *
     * <code>string allocationKey = 1;</code>
     */
    public java.lang.String getAllocationKey() {
      java.lang.Object ref = allocationKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        allocationKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * AllocationKey from AllocationAsk
     * </pre>
     *
     * <code>string allocationKey = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAllocationKeyBytes() {
      java.lang.Object ref = allocationKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        allocationKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALLOCATIONTAGS_FIELD_NUMBER = 2;
    private static final class AllocationTagsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  si.v1.Si.internal_static_si_v1_Allocation_AllocationTagsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> allocationTags_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetAllocationTags() {
      if (allocationTags_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AllocationTagsDefaultEntryHolder.defaultEntry);
      }
      return allocationTags_;
    }

    public int getAllocationTagsCount() {
      return internalGetAllocationTags().getMap().size();
    }
    /**
     * <pre>
     * Allocation tags from AllocationAsk
     * </pre>
     *
     * <code>map&lt;string, string&gt; allocationTags = 2;</code>
     */

    public boolean containsAllocationTags(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetAllocationTags().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAllocationTagsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getAllocationTags() {
      return getAllocationTagsMap();
    }
    /**
     * <pre>
     * Allocation tags from AllocationAsk
     * </pre>
     *
     * <code>map&lt;string, string&gt; allocationTags = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getAllocationTagsMap() {
      return internalGetAllocationTags().getMap();
    }
    /**
     * <pre>
     * Allocation tags from AllocationAsk
     * </pre>
     *
     * <code>map&lt;string, string&gt; allocationTags = 2;</code>
     */

    public java.lang.String getAllocationTagsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAllocationTags().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Allocation tags from AllocationAsk
     * </pre>
     *
     * <code>map&lt;string, string&gt; allocationTags = 2;</code>
     */

    public java.lang.String getAllocationTagsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAllocationTags().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int UUID_FIELD_NUMBER = 3;
    private volatile java.lang.Object uuid_;
    /**
     * <pre>
     * uuid of the allocation
     * </pre>
     *
     * <code>string uuid = 3;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * uuid of the allocation
     * </pre>
     *
     * <code>string uuid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESOURCEPERALLOC_FIELD_NUMBER = 5;
    private si.v1.Si.Resource resourcePerAlloc_;
    /**
     * <pre>
     * Resource for each allocation
     * </pre>
     *
     * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
     */
    public boolean hasResourcePerAlloc() {
      return resourcePerAlloc_ != null;
    }
    /**
     * <pre>
     * Resource for each allocation
     * </pre>
     *
     * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
     */
    public si.v1.Si.Resource getResourcePerAlloc() {
      return resourcePerAlloc_ == null ? si.v1.Si.Resource.getDefaultInstance() : resourcePerAlloc_;
    }
    /**
     * <pre>
     * Resource for each allocation
     * </pre>
     *
     * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
     */
    public si.v1.Si.ResourceOrBuilder getResourcePerAllocOrBuilder() {
      return getResourcePerAlloc();
    }

    public static final int PRIORITY_FIELD_NUMBER = 6;
    private si.v1.Si.Priority priority_;
    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 6;</code>
     */
    public boolean hasPriority() {
      return priority_ != null;
    }
    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 6;</code>
     */
    public si.v1.Si.Priority getPriority() {
      return priority_ == null ? si.v1.Si.Priority.getDefaultInstance() : priority_;
    }
    /**
     * <pre>
     * Priority of ask
     * </pre>
     *
     * <code>.si.v1.Priority priority = 6;</code>
     */
    public si.v1.Si.PriorityOrBuilder getPriorityOrBuilder() {
      return getPriority();
    }

    public static final int QUEUENAME_FIELD_NUMBER = 7;
    private volatile java.lang.Object queueName_;
    /**
     * <pre>
     * Queue which the allocation belongs to
     * </pre>
     *
     * <code>string queueName = 7;</code>
     */
    public java.lang.String getQueueName() {
      java.lang.Object ref = queueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        queueName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Queue which the allocation belongs to
     * </pre>
     *
     * <code>string queueName = 7;</code>
     */
    public com.google.protobuf.ByteString
        getQueueNameBytes() {
      java.lang.Object ref = queueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        queueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODEID_FIELD_NUMBER = 8;
    private volatile java.lang.Object nodeId_;
    /**
     * <pre>
     * Node which the allocation belongs to
     * </pre>
     *
     * <code>string nodeId = 8;</code>
     */
    public java.lang.String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Node which the allocation belongs to
     * </pre>
     *
     * <code>string nodeId = 8;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JOBID_FIELD_NUMBER = 9;
    private volatile java.lang.Object jobId_;
    /**
     * <pre>
     * Id of Job
     * </pre>
     *
     * <code>string jobId = 9;</code>
     */
    public java.lang.String getJobId() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jobId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Id of Job
     * </pre>
     *
     * <code>string jobId = 9;</code>
     */
    public com.google.protobuf.ByteString
        getJobIdBytes() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jobId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITION_FIELD_NUMBER = 10;
    private volatile java.lang.Object partition_;
    /**
     * <pre>
     * Partition of the allocation 
     * </pre>
     *
     * <code>string partition = 10;</code>
     */
    public java.lang.String getPartition() {
      java.lang.Object ref = partition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        partition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Partition of the allocation 
     * </pre>
     *
     * <code>string partition = 10;</code>
     */
    public com.google.protobuf.ByteString
        getPartitionBytes() {
      java.lang.Object ref = partition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAllocationKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, allocationKey_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAllocationTags(),
          AllocationTagsDefaultEntryHolder.defaultEntry,
          2);
      if (!getUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, uuid_);
      }
      if (resourcePerAlloc_ != null) {
        output.writeMessage(5, getResourcePerAlloc());
      }
      if (priority_ != null) {
        output.writeMessage(6, getPriority());
      }
      if (!getQueueNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, queueName_);
      }
      if (!getNodeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, nodeId_);
      }
      if (!getJobIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, jobId_);
      }
      if (!getPartitionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, partition_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAllocationKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, allocationKey_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetAllocationTags().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        allocationTags__ = AllocationTagsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, allocationTags__);
      }
      if (!getUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, uuid_);
      }
      if (resourcePerAlloc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getResourcePerAlloc());
      }
      if (priority_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getPriority());
      }
      if (!getQueueNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, queueName_);
      }
      if (!getNodeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, nodeId_);
      }
      if (!getJobIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, jobId_);
      }
      if (!getPartitionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, partition_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.Allocation)) {
        return super.equals(obj);
      }
      si.v1.Si.Allocation other = (si.v1.Si.Allocation) obj;

      boolean result = true;
      result = result && getAllocationKey()
          .equals(other.getAllocationKey());
      result = result && internalGetAllocationTags().equals(
          other.internalGetAllocationTags());
      result = result && getUuid()
          .equals(other.getUuid());
      result = result && (hasResourcePerAlloc() == other.hasResourcePerAlloc());
      if (hasResourcePerAlloc()) {
        result = result && getResourcePerAlloc()
            .equals(other.getResourcePerAlloc());
      }
      result = result && (hasPriority() == other.hasPriority());
      if (hasPriority()) {
        result = result && getPriority()
            .equals(other.getPriority());
      }
      result = result && getQueueName()
          .equals(other.getQueueName());
      result = result && getNodeId()
          .equals(other.getNodeId());
      result = result && getJobId()
          .equals(other.getJobId());
      result = result && getPartition()
          .equals(other.getPartition());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALLOCATIONKEY_FIELD_NUMBER;
      hash = (53 * hash) + getAllocationKey().hashCode();
      if (!internalGetAllocationTags().getMap().isEmpty()) {
        hash = (37 * hash) + ALLOCATIONTAGS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAllocationTags().hashCode();
      }
      hash = (37 * hash) + UUID_FIELD_NUMBER;
      hash = (53 * hash) + getUuid().hashCode();
      if (hasResourcePerAlloc()) {
        hash = (37 * hash) + RESOURCEPERALLOC_FIELD_NUMBER;
        hash = (53 * hash) + getResourcePerAlloc().hashCode();
      }
      if (hasPriority()) {
        hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
        hash = (53 * hash) + getPriority().hashCode();
      }
      hash = (37 * hash) + QUEUENAME_FIELD_NUMBER;
      hash = (53 * hash) + getQueueName().hashCode();
      hash = (37 * hash) + NODEID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId().hashCode();
      hash = (37 * hash) + JOBID_FIELD_NUMBER;
      hash = (53 * hash) + getJobId().hashCode();
      hash = (37 * hash) + PARTITION_FIELD_NUMBER;
      hash = (53 * hash) + getPartition().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.Allocation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Allocation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Allocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Allocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Allocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.Allocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.Allocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.Allocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.Allocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.Allocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.Allocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.Allocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.Allocation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.Allocation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.Allocation)
        si.v1.Si.AllocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_Allocation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetAllocationTags();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableAllocationTags();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_Allocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.Allocation.class, si.v1.Si.Allocation.Builder.class);
      }

      // Construct using si.v1.Si.Allocation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        allocationKey_ = "";

        internalGetMutableAllocationTags().clear();
        uuid_ = "";

        if (resourcePerAllocBuilder_ == null) {
          resourcePerAlloc_ = null;
        } else {
          resourcePerAlloc_ = null;
          resourcePerAllocBuilder_ = null;
        }
        if (priorityBuilder_ == null) {
          priority_ = null;
        } else {
          priority_ = null;
          priorityBuilder_ = null;
        }
        queueName_ = "";

        nodeId_ = "";

        jobId_ = "";

        partition_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_Allocation_descriptor;
      }

      public si.v1.Si.Allocation getDefaultInstanceForType() {
        return si.v1.Si.Allocation.getDefaultInstance();
      }

      public si.v1.Si.Allocation build() {
        si.v1.Si.Allocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.Allocation buildPartial() {
        si.v1.Si.Allocation result = new si.v1.Si.Allocation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.allocationKey_ = allocationKey_;
        result.allocationTags_ = internalGetAllocationTags();
        result.allocationTags_.makeImmutable();
        result.uuid_ = uuid_;
        if (resourcePerAllocBuilder_ == null) {
          result.resourcePerAlloc_ = resourcePerAlloc_;
        } else {
          result.resourcePerAlloc_ = resourcePerAllocBuilder_.build();
        }
        if (priorityBuilder_ == null) {
          result.priority_ = priority_;
        } else {
          result.priority_ = priorityBuilder_.build();
        }
        result.queueName_ = queueName_;
        result.nodeId_ = nodeId_;
        result.jobId_ = jobId_;
        result.partition_ = partition_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.Allocation) {
          return mergeFrom((si.v1.Si.Allocation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.Allocation other) {
        if (other == si.v1.Si.Allocation.getDefaultInstance()) return this;
        if (!other.getAllocationKey().isEmpty()) {
          allocationKey_ = other.allocationKey_;
          onChanged();
        }
        internalGetMutableAllocationTags().mergeFrom(
            other.internalGetAllocationTags());
        if (!other.getUuid().isEmpty()) {
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasResourcePerAlloc()) {
          mergeResourcePerAlloc(other.getResourcePerAlloc());
        }
        if (other.hasPriority()) {
          mergePriority(other.getPriority());
        }
        if (!other.getQueueName().isEmpty()) {
          queueName_ = other.queueName_;
          onChanged();
        }
        if (!other.getNodeId().isEmpty()) {
          nodeId_ = other.nodeId_;
          onChanged();
        }
        if (!other.getJobId().isEmpty()) {
          jobId_ = other.jobId_;
          onChanged();
        }
        if (!other.getPartition().isEmpty()) {
          partition_ = other.partition_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.Allocation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.Allocation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object allocationKey_ = "";
      /**
       * <pre>
       * AllocationKey from AllocationAsk
       * </pre>
       *
       * <code>string allocationKey = 1;</code>
       */
      public java.lang.String getAllocationKey() {
        java.lang.Object ref = allocationKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          allocationKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * AllocationKey from AllocationAsk
       * </pre>
       *
       * <code>string allocationKey = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAllocationKeyBytes() {
        java.lang.Object ref = allocationKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          allocationKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * AllocationKey from AllocationAsk
       * </pre>
       *
       * <code>string allocationKey = 1;</code>
       */
      public Builder setAllocationKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        allocationKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * AllocationKey from AllocationAsk
       * </pre>
       *
       * <code>string allocationKey = 1;</code>
       */
      public Builder clearAllocationKey() {
        
        allocationKey_ = getDefaultInstance().getAllocationKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * AllocationKey from AllocationAsk
       * </pre>
       *
       * <code>string allocationKey = 1;</code>
       */
      public Builder setAllocationKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        allocationKey_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> allocationTags_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetAllocationTags() {
        if (allocationTags_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AllocationTagsDefaultEntryHolder.defaultEntry);
        }
        return allocationTags_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableAllocationTags() {
        onChanged();;
        if (allocationTags_ == null) {
          allocationTags_ = com.google.protobuf.MapField.newMapField(
              AllocationTagsDefaultEntryHolder.defaultEntry);
        }
        if (!allocationTags_.isMutable()) {
          allocationTags_ = allocationTags_.copy();
        }
        return allocationTags_;
      }

      public int getAllocationTagsCount() {
        return internalGetAllocationTags().getMap().size();
      }
      /**
       * <pre>
       * Allocation tags from AllocationAsk
       * </pre>
       *
       * <code>map&lt;string, string&gt; allocationTags = 2;</code>
       */

      public boolean containsAllocationTags(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetAllocationTags().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAllocationTagsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getAllocationTags() {
        return getAllocationTagsMap();
      }
      /**
       * <pre>
       * Allocation tags from AllocationAsk
       * </pre>
       *
       * <code>map&lt;string, string&gt; allocationTags = 2;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getAllocationTagsMap() {
        return internalGetAllocationTags().getMap();
      }
      /**
       * <pre>
       * Allocation tags from AllocationAsk
       * </pre>
       *
       * <code>map&lt;string, string&gt; allocationTags = 2;</code>
       */

      public java.lang.String getAllocationTagsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetAllocationTags().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Allocation tags from AllocationAsk
       * </pre>
       *
       * <code>map&lt;string, string&gt; allocationTags = 2;</code>
       */

      public java.lang.String getAllocationTagsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetAllocationTags().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAllocationTags() {
        internalGetMutableAllocationTags().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Allocation tags from AllocationAsk
       * </pre>
       *
       * <code>map&lt;string, string&gt; allocationTags = 2;</code>
       */

      public Builder removeAllocationTags(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAllocationTags().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableAllocationTags() {
        return internalGetMutableAllocationTags().getMutableMap();
      }
      /**
       * <pre>
       * Allocation tags from AllocationAsk
       * </pre>
       *
       * <code>map&lt;string, string&gt; allocationTags = 2;</code>
       */
      public Builder putAllocationTags(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAllocationTags().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Allocation tags from AllocationAsk
       * </pre>
       *
       * <code>map&lt;string, string&gt; allocationTags = 2;</code>
       */

      public Builder putAllAllocationTags(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableAllocationTags().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.lang.Object uuid_ = "";
      /**
       * <pre>
       * uuid of the allocation
       * </pre>
       *
       * <code>string uuid = 3;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * uuid of the allocation
       * </pre>
       *
       * <code>string uuid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * uuid of the allocation
       * </pre>
       *
       * <code>string uuid = 3;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uuid of the allocation
       * </pre>
       *
       * <code>string uuid = 3;</code>
       */
      public Builder clearUuid() {
        
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uuid of the allocation
       * </pre>
       *
       * <code>string uuid = 3;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuid_ = value;
        onChanged();
        return this;
      }

      private si.v1.Si.Resource resourcePerAlloc_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> resourcePerAllocBuilder_;
      /**
       * <pre>
       * Resource for each allocation
       * </pre>
       *
       * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
       */
      public boolean hasResourcePerAlloc() {
        return resourcePerAllocBuilder_ != null || resourcePerAlloc_ != null;
      }
      /**
       * <pre>
       * Resource for each allocation
       * </pre>
       *
       * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
       */
      public si.v1.Si.Resource getResourcePerAlloc() {
        if (resourcePerAllocBuilder_ == null) {
          return resourcePerAlloc_ == null ? si.v1.Si.Resource.getDefaultInstance() : resourcePerAlloc_;
        } else {
          return resourcePerAllocBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Resource for each allocation
       * </pre>
       *
       * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
       */
      public Builder setResourcePerAlloc(si.v1.Si.Resource value) {
        if (resourcePerAllocBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resourcePerAlloc_ = value;
          onChanged();
        } else {
          resourcePerAllocBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Resource for each allocation
       * </pre>
       *
       * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
       */
      public Builder setResourcePerAlloc(
          si.v1.Si.Resource.Builder builderForValue) {
        if (resourcePerAllocBuilder_ == null) {
          resourcePerAlloc_ = builderForValue.build();
          onChanged();
        } else {
          resourcePerAllocBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Resource for each allocation
       * </pre>
       *
       * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
       */
      public Builder mergeResourcePerAlloc(si.v1.Si.Resource value) {
        if (resourcePerAllocBuilder_ == null) {
          if (resourcePerAlloc_ != null) {
            resourcePerAlloc_ =
              si.v1.Si.Resource.newBuilder(resourcePerAlloc_).mergeFrom(value).buildPartial();
          } else {
            resourcePerAlloc_ = value;
          }
          onChanged();
        } else {
          resourcePerAllocBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Resource for each allocation
       * </pre>
       *
       * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
       */
      public Builder clearResourcePerAlloc() {
        if (resourcePerAllocBuilder_ == null) {
          resourcePerAlloc_ = null;
          onChanged();
        } else {
          resourcePerAlloc_ = null;
          resourcePerAllocBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Resource for each allocation
       * </pre>
       *
       * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
       */
      public si.v1.Si.Resource.Builder getResourcePerAllocBuilder() {
        
        onChanged();
        return getResourcePerAllocFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Resource for each allocation
       * </pre>
       *
       * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
       */
      public si.v1.Si.ResourceOrBuilder getResourcePerAllocOrBuilder() {
        if (resourcePerAllocBuilder_ != null) {
          return resourcePerAllocBuilder_.getMessageOrBuilder();
        } else {
          return resourcePerAlloc_ == null ?
              si.v1.Si.Resource.getDefaultInstance() : resourcePerAlloc_;
        }
      }
      /**
       * <pre>
       * Resource for each allocation
       * </pre>
       *
       * <code>.si.v1.Resource resourcePerAlloc = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> 
          getResourcePerAllocFieldBuilder() {
        if (resourcePerAllocBuilder_ == null) {
          resourcePerAllocBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder>(
                  getResourcePerAlloc(),
                  getParentForChildren(),
                  isClean());
          resourcePerAlloc_ = null;
        }
        return resourcePerAllocBuilder_;
      }

      private si.v1.Si.Priority priority_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Priority, si.v1.Si.Priority.Builder, si.v1.Si.PriorityOrBuilder> priorityBuilder_;
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 6;</code>
       */
      public boolean hasPriority() {
        return priorityBuilder_ != null || priority_ != null;
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 6;</code>
       */
      public si.v1.Si.Priority getPriority() {
        if (priorityBuilder_ == null) {
          return priority_ == null ? si.v1.Si.Priority.getDefaultInstance() : priority_;
        } else {
          return priorityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 6;</code>
       */
      public Builder setPriority(si.v1.Si.Priority value) {
        if (priorityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          priority_ = value;
          onChanged();
        } else {
          priorityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 6;</code>
       */
      public Builder setPriority(
          si.v1.Si.Priority.Builder builderForValue) {
        if (priorityBuilder_ == null) {
          priority_ = builderForValue.build();
          onChanged();
        } else {
          priorityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 6;</code>
       */
      public Builder mergePriority(si.v1.Si.Priority value) {
        if (priorityBuilder_ == null) {
          if (priority_ != null) {
            priority_ =
              si.v1.Si.Priority.newBuilder(priority_).mergeFrom(value).buildPartial();
          } else {
            priority_ = value;
          }
          onChanged();
        } else {
          priorityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 6;</code>
       */
      public Builder clearPriority() {
        if (priorityBuilder_ == null) {
          priority_ = null;
          onChanged();
        } else {
          priority_ = null;
          priorityBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 6;</code>
       */
      public si.v1.Si.Priority.Builder getPriorityBuilder() {
        
        onChanged();
        return getPriorityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 6;</code>
       */
      public si.v1.Si.PriorityOrBuilder getPriorityOrBuilder() {
        if (priorityBuilder_ != null) {
          return priorityBuilder_.getMessageOrBuilder();
        } else {
          return priority_ == null ?
              si.v1.Si.Priority.getDefaultInstance() : priority_;
        }
      }
      /**
       * <pre>
       * Priority of ask
       * </pre>
       *
       * <code>.si.v1.Priority priority = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Priority, si.v1.Si.Priority.Builder, si.v1.Si.PriorityOrBuilder> 
          getPriorityFieldBuilder() {
        if (priorityBuilder_ == null) {
          priorityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.Priority, si.v1.Si.Priority.Builder, si.v1.Si.PriorityOrBuilder>(
                  getPriority(),
                  getParentForChildren(),
                  isClean());
          priority_ = null;
        }
        return priorityBuilder_;
      }

      private java.lang.Object queueName_ = "";
      /**
       * <pre>
       * Queue which the allocation belongs to
       * </pre>
       *
       * <code>string queueName = 7;</code>
       */
      public java.lang.String getQueueName() {
        java.lang.Object ref = queueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          queueName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Queue which the allocation belongs to
       * </pre>
       *
       * <code>string queueName = 7;</code>
       */
      public com.google.protobuf.ByteString
          getQueueNameBytes() {
        java.lang.Object ref = queueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          queueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Queue which the allocation belongs to
       * </pre>
       *
       * <code>string queueName = 7;</code>
       */
      public Builder setQueueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        queueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Queue which the allocation belongs to
       * </pre>
       *
       * <code>string queueName = 7;</code>
       */
      public Builder clearQueueName() {
        
        queueName_ = getDefaultInstance().getQueueName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Queue which the allocation belongs to
       * </pre>
       *
       * <code>string queueName = 7;</code>
       */
      public Builder setQueueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        queueName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object nodeId_ = "";
      /**
       * <pre>
       * Node which the allocation belongs to
       * </pre>
       *
       * <code>string nodeId = 8;</code>
       */
      public java.lang.String getNodeId() {
        java.lang.Object ref = nodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Node which the allocation belongs to
       * </pre>
       *
       * <code>string nodeId = 8;</code>
       */
      public com.google.protobuf.ByteString
          getNodeIdBytes() {
        java.lang.Object ref = nodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Node which the allocation belongs to
       * </pre>
       *
       * <code>string nodeId = 8;</code>
       */
      public Builder setNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Node which the allocation belongs to
       * </pre>
       *
       * <code>string nodeId = 8;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = getDefaultInstance().getNodeId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Node which the allocation belongs to
       * </pre>
       *
       * <code>string nodeId = 8;</code>
       */
      public Builder setNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object jobId_ = "";
      /**
       * <pre>
       * Id of Job
       * </pre>
       *
       * <code>string jobId = 9;</code>
       */
      public java.lang.String getJobId() {
        java.lang.Object ref = jobId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jobId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Id of Job
       * </pre>
       *
       * <code>string jobId = 9;</code>
       */
      public com.google.protobuf.ByteString
          getJobIdBytes() {
        java.lang.Object ref = jobId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jobId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Id of Job
       * </pre>
       *
       * <code>string jobId = 9;</code>
       */
      public Builder setJobId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jobId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id of Job
       * </pre>
       *
       * <code>string jobId = 9;</code>
       */
      public Builder clearJobId() {
        
        jobId_ = getDefaultInstance().getJobId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id of Job
       * </pre>
       *
       * <code>string jobId = 9;</code>
       */
      public Builder setJobIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jobId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object partition_ = "";
      /**
       * <pre>
       * Partition of the allocation 
       * </pre>
       *
       * <code>string partition = 10;</code>
       */
      public java.lang.String getPartition() {
        java.lang.Object ref = partition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          partition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Partition of the allocation 
       * </pre>
       *
       * <code>string partition = 10;</code>
       */
      public com.google.protobuf.ByteString
          getPartitionBytes() {
        java.lang.Object ref = partition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Partition of the allocation 
       * </pre>
       *
       * <code>string partition = 10;</code>
       */
      public Builder setPartition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        partition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Partition of the allocation 
       * </pre>
       *
       * <code>string partition = 10;</code>
       */
      public Builder clearPartition() {
        
        partition_ = getDefaultInstance().getPartition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Partition of the allocation 
       * </pre>
       *
       * <code>string partition = 10;</code>
       */
      public Builder setPartitionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        partition_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.Allocation)
    }

    // @@protoc_insertion_point(class_scope:si.v1.Allocation)
    private static final si.v1.Si.Allocation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.Allocation();
    }

    public static si.v1.Si.Allocation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Allocation>
        PARSER = new com.google.protobuf.AbstractParser<Allocation>() {
      public Allocation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Allocation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Allocation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Allocation> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.Allocation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RejectedAllocationAskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.RejectedAllocationAsk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string allocationKey = 1;</code>
     */
    java.lang.String getAllocationKey();
    /**
     * <code>string allocationKey = 1;</code>
     */
    com.google.protobuf.ByteString
        getAllocationKeyBytes();

    /**
     * <code>string reason = 2;</code>
     */
    java.lang.String getReason();
    /**
     * <code>string reason = 2;</code>
     */
    com.google.protobuf.ByteString
        getReasonBytes();
  }
  /**
   * Protobuf type {@code si.v1.RejectedAllocationAsk}
   */
  public  static final class RejectedAllocationAsk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.RejectedAllocationAsk)
      RejectedAllocationAskOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RejectedAllocationAsk.newBuilder() to construct.
    private RejectedAllocationAsk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RejectedAllocationAsk() {
      allocationKey_ = "";
      reason_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RejectedAllocationAsk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              allocationKey_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              reason_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_RejectedAllocationAsk_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_RejectedAllocationAsk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.RejectedAllocationAsk.class, si.v1.Si.RejectedAllocationAsk.Builder.class);
    }

    public static final int ALLOCATIONKEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object allocationKey_;
    /**
     * <code>string allocationKey = 1;</code>
     */
    public java.lang.String getAllocationKey() {
      java.lang.Object ref = allocationKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        allocationKey_ = s;
        return s;
      }
    }
    /**
     * <code>string allocationKey = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAllocationKeyBytes() {
      java.lang.Object ref = allocationKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        allocationKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REASON_FIELD_NUMBER = 2;
    private volatile java.lang.Object reason_;
    /**
     * <code>string reason = 2;</code>
     */
    public java.lang.String getReason() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reason_ = s;
        return s;
      }
    }
    /**
     * <code>string reason = 2;</code>
     */
    public com.google.protobuf.ByteString
        getReasonBytes() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAllocationKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, allocationKey_);
      }
      if (!getReasonBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, reason_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAllocationKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, allocationKey_);
      }
      if (!getReasonBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, reason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.RejectedAllocationAsk)) {
        return super.equals(obj);
      }
      si.v1.Si.RejectedAllocationAsk other = (si.v1.Si.RejectedAllocationAsk) obj;

      boolean result = true;
      result = result && getAllocationKey()
          .equals(other.getAllocationKey());
      result = result && getReason()
          .equals(other.getReason());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALLOCATIONKEY_FIELD_NUMBER;
      hash = (53 * hash) + getAllocationKey().hashCode();
      hash = (37 * hash) + REASON_FIELD_NUMBER;
      hash = (53 * hash) + getReason().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.RejectedAllocationAsk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RejectedAllocationAsk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RejectedAllocationAsk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RejectedAllocationAsk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RejectedAllocationAsk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.RejectedAllocationAsk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.RejectedAllocationAsk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RejectedAllocationAsk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RejectedAllocationAsk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.RejectedAllocationAsk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.RejectedAllocationAsk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.RejectedAllocationAsk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.RejectedAllocationAsk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.RejectedAllocationAsk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.RejectedAllocationAsk)
        si.v1.Si.RejectedAllocationAskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_RejectedAllocationAsk_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_RejectedAllocationAsk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.RejectedAllocationAsk.class, si.v1.Si.RejectedAllocationAsk.Builder.class);
      }

      // Construct using si.v1.Si.RejectedAllocationAsk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        allocationKey_ = "";

        reason_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_RejectedAllocationAsk_descriptor;
      }

      public si.v1.Si.RejectedAllocationAsk getDefaultInstanceForType() {
        return si.v1.Si.RejectedAllocationAsk.getDefaultInstance();
      }

      public si.v1.Si.RejectedAllocationAsk build() {
        si.v1.Si.RejectedAllocationAsk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.RejectedAllocationAsk buildPartial() {
        si.v1.Si.RejectedAllocationAsk result = new si.v1.Si.RejectedAllocationAsk(this);
        result.allocationKey_ = allocationKey_;
        result.reason_ = reason_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.RejectedAllocationAsk) {
          return mergeFrom((si.v1.Si.RejectedAllocationAsk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.RejectedAllocationAsk other) {
        if (other == si.v1.Si.RejectedAllocationAsk.getDefaultInstance()) return this;
        if (!other.getAllocationKey().isEmpty()) {
          allocationKey_ = other.allocationKey_;
          onChanged();
        }
        if (!other.getReason().isEmpty()) {
          reason_ = other.reason_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.RejectedAllocationAsk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.RejectedAllocationAsk) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object allocationKey_ = "";
      /**
       * <code>string allocationKey = 1;</code>
       */
      public java.lang.String getAllocationKey() {
        java.lang.Object ref = allocationKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          allocationKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string allocationKey = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAllocationKeyBytes() {
        java.lang.Object ref = allocationKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          allocationKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string allocationKey = 1;</code>
       */
      public Builder setAllocationKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        allocationKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string allocationKey = 1;</code>
       */
      public Builder clearAllocationKey() {
        
        allocationKey_ = getDefaultInstance().getAllocationKey();
        onChanged();
        return this;
      }
      /**
       * <code>string allocationKey = 1;</code>
       */
      public Builder setAllocationKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        allocationKey_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object reason_ = "";
      /**
       * <code>string reason = 2;</code>
       */
      public java.lang.String getReason() {
        java.lang.Object ref = reason_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          reason_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string reason = 2;</code>
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        java.lang.Object ref = reason_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reason_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder setReason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder clearReason() {
        
        reason_ = getDefaultInstance().getReason();
        onChanged();
        return this;
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reason_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.RejectedAllocationAsk)
    }

    // @@protoc_insertion_point(class_scope:si.v1.RejectedAllocationAsk)
    private static final si.v1.Si.RejectedAllocationAsk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.RejectedAllocationAsk();
    }

    public static si.v1.Si.RejectedAllocationAsk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RejectedAllocationAsk>
        PARSER = new com.google.protobuf.AbstractParser<RejectedAllocationAsk>() {
      public RejectedAllocationAsk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RejectedAllocationAsk(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RejectedAllocationAsk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RejectedAllocationAsk> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.RejectedAllocationAsk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeRecommendationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.NodeRecommendation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
     */
    boolean hasRecommendedSchedulableResource();
    /**
     * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
     */
    si.v1.Si.Resource getRecommendedSchedulableResource();
    /**
     * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
     */
    si.v1.Si.ResourceOrBuilder getRecommendedSchedulableResourceOrBuilder();

    /**
     * <pre>
     * Any other human-readable message
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * Any other human-readable message
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code si.v1.NodeRecommendation}
   */
  public  static final class NodeRecommendation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.NodeRecommendation)
      NodeRecommendationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeRecommendation.newBuilder() to construct.
    private NodeRecommendation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeRecommendation() {
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodeRecommendation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              si.v1.Si.Resource.Builder subBuilder = null;
              if (recommendedSchedulableResource_ != null) {
                subBuilder = recommendedSchedulableResource_.toBuilder();
              }
              recommendedSchedulableResource_ = input.readMessage(si.v1.Si.Resource.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(recommendedSchedulableResource_);
                recommendedSchedulableResource_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_NodeRecommendation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_NodeRecommendation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.NodeRecommendation.class, si.v1.Si.NodeRecommendation.Builder.class);
    }

    public static final int RECOMMENDEDSCHEDULABLERESOURCE_FIELD_NUMBER = 1;
    private si.v1.Si.Resource recommendedSchedulableResource_;
    /**
     * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
     */
    public boolean hasRecommendedSchedulableResource() {
      return recommendedSchedulableResource_ != null;
    }
    /**
     * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
     */
    public si.v1.Si.Resource getRecommendedSchedulableResource() {
      return recommendedSchedulableResource_ == null ? si.v1.Si.Resource.getDefaultInstance() : recommendedSchedulableResource_;
    }
    /**
     * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
     */
    public si.v1.Si.ResourceOrBuilder getRecommendedSchedulableResourceOrBuilder() {
      return getRecommendedSchedulableResource();
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private volatile java.lang.Object message_;
    /**
     * <pre>
     * Any other human-readable message
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Any other human-readable message
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (recommendedSchedulableResource_ != null) {
        output.writeMessage(1, getRecommendedSchedulableResource());
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (recommendedSchedulableResource_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRecommendedSchedulableResource());
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.NodeRecommendation)) {
        return super.equals(obj);
      }
      si.v1.Si.NodeRecommendation other = (si.v1.Si.NodeRecommendation) obj;

      boolean result = true;
      result = result && (hasRecommendedSchedulableResource() == other.hasRecommendedSchedulableResource());
      if (hasRecommendedSchedulableResource()) {
        result = result && getRecommendedSchedulableResource()
            .equals(other.getRecommendedSchedulableResource());
      }
      result = result && getMessage()
          .equals(other.getMessage());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRecommendedSchedulableResource()) {
        hash = (37 * hash) + RECOMMENDEDSCHEDULABLERESOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getRecommendedSchedulableResource().hashCode();
      }
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.NodeRecommendation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.NodeRecommendation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.NodeRecommendation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.NodeRecommendation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.NodeRecommendation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.NodeRecommendation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.NodeRecommendation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.NodeRecommendation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.NodeRecommendation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.NodeRecommendation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.NodeRecommendation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.NodeRecommendation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.NodeRecommendation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code si.v1.NodeRecommendation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.NodeRecommendation)
        si.v1.Si.NodeRecommendationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_NodeRecommendation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_NodeRecommendation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.NodeRecommendation.class, si.v1.Si.NodeRecommendation.Builder.class);
      }

      // Construct using si.v1.Si.NodeRecommendation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (recommendedSchedulableResourceBuilder_ == null) {
          recommendedSchedulableResource_ = null;
        } else {
          recommendedSchedulableResource_ = null;
          recommendedSchedulableResourceBuilder_ = null;
        }
        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_NodeRecommendation_descriptor;
      }

      public si.v1.Si.NodeRecommendation getDefaultInstanceForType() {
        return si.v1.Si.NodeRecommendation.getDefaultInstance();
      }

      public si.v1.Si.NodeRecommendation build() {
        si.v1.Si.NodeRecommendation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.NodeRecommendation buildPartial() {
        si.v1.Si.NodeRecommendation result = new si.v1.Si.NodeRecommendation(this);
        if (recommendedSchedulableResourceBuilder_ == null) {
          result.recommendedSchedulableResource_ = recommendedSchedulableResource_;
        } else {
          result.recommendedSchedulableResource_ = recommendedSchedulableResourceBuilder_.build();
        }
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.NodeRecommendation) {
          return mergeFrom((si.v1.Si.NodeRecommendation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.NodeRecommendation other) {
        if (other == si.v1.Si.NodeRecommendation.getDefaultInstance()) return this;
        if (other.hasRecommendedSchedulableResource()) {
          mergeRecommendedSchedulableResource(other.getRecommendedSchedulableResource());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.NodeRecommendation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.NodeRecommendation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private si.v1.Si.Resource recommendedSchedulableResource_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> recommendedSchedulableResourceBuilder_;
      /**
       * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
       */
      public boolean hasRecommendedSchedulableResource() {
        return recommendedSchedulableResourceBuilder_ != null || recommendedSchedulableResource_ != null;
      }
      /**
       * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
       */
      public si.v1.Si.Resource getRecommendedSchedulableResource() {
        if (recommendedSchedulableResourceBuilder_ == null) {
          return recommendedSchedulableResource_ == null ? si.v1.Si.Resource.getDefaultInstance() : recommendedSchedulableResource_;
        } else {
          return recommendedSchedulableResourceBuilder_.getMessage();
        }
      }
      /**
       * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
       */
      public Builder setRecommendedSchedulableResource(si.v1.Si.Resource value) {
        if (recommendedSchedulableResourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recommendedSchedulableResource_ = value;
          onChanged();
        } else {
          recommendedSchedulableResourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
       */
      public Builder setRecommendedSchedulableResource(
          si.v1.Si.Resource.Builder builderForValue) {
        if (recommendedSchedulableResourceBuilder_ == null) {
          recommendedSchedulableResource_ = builderForValue.build();
          onChanged();
        } else {
          recommendedSchedulableResourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
       */
      public Builder mergeRecommendedSchedulableResource(si.v1.Si.Resource value) {
        if (recommendedSchedulableResourceBuilder_ == null) {
          if (recommendedSchedulableResource_ != null) {
            recommendedSchedulableResource_ =
              si.v1.Si.Resource.newBuilder(recommendedSchedulableResource_).mergeFrom(value).buildPartial();
          } else {
            recommendedSchedulableResource_ = value;
          }
          onChanged();
        } else {
          recommendedSchedulableResourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
       */
      public Builder clearRecommendedSchedulableResource() {
        if (recommendedSchedulableResourceBuilder_ == null) {
          recommendedSchedulableResource_ = null;
          onChanged();
        } else {
          recommendedSchedulableResource_ = null;
          recommendedSchedulableResourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
       */
      public si.v1.Si.Resource.Builder getRecommendedSchedulableResourceBuilder() {
        
        onChanged();
        return getRecommendedSchedulableResourceFieldBuilder().getBuilder();
      }
      /**
       * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
       */
      public si.v1.Si.ResourceOrBuilder getRecommendedSchedulableResourceOrBuilder() {
        if (recommendedSchedulableResourceBuilder_ != null) {
          return recommendedSchedulableResourceBuilder_.getMessageOrBuilder();
        } else {
          return recommendedSchedulableResource_ == null ?
              si.v1.Si.Resource.getDefaultInstance() : recommendedSchedulableResource_;
        }
      }
      /**
       * <code>.si.v1.Resource recommendedSchedulableResource = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder> 
          getRecommendedSchedulableResourceFieldBuilder() {
        if (recommendedSchedulableResourceBuilder_ == null) {
          recommendedSchedulableResourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              si.v1.Si.Resource, si.v1.Si.Resource.Builder, si.v1.Si.ResourceOrBuilder>(
                  getRecommendedSchedulableResource(),
                  getParentForChildren(),
                  isClean());
          recommendedSchedulableResource_ = null;
        }
        return recommendedSchedulableResourceBuilder_;
      }

      private java.lang.Object message_ = "";
      /**
       * <pre>
       * Any other human-readable message
       * </pre>
       *
       * <code>string message = 2;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Any other human-readable message
       * </pre>
       *
       * <code>string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Any other human-readable message
       * </pre>
       *
       * <code>string message = 2;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any other human-readable message
       * </pre>
       *
       * <code>string message = 2;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any other human-readable message
       * </pre>
       *
       * <code>string message = 2;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.NodeRecommendation)
    }

    // @@protoc_insertion_point(class_scope:si.v1.NodeRecommendation)
    private static final si.v1.Si.NodeRecommendation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.NodeRecommendation();
    }

    public static si.v1.Si.NodeRecommendation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeRecommendation>
        PARSER = new com.google.protobuf.AbstractParser<NodeRecommendation>() {
      public NodeRecommendation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeRecommendation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeRecommendation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeRecommendation> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.NodeRecommendation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllocationReleaseResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:si.v1.AllocationReleaseResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * UUID of allocation.
     * </pre>
     *
     * <code>string allocationUUID = 1;</code>
     */
    java.lang.String getAllocationUUID();
    /**
     * <pre>
     * UUID of allocation.
     * </pre>
     *
     * <code>string allocationUUID = 1;</code>
     */
    com.google.protobuf.ByteString
        getAllocationUUIDBytes();

    /**
     * <pre>
     * Why terminated
     * </pre>
     *
     * <code>.si.v1.AllocationReleaseResponse.TerminationType terminationType = 2;</code>
     */
    int getTerminationTypeValue();
    /**
     * <pre>
     * Why terminated
     * </pre>
     *
     * <code>.si.v1.AllocationReleaseResponse.TerminationType terminationType = 2;</code>
     */
    si.v1.Si.AllocationReleaseResponse.TerminationType getTerminationType();

    /**
     * <pre>
     * Message (for human readble)
     * </pre>
     *
     * <code>string message = 3;</code>
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * Message (for human readble)
     * </pre>
     *
     * <code>string message = 3;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * <pre>
   * When allocation released, either by RM or preempted by scheduler. It will be sent back to RM.
   * </pre>
   *
   * Protobuf type {@code si.v1.AllocationReleaseResponse}
   */
  public  static final class AllocationReleaseResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:si.v1.AllocationReleaseResponse)
      AllocationReleaseResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllocationReleaseResponse.newBuilder() to construct.
    private AllocationReleaseResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllocationReleaseResponse() {
      allocationUUID_ = "";
      terminationType_ = 0;
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AllocationReleaseResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              allocationUUID_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              terminationType_ = rawValue;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return si.v1.Si.internal_static_si_v1_AllocationReleaseResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return si.v1.Si.internal_static_si_v1_AllocationReleaseResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              si.v1.Si.AllocationReleaseResponse.class, si.v1.Si.AllocationReleaseResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code si.v1.AllocationReleaseResponse.TerminationType}
     */
    public enum TerminationType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * STOPPED by ResourceManager.
       * </pre>
       *
       * <code>STOPPED_BY_RM = 0;</code>
       */
      STOPPED_BY_RM(0),
      /**
       * <pre>
       * TIMEOUT (when timeout of allocation set)
       * </pre>
       *
       * <code>TIMEOUT = 1;</code>
       */
      TIMEOUT(1),
      /**
       * <pre>
       * PREEMPTED BY SCHEDULER
       * </pre>
       *
       * <code>PREEMPTED_BY_SCHEDULER = 2;</code>
       */
      PREEMPTED_BY_SCHEDULER(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * STOPPED by ResourceManager.
       * </pre>
       *
       * <code>STOPPED_BY_RM = 0;</code>
       */
      public static final int STOPPED_BY_RM_VALUE = 0;
      /**
       * <pre>
       * TIMEOUT (when timeout of allocation set)
       * </pre>
       *
       * <code>TIMEOUT = 1;</code>
       */
      public static final int TIMEOUT_VALUE = 1;
      /**
       * <pre>
       * PREEMPTED BY SCHEDULER
       * </pre>
       *
       * <code>PREEMPTED_BY_SCHEDULER = 2;</code>
       */
      public static final int PREEMPTED_BY_SCHEDULER_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TerminationType valueOf(int value) {
        return forNumber(value);
      }

      public static TerminationType forNumber(int value) {
        switch (value) {
          case 0: return STOPPED_BY_RM;
          case 1: return TIMEOUT;
          case 2: return PREEMPTED_BY_SCHEDULER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TerminationType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TerminationType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TerminationType>() {
              public TerminationType findValueByNumber(int number) {
                return TerminationType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return si.v1.Si.AllocationReleaseResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final TerminationType[] VALUES = values();

      public static TerminationType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TerminationType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:si.v1.AllocationReleaseResponse.TerminationType)
    }

    public static final int ALLOCATIONUUID_FIELD_NUMBER = 1;
    private volatile java.lang.Object allocationUUID_;
    /**
     * <pre>
     * UUID of allocation.
     * </pre>
     *
     * <code>string allocationUUID = 1;</code>
     */
    public java.lang.String getAllocationUUID() {
      java.lang.Object ref = allocationUUID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        allocationUUID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * UUID of allocation.
     * </pre>
     *
     * <code>string allocationUUID = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAllocationUUIDBytes() {
      java.lang.Object ref = allocationUUID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        allocationUUID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TERMINATIONTYPE_FIELD_NUMBER = 2;
    private int terminationType_;
    /**
     * <pre>
     * Why terminated
     * </pre>
     *
     * <code>.si.v1.AllocationReleaseResponse.TerminationType terminationType = 2;</code>
     */
    public int getTerminationTypeValue() {
      return terminationType_;
    }
    /**
     * <pre>
     * Why terminated
     * </pre>
     *
     * <code>.si.v1.AllocationReleaseResponse.TerminationType terminationType = 2;</code>
     */
    public si.v1.Si.AllocationReleaseResponse.TerminationType getTerminationType() {
      si.v1.Si.AllocationReleaseResponse.TerminationType result = si.v1.Si.AllocationReleaseResponse.TerminationType.valueOf(terminationType_);
      return result == null ? si.v1.Si.AllocationReleaseResponse.TerminationType.UNRECOGNIZED : result;
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private volatile java.lang.Object message_;
    /**
     * <pre>
     * Message (for human readble)
     * </pre>
     *
     * <code>string message = 3;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Message (for human readble)
     * </pre>
     *
     * <code>string message = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAllocationUUIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, allocationUUID_);
      }
      if (terminationType_ != si.v1.Si.AllocationReleaseResponse.TerminationType.STOPPED_BY_RM.getNumber()) {
        output.writeEnum(2, terminationType_);
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, message_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAllocationUUIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, allocationUUID_);
      }
      if (terminationType_ != si.v1.Si.AllocationReleaseResponse.TerminationType.STOPPED_BY_RM.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, terminationType_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof si.v1.Si.AllocationReleaseResponse)) {
        return super.equals(obj);
      }
      si.v1.Si.AllocationReleaseResponse other = (si.v1.Si.AllocationReleaseResponse) obj;

      boolean result = true;
      result = result && getAllocationUUID()
          .equals(other.getAllocationUUID());
      result = result && terminationType_ == other.terminationType_;
      result = result && getMessage()
          .equals(other.getMessage());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALLOCATIONUUID_FIELD_NUMBER;
      hash = (53 * hash) + getAllocationUUID().hashCode();
      hash = (37 * hash) + TERMINATIONTYPE_FIELD_NUMBER;
      hash = (53 * hash) + terminationType_;
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static si.v1.Si.AllocationReleaseResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationReleaseResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleaseResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationReleaseResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleaseResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static si.v1.Si.AllocationReleaseResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleaseResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationReleaseResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleaseResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationReleaseResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static si.v1.Si.AllocationReleaseResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static si.v1.Si.AllocationReleaseResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(si.v1.Si.AllocationReleaseResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * When allocation released, either by RM or preempted by scheduler. It will be sent back to RM.
     * </pre>
     *
     * Protobuf type {@code si.v1.AllocationReleaseResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:si.v1.AllocationReleaseResponse)
        si.v1.Si.AllocationReleaseResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return si.v1.Si.internal_static_si_v1_AllocationReleaseResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return si.v1.Si.internal_static_si_v1_AllocationReleaseResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                si.v1.Si.AllocationReleaseResponse.class, si.v1.Si.AllocationReleaseResponse.Builder.class);
      }

      // Construct using si.v1.Si.AllocationReleaseResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        allocationUUID_ = "";

        terminationType_ = 0;

        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return si.v1.Si.internal_static_si_v1_AllocationReleaseResponse_descriptor;
      }

      public si.v1.Si.AllocationReleaseResponse getDefaultInstanceForType() {
        return si.v1.Si.AllocationReleaseResponse.getDefaultInstance();
      }

      public si.v1.Si.AllocationReleaseResponse build() {
        si.v1.Si.AllocationReleaseResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public si.v1.Si.AllocationReleaseResponse buildPartial() {
        si.v1.Si.AllocationReleaseResponse result = new si.v1.Si.AllocationReleaseResponse(this);
        result.allocationUUID_ = allocationUUID_;
        result.terminationType_ = terminationType_;
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof si.v1.Si.AllocationReleaseResponse) {
          return mergeFrom((si.v1.Si.AllocationReleaseResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(si.v1.Si.AllocationReleaseResponse other) {
        if (other == si.v1.Si.AllocationReleaseResponse.getDefaultInstance()) return this;
        if (!other.getAllocationUUID().isEmpty()) {
          allocationUUID_ = other.allocationUUID_;
          onChanged();
        }
        if (other.terminationType_ != 0) {
          setTerminationTypeValue(other.getTerminationTypeValue());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        si.v1.Si.AllocationReleaseResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (si.v1.Si.AllocationReleaseResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object allocationUUID_ = "";
      /**
       * <pre>
       * UUID of allocation.
       * </pre>
       *
       * <code>string allocationUUID = 1;</code>
       */
      public java.lang.String getAllocationUUID() {
        java.lang.Object ref = allocationUUID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          allocationUUID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * UUID of allocation.
       * </pre>
       *
       * <code>string allocationUUID = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAllocationUUIDBytes() {
        java.lang.Object ref = allocationUUID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          allocationUUID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * UUID of allocation.
       * </pre>
       *
       * <code>string allocationUUID = 1;</code>
       */
      public Builder setAllocationUUID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        allocationUUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UUID of allocation.
       * </pre>
       *
       * <code>string allocationUUID = 1;</code>
       */
      public Builder clearAllocationUUID() {
        
        allocationUUID_ = getDefaultInstance().getAllocationUUID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UUID of allocation.
       * </pre>
       *
       * <code>string allocationUUID = 1;</code>
       */
      public Builder setAllocationUUIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        allocationUUID_ = value;
        onChanged();
        return this;
      }

      private int terminationType_ = 0;
      /**
       * <pre>
       * Why terminated
       * </pre>
       *
       * <code>.si.v1.AllocationReleaseResponse.TerminationType terminationType = 2;</code>
       */
      public int getTerminationTypeValue() {
        return terminationType_;
      }
      /**
       * <pre>
       * Why terminated
       * </pre>
       *
       * <code>.si.v1.AllocationReleaseResponse.TerminationType terminationType = 2;</code>
       */
      public Builder setTerminationTypeValue(int value) {
        terminationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Why terminated
       * </pre>
       *
       * <code>.si.v1.AllocationReleaseResponse.TerminationType terminationType = 2;</code>
       */
      public si.v1.Si.AllocationReleaseResponse.TerminationType getTerminationType() {
        si.v1.Si.AllocationReleaseResponse.TerminationType result = si.v1.Si.AllocationReleaseResponse.TerminationType.valueOf(terminationType_);
        return result == null ? si.v1.Si.AllocationReleaseResponse.TerminationType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Why terminated
       * </pre>
       *
       * <code>.si.v1.AllocationReleaseResponse.TerminationType terminationType = 2;</code>
       */
      public Builder setTerminationType(si.v1.Si.AllocationReleaseResponse.TerminationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        terminationType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Why terminated
       * </pre>
       *
       * <code>.si.v1.AllocationReleaseResponse.TerminationType terminationType = 2;</code>
       */
      public Builder clearTerminationType() {
        
        terminationType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <pre>
       * Message (for human readble)
       * </pre>
       *
       * <code>string message = 3;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Message (for human readble)
       * </pre>
       *
       * <code>string message = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Message (for human readble)
       * </pre>
       *
       * <code>string message = 3;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Message (for human readble)
       * </pre>
       *
       * <code>string message = 3;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Message (for human readble)
       * </pre>
       *
       * <code>string message = 3;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:si.v1.AllocationReleaseResponse)
    }

    // @@protoc_insertion_point(class_scope:si.v1.AllocationReleaseResponse)
    private static final si.v1.Si.AllocationReleaseResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new si.v1.Si.AllocationReleaseResponse();
    }

    public static si.v1.Si.AllocationReleaseResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllocationReleaseResponse>
        PARSER = new com.google.protobuf.AbstractParser<AllocationReleaseResponse>() {
      public AllocationReleaseResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllocationReleaseResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AllocationReleaseResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllocationReleaseResponse> getParserForType() {
      return PARSER;
    }

    public si.v1.Si.AllocationReleaseResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int SI_SECRET_FIELD_NUMBER = 1059;
  /**
   * <pre>
   * Indicates that a field MAY contain information that is sensitive
   * and MUST be treated as such (e.g. not logged).
   * </pre>
   *
   * <code>extend .google.protobuf.FieldOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.FieldOptions,
      java.lang.Boolean> siSecret = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Boolean.class,
        null);
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_RegisterResourceManagerRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_RegisterResourceManagerRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_RegisterResourceManagerResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_RegisterResourceManagerResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_UpdateRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_UpdateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_UpdateResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_UpdateResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_RejectedJob_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_RejectedJob_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AcceptedJob_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AcceptedJob_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_RejectedNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_RejectedNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AcceptedNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AcceptedNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_Priority_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_Priority_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_Resource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_Resource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_Resource_ResourcesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_Resource_ResourcesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_Quantity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_Quantity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AllocationAsk_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AllocationAsk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AllocationAsk_TagsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AllocationAsk_TagsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_UserGroupInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_UserGroupInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AddJobRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AddJobRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_RemoveJobRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_RemoveJobRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_PlacementConstraint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_PlacementConstraint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_SimplePlacementConstraint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_SimplePlacementConstraint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_NodeAffinityConstraints_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_NodeAffinityConstraints_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AllocationAffinityConstraints_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AllocationAffinityConstraints_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AffinityTargetExpression_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AffinityTargetExpression_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AllocationReleasesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AllocationReleasesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AllocationReleaseRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AllocationReleaseRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AllocationAskReleaseRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AllocationAskReleaseRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_NewNodeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_NewNodeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_NewNodeInfo_AttributesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_NewNodeInfo_AttributesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_UpdateNodeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_UpdateNodeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_UpdateNodeInfo_AttributesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_UpdateNodeInfo_AttributesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_UtilizationReport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_UtilizationReport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_Allocation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_Allocation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_Allocation_AllocationTagsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_Allocation_AllocationTagsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_RejectedAllocationAsk_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_RejectedAllocationAsk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_NodeRecommendation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_NodeRecommendation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_si_v1_AllocationReleaseResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_si_v1_AllocationReleaseResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\010si.proto\022\005si.v1\032 google/protobuf/descr" +
      "iptor.proto\032\037google/protobuf/timestamp.p" +
      "roto\032\036google/protobuf/wrappers.proto\"T\n\036" +
      "RegisterResourceManagerRequest\022\014\n\004rmId\030\001" +
      " \001(\t\022\017\n\007version\030\002 \001(\t\022\023\n\013policyGroup\030\003 \001" +
      "(\t\"!\n\037RegisterResourceManagerResponse\"\335\002" +
      "\n\rUpdateRequest\022\"\n\004asks\030\001 \003(\0132\024.si.v1.Al" +
      "locationAsk\0222\n\010releases\030\002 \001(\0132 .si.v1.Al" +
      "locationReleasesRequest\022/\n\023newSchedulabl" +
      "eNodes\030\003 \003(\0132\022.si.v1.NewNodeInfo\022+\n\014upda" +
      "tedNodes\030\004 \003(\0132\025.si.v1.UpdateNodeInfo\0224\n" +
      "\022utilizationReports\030\005 \003(\0132\030.si.v1.Utiliz" +
      "ationReport\022\014\n\004rmId\030\006 \001(\t\022%\n\007newJobs\030\010 \003" +
      "(\0132\024.si.v1.AddJobRequest\022+\n\nremoveJobs\030\t" +
      " \003(\0132\027.si.v1.RemoveJobRequest\"\205\004\n\016Update" +
      "Response\0229\n\006action\030\001 \001(\0162).si.v1.UpdateR" +
      "esponse.ActionFromScheduler\022)\n\016newAlloca" +
      "tions\030\002 \003(\0132\021.si.v1.Allocation\022=\n\023releas" +
      "edAllocations\030\003 \003(\0132 .si.v1.AllocationRe" +
      "leaseResponse\0229\n\023rejectedAllocations\030\004 \003" +
      "(\0132\034.si.v1.RejectedAllocationAsk\0226\n\023node" +
      "Recommendations\030\005 \003(\0132\031.si.v1.NodeRecomm" +
      "endation\022(\n\014rejectedJobs\030\006 \003(\0132\022.si.v1.R" +
      "ejectedJob\022(\n\014acceptedJobs\030\007 \003(\0132\022.si.v1" +
      ".AcceptedJob\022*\n\rrejectedNodes\030\010 \003(\0132\023.si" +
      ".v1.RejectedNode\022*\n\racceptedNodes\030\t \003(\0132" +
      "\023.si.v1.AcceptedNode\"/\n\023ActionFromSchedu" +
      "ler\022\014\n\010NOACTION\020\000\022\n\n\006RESYNC\020\001\",\n\013Rejecte" +
      "dJob\022\r\n\005jobId\030\001 \001(\t\022\016\n\006reason\030\002 \001(\t\"\034\n\013A" +
      "cceptedJob\022\r\n\005jobId\030\001 \001(\t\".\n\014RejectedNod" +
      "e\022\016\n\006nodeId\030\001 \001(\t\022\016\n\006reason\030\002 \001(\t\"\036\n\014Acc" +
      "eptedNode\022\016\n\006nodeId\030\001 \001(\t\"L\n\010Priority\022\027\n" +
      "\rpriorityValue\030\001 \001(\005H\000\022\033\n\021priorityClassN" +
      "ame\030\002 \001(\tH\000B\n\n\010priority\"\200\001\n\010Resource\0221\n\t" +
      "resources\030\001 \003(\0132\036.si.v1.Resource.Resourc" +
      "esEntry\032A\n\016ResourcesEntry\022\013\n\003key\030\001 \001(\t\022\036" +
      "\n\005value\030\002 \001(\0132\017.si.v1.Quantity:\0028\001\"\031\n\010Qu" +
      "antity\022\r\n\005value\030\001 \001(\003\"\244\003\n\rAllocationAsk\022" +
      "\025\n\rallocationKey\030\001 \001(\t\022$\n\013resourceAsk\030\002 " +
      "\001(\0132\017.si.v1.Resource\022,\n\004tags\030\003 \003(\0132\036.si." +
      "v1.AllocationAsk.TagsEntry\022!\n\010priority\030\004" +
      " \001(\0132\017.si.v1.Priority\0227\n\023placementConstr" +
      "aint\030\006 \001(\0132\032.si.v1.PlacementConstraint\022\026" +
      "\n\016maxAllocations\030\007 \001(\005\022(\n\003ugi\030\010 \001(\0132\033.si" +
      ".v1.UserGroupInformation\022\021\n\tqueueName\030\t " +
      "\001(\t\022$\n\034executionTimeoutMilliSeconds\030\n \001(" +
      "\003\022\r\n\005jobId\030\013 \001(\t\022\025\n\rPartitionName\030\014 \001(\t\032" +
      "+\n\tTagsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t" +
      ":\0028\001\"4\n\024UserGroupInformation\022\014\n\004user\030\001 \001" +
      "(\t\022\016\n\006groups\030\002 \003(\t\"H\n\rAddJobRequest\022\r\n\005j" +
      "obId\030\001 \001(\t\022\021\n\tqueueName\030\002 \001(\t\022\025\n\rpartiti" +
      "onName\030\003 \001(\t\"8\n\020RemoveJobRequest\022\r\n\005jobI" +
      "d\030\001 \001(\t\022\025\n\rpartitionName\030\002 \001(\t\"a\n\023Placem" +
      "entConstraint\022<\n\020simpleConstraint\030\001 \001(\0132" +
      " .si.v1.SimplePlacementConstraintH\000B\014\n\nc" +
      "onstraint\"\246\001\n\031SimplePlacementConstraint\022" +
      ">\n\026nodeAffinityConstraint\030\001 \001(\0132\036.si.v1." +
      "NodeAffinityConstraints\022I\n\033allocationAff" +
      "inityAttribute\030\002 \001(\0132$.si.v1.AllocationA" +
      "ffinityConstraints\"U\n\027NodeAffinityConstr" +
      "aints\022:\n\021targetExpressions\030\002 \003(\0132\037.si.v1" +
      ".AffinityTargetExpression\"\254\001\n\035Allocation" +
      "AffinityConstraints\022\r\n\005scope\030\001 \001(\t\022:\n\021tr" +
      "agetExpressions\030\002 \003(\0132\037.si.v1.AffinityTa" +
      "rgetExpression\022\026\n\016minCardinality\030\003 \001(\005\022\026" +
      "\n\016maxCardinality\030\004 \001(\005\022\020\n\010required\030\005 \001(\010" +
      "\"\304\001\n\030AffinityTargetExpression\0227\n\016targetO" +
      "perator\030\001 \001(\0132\037.si.v1.AffinityTargetExpr" +
      "ession\022\021\n\ttargetKey\030\002 \001(\t\022\024\n\014targetValue" +
      "s\030\003 \003(\t\"F\n\026AffinityTargetOperator\022\006\n\002IN\020" +
      "\000\022\n\n\006NOT_IN\020\001\022\t\n\005EXIST\020\002\022\r\n\tNOT_EXIST\020\003\"" +
      "\237\001\n\031AllocationReleasesRequest\022=\n\024allocat" +
      "ionsToRelease\030\001 \003(\0132\037.si.v1.AllocationRe" +
      "leaseRequest\022C\n\027allocationAsksToRelease\030" +
      "\002 \003(\0132\".si.v1.AllocationAskReleaseReques" +
      "t\"_\n\030AllocationReleaseRequest\022\014\n\004uuid\030\001 " +
      "\001(\t\022\r\n\005jobId\030\002 \001(\t\022\025\n\rpartitionName\030\003 \001(" +
      "\t\022\017\n\007message\030\004 \001(\t\"k\n\033AllocationAskRelea" +
      "seRequest\022\025\n\rallocationkey\030\001 \001(\t\022\r\n\005jobI" +
      "d\030\002 \001(\t\022\025\n\rpartitionName\030\003 \001(\t\022\017\n\007messag" +
      "e\030\004 \001(\t\"\346\001\n\013NewNodeInfo\022\016\n\006nodeId\030\001 \001(\t\022" +
      "6\n\nattributes\030\002 \003(\0132\".si.v1.NewNodeInfo." +
      "AttributesEntry\022,\n\023schedulableResource\030\003" +
      " \001(\0132\017.si.v1.Resource\022.\n\023existingAllocat" +
      "ions\030\004 \003(\0132\021.si.v1.Allocation\0321\n\017Attribu" +
      "tesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001" +
      "\"\273\002\n\016UpdateNodeInfo\022\016\n\006nodeId\030\001 \001(\t\0229\n\na" +
      "ttributes\030\002 \003(\0132%.si.v1.UpdateNodeInfo.A" +
      "ttributesEntry\022,\n\023schedulableResource\030\003 " +
      "\001(\0132\017.si.v1.Resource\0222\n\006action\030\004 \001(\0162\".s" +
      "i.v1.UpdateNodeInfo.ActionFromRM\0321\n\017Attr" +
      "ibutesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:" +
      "\0028\001\"I\n\014ActionFromRM\022\016\n\nDRAIN_NODE\020\000\022\017\n\013D" +
      "ECOMISSION\020\001\022\030\n\024DRAIN_TO_SCHEDULABLE\020\002\"L" +
      "\n\021UtilizationReport\022\n\n\002id\030\001 \001(\t\022+\n\022actua" +
      "lUsedResource\030\002 \001(\0132\017.si.v1.Resource\"\272\002\n" +
      "\nAllocation\022\025\n\rallocationKey\030\001 \001(\t\022=\n\016al" +
      "locationTags\030\002 \003(\0132%.si.v1.Allocation.Al" +
      "locationTagsEntry\022\014\n\004uuid\030\003 \001(\t\022)\n\020resou" +
      "rcePerAlloc\030\005 \001(\0132\017.si.v1.Resource\022!\n\010pr" +
      "iority\030\006 \001(\0132\017.si.v1.Priority\022\021\n\tqueueNa" +
      "me\030\007 \001(\t\022\016\n\006nodeId\030\010 \001(\t\022\r\n\005jobId\030\t \001(\t\022" +
      "\021\n\tpartition\030\n \001(\t\0325\n\023AllocationTagsEntr" +
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\">\n\025Rej" +
      "ectedAllocationAsk\022\025\n\rallocationKey\030\001 \001(" +
      "\t\022\016\n\006reason\030\002 \001(\t\"^\n\022NodeRecommendation\022" +
      "7\n\036recommendedSchedulableResource\030\001 \001(\0132" +
      "\017.si.v1.Resource\022\017\n\007message\030\002 \001(\t\"\336\001\n\031Al" +
      "locationReleaseResponse\022\026\n\016allocationUUI" +
      "D\030\001 \001(\t\022I\n\017terminationType\030\002 \001(\01620.si.v1" +
      ".AllocationReleaseResponse.TerminationTy" +
      "pe\022\017\n\007message\030\003 \001(\t\"M\n\017TerminationType\022\021" +
      "\n\rSTOPPED_BY_RM\020\000\022\013\n\007TIMEOUT\020\001\022\032\n\026PREEMP" +
      "TED_BY_SCHEDULER\020\0022\264\001\n\tScheduler\022j\n\027Regi" +
      "sterResourceManager\022%.si.v1.RegisterReso" +
      "urceManagerRequest\032&.si.v1.RegisterResou" +
      "rceManagerResponse\"\000\022;\n\006Update\022\024.si.v1.U" +
      "pdateRequest\032\025.si.v1.UpdateResponse\"\000(\0010" +
      "\001:1\n\tsi_secret\022\035.google.protobuf.FieldOp" +
      "tions\030\243\010 \001(\010B\004Z\002sib\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DescriptorProtos.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
        }, assigner);
    internal_static_si_v1_RegisterResourceManagerRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_si_v1_RegisterResourceManagerRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_RegisterResourceManagerRequest_descriptor,
        new java.lang.String[] { "RmId", "Version", "PolicyGroup", });
    internal_static_si_v1_RegisterResourceManagerResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_si_v1_RegisterResourceManagerResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_RegisterResourceManagerResponse_descriptor,
        new java.lang.String[] { });
    internal_static_si_v1_UpdateRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_si_v1_UpdateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_UpdateRequest_descriptor,
        new java.lang.String[] { "Asks", "Releases", "NewSchedulableNodes", "UpdatedNodes", "UtilizationReports", "RmId", "NewJobs", "RemoveJobs", });
    internal_static_si_v1_UpdateResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_si_v1_UpdateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_UpdateResponse_descriptor,
        new java.lang.String[] { "Action", "NewAllocations", "ReleasedAllocations", "RejectedAllocations", "NodeRecommendations", "RejectedJobs", "AcceptedJobs", "RejectedNodes", "AcceptedNodes", });
    internal_static_si_v1_RejectedJob_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_si_v1_RejectedJob_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_RejectedJob_descriptor,
        new java.lang.String[] { "JobId", "Reason", });
    internal_static_si_v1_AcceptedJob_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_si_v1_AcceptedJob_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AcceptedJob_descriptor,
        new java.lang.String[] { "JobId", });
    internal_static_si_v1_RejectedNode_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_si_v1_RejectedNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_RejectedNode_descriptor,
        new java.lang.String[] { "NodeId", "Reason", });
    internal_static_si_v1_AcceptedNode_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_si_v1_AcceptedNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AcceptedNode_descriptor,
        new java.lang.String[] { "NodeId", });
    internal_static_si_v1_Priority_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_si_v1_Priority_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_Priority_descriptor,
        new java.lang.String[] { "PriorityValue", "PriorityClassName", "Priority", });
    internal_static_si_v1_Resource_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_si_v1_Resource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_Resource_descriptor,
        new java.lang.String[] { "Resources", });
    internal_static_si_v1_Resource_ResourcesEntry_descriptor =
      internal_static_si_v1_Resource_descriptor.getNestedTypes().get(0);
    internal_static_si_v1_Resource_ResourcesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_Resource_ResourcesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_si_v1_Quantity_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_si_v1_Quantity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_Quantity_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_si_v1_AllocationAsk_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_si_v1_AllocationAsk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AllocationAsk_descriptor,
        new java.lang.String[] { "AllocationKey", "ResourceAsk", "Tags", "Priority", "PlacementConstraint", "MaxAllocations", "Ugi", "QueueName", "ExecutionTimeoutMilliSeconds", "JobId", "PartitionName", });
    internal_static_si_v1_AllocationAsk_TagsEntry_descriptor =
      internal_static_si_v1_AllocationAsk_descriptor.getNestedTypes().get(0);
    internal_static_si_v1_AllocationAsk_TagsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AllocationAsk_TagsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_si_v1_UserGroupInformation_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_si_v1_UserGroupInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_UserGroupInformation_descriptor,
        new java.lang.String[] { "User", "Groups", });
    internal_static_si_v1_AddJobRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_si_v1_AddJobRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AddJobRequest_descriptor,
        new java.lang.String[] { "JobId", "QueueName", "PartitionName", });
    internal_static_si_v1_RemoveJobRequest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_si_v1_RemoveJobRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_RemoveJobRequest_descriptor,
        new java.lang.String[] { "JobId", "PartitionName", });
    internal_static_si_v1_PlacementConstraint_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_si_v1_PlacementConstraint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_PlacementConstraint_descriptor,
        new java.lang.String[] { "SimpleConstraint", "Constraint", });
    internal_static_si_v1_SimplePlacementConstraint_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_si_v1_SimplePlacementConstraint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_SimplePlacementConstraint_descriptor,
        new java.lang.String[] { "NodeAffinityConstraint", "AllocationAffinityAttribute", });
    internal_static_si_v1_NodeAffinityConstraints_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_si_v1_NodeAffinityConstraints_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_NodeAffinityConstraints_descriptor,
        new java.lang.String[] { "TargetExpressions", });
    internal_static_si_v1_AllocationAffinityConstraints_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_si_v1_AllocationAffinityConstraints_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AllocationAffinityConstraints_descriptor,
        new java.lang.String[] { "Scope", "TragetExpressions", "MinCardinality", "MaxCardinality", "Required", });
    internal_static_si_v1_AffinityTargetExpression_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_si_v1_AffinityTargetExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AffinityTargetExpression_descriptor,
        new java.lang.String[] { "TargetOperator", "TargetKey", "TargetValues", });
    internal_static_si_v1_AllocationReleasesRequest_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_si_v1_AllocationReleasesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AllocationReleasesRequest_descriptor,
        new java.lang.String[] { "AllocationsToRelease", "AllocationAsksToRelease", });
    internal_static_si_v1_AllocationReleaseRequest_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_si_v1_AllocationReleaseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AllocationReleaseRequest_descriptor,
        new java.lang.String[] { "Uuid", "JobId", "PartitionName", "Message", });
    internal_static_si_v1_AllocationAskReleaseRequest_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_si_v1_AllocationAskReleaseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AllocationAskReleaseRequest_descriptor,
        new java.lang.String[] { "Allocationkey", "JobId", "PartitionName", "Message", });
    internal_static_si_v1_NewNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_si_v1_NewNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_NewNodeInfo_descriptor,
        new java.lang.String[] { "NodeId", "Attributes", "SchedulableResource", "ExistingAllocations", });
    internal_static_si_v1_NewNodeInfo_AttributesEntry_descriptor =
      internal_static_si_v1_NewNodeInfo_descriptor.getNestedTypes().get(0);
    internal_static_si_v1_NewNodeInfo_AttributesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_NewNodeInfo_AttributesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_si_v1_UpdateNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_si_v1_UpdateNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_UpdateNodeInfo_descriptor,
        new java.lang.String[] { "NodeId", "Attributes", "SchedulableResource", "Action", });
    internal_static_si_v1_UpdateNodeInfo_AttributesEntry_descriptor =
      internal_static_si_v1_UpdateNodeInfo_descriptor.getNestedTypes().get(0);
    internal_static_si_v1_UpdateNodeInfo_AttributesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_UpdateNodeInfo_AttributesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_si_v1_UtilizationReport_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_si_v1_UtilizationReport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_UtilizationReport_descriptor,
        new java.lang.String[] { "Id", "ActualUsedResource", });
    internal_static_si_v1_Allocation_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_si_v1_Allocation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_Allocation_descriptor,
        new java.lang.String[] { "AllocationKey", "AllocationTags", "Uuid", "ResourcePerAlloc", "Priority", "QueueName", "NodeId", "JobId", "Partition", });
    internal_static_si_v1_Allocation_AllocationTagsEntry_descriptor =
      internal_static_si_v1_Allocation_descriptor.getNestedTypes().get(0);
    internal_static_si_v1_Allocation_AllocationTagsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_Allocation_AllocationTagsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_si_v1_RejectedAllocationAsk_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_si_v1_RejectedAllocationAsk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_RejectedAllocationAsk_descriptor,
        new java.lang.String[] { "AllocationKey", "Reason", });
    internal_static_si_v1_NodeRecommendation_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_si_v1_NodeRecommendation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_NodeRecommendation_descriptor,
        new java.lang.String[] { "RecommendedSchedulableResource", "Message", });
    internal_static_si_v1_AllocationReleaseResponse_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_si_v1_AllocationReleaseResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_si_v1_AllocationReleaseResponse_descriptor,
        new java.lang.String[] { "AllocationUUID", "TerminationType", "Message", });
    siSecret.internalInit(descriptor.getExtensions().get(0));
    com.google.protobuf.DescriptorProtos.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
